v0 <- BeginPlainFunction -> v1
    BeginObjectLiteral
    v2 <- EndObjectLiteral
    v3 <- CreateNamedVariable 'k1', 'const', v2
    BeginObjectLiteral
    v4 <- EndObjectLiteral
    v5 <- CreateNamedVariable 'k2', 'const', v4
    BeginObjectLiteral
    v6 <- EndObjectLiteral
    v7 <- CreateNamedVariable 'k3', 'const', v6
    v8 <- LoadUndefined
    v9 <- LoadInteger '1'
    v10 <- CreateArray [v8, v9]
    v11 <- LoadString '0'
    BeginObjectLiteral
        BeginObjectLiteralMethod `get` -> v12
            v13 <- CreateNamedVariable 'input', 'none'
            v14 <- LoadString '1'
            v15 <- BeginArrowFunction -> 
                v16 <- LoadInteger '3'
                v17 <- CreateArray [v7, v16]
                Return v17
            EndArrowFunction
            BeginObjectLiteral
                ObjectLiteralAddProperty `get`, v15
            v18 <- EndObjectLiteral
            v19 <- CreateNamedVariable 'Object', 'none'
            v20 <- CallMethod v19, 'defineProperty', [v13, v14, v18]
            Return v3
        EndObjectLiteralMethod
    v21 <- EndObjectLiteral
    v22 <- CreateNamedVariable 'Object', 'none'
    v23 <- CallMethod v22, 'defineProperty', [v10, v11, v21]
    v24 <- LoadInteger '2'
    v25 <- CreateArray [v5, v24]
    v26 <- CreateArray [v23, v25]
    v27 <- CreateNamedVariable 'input', 'const', v26
    v28 <- Construct v1, [v27]
    v29 <- CreateNamedVariable 'col', 'const', v28
    v30 <- LoadString 'size'
    v31 <- TestIn v30, v29
    BeginIf v31
        v32 <- LoadInteger '2'
        v33 <- GetProperty v29, 'size'
    EndIf
    v34 <- CallMethod v29, 'has', [v3]
    v35 <- CallMethod v29, 'has', [v5]
    v36 <- CallMethod v29, 'has', [v7]
EndPlainFunction
v37 <- CreateNamedVariable 'Map', 'none'
v38 <- CallFunction v0, [v37]
v39 <- CallFunction v0, [v37]
v40 <- CallFunction v0, [v37]
v41 <- CallFunction v0, [v37]
v42 <- CallFunction v0, []
v43 <- CreateNamedVariable 'WeakMap', 'none'
v44 <- CallFunction v0, [v43]
v45 <- CallFunction v0, [v43]
v46 <- CallFunction v0, [v43]
v47 <- CallFunction v0, [v43]
v48 <- CallFunction v0, []


function TestMapConstructorEntrySideEffect(a1) {
    const k1 = {};
    const k2 = {};
    const k3 = {};
    const v10 = [,1];
    const v21 = {
        get() {
            const v15 = () => {
                return [k3,3];
            };
            Object.defineProperty(input, "1", { get: v15 });
            return k1;
        },
    };
    const input = [Object.defineProperty(v10, "0", v21),[k2,2]];
    const v28 = new a1(input);
    const col = v28;
    if ("size" in col) {
        col.size;
    }
    col.has(k1);
    col.has(k2);
    col.has(k3);
}
TestMapConstructorEntrySideEffect(Map);
TestMapConstructorEntrySideEffect(Map);
TestMapConstructorEntrySideEffect(Map);
TestMapConstructorEntrySideEffect(Map);
TestMapConstructorEntrySideEffect();
TestMapConstructorEntrySideEffect(WeakMap);
TestMapConstructorEntrySideEffect(WeakMap);
TestMapConstructorEntrySideEffect(WeakMap);
TestMapConstructorEntrySideEffect(WeakMap);
TestMapConstructorEntrySideEffect();

FuzzIL program written to corpus/map-constructor-entry-side-effect3.fzil
