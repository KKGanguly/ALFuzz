v0 <- BeginPlainFunction -> v1
    v2 <- GetElement v1, '0'
    v3 <- LoadString ''
    SetElement v1, '1', v3
EndPlainFunction
v4 <- BeginArrowFunction -> v5
    Return v5
EndArrowFunction
v6 <- LoadInteger '0'
v7 <- LoadInteger '0'
v8 <- CreateArray [v6, v7]
v9 <- CallMethod v8, 'map', [v4]
v10 <- CallFunction v0, [v9]
v11 <- BeginArrowFunction -> v12
    Return v12
EndArrowFunction
v13 <- LoadInteger '0'
v14 <- LoadInteger '0'
v15 <- CreateArray [v13, v14]
v16 <- CallMethod v15, 'map', [v11]
v17 <- CallFunction v0, [v16]
v18 <- BeginArrowFunction -> v19
    Return v19
EndArrowFunction
v20 <- LoadInteger '0'
v21 <- LoadInteger '0'
v22 <- CreateArray [v20, v21]
v23 <- CallMethod v22, 'map', [v18]
v24 <- CallFunction v0, [v23]
v25 <- CallFunction v0, []


function foo(a1) {
    a1[0];
    a1[1] = "";
}
const v4 = (a5) => {
    return a5;
};
foo(([0,0]).map(v4));
const v11 = (a12) => {
    return a12;
};
foo(([0,0]).map(v11));
const v18 = (a19) => {
    return a19;
};
foo(([0,0]).map(v18));
foo();

FuzzIL program written to corpus/regress-7254.fzil
