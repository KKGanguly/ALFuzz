v0 <- BeginPlainFunction -> 
    v1 <- CreateNamedVariable 'Symbol', 'none'
    v2 <- GetProperty v1, 'iterator'
    v3 <- LoadArguments
    v4 <- CallMethod v3, 'hasOwnProperty', [v2]
    v5 <- GetProperty v1, 'iterator'
    v6 <- LoadArguments
    v7 <- CallMethod v6, 'propertyIsEnumerable', [v5]
    v8 <- LoadArguments
    v9 <- GetProperty v1, 'iterator'
    v10 <- CreateNamedVariable 'Object', 'none'
    v11 <- CallMethod v10, 'getOwnPropertyDescriptor', [v8, v9]
    v12 <- CreateNamedVariable 'descriptor', 'var', v11
    v13 <- GetProperty v12, 'writable'
    v14 <- GetProperty v12, 'enumerable'
    v15 <- GetProperty v12, 'configurable'
    v16 <- GetProperty v12, 'value'
    v17 <- CreateArray []
    v18 <- GetProperty v1, 'iterator'
    v19 <- GetComputedProperty v17, v18
    v20 <- LoadArguments
    v21 <- GetProperty v1, 'iterator'
    v22 <- GetComputedProperty v20, v21
    v23 <- CreateArray []
    v24 <- GetProperty v1, 'iterator'
    v25 <- GetComputedProperty v23, v24
EndPlainFunction
v26 <- CallFunction v0, []
v27 <- BeginPlainFunction -> 
    v28 <- LoadArguments
    v29 <- CreateNamedVariable 'o', 'var', v28
    v30 <- CreateNamedVariable 'Symbol', 'none'
    v31 <- GetProperty v30, 'iterator'
    v32 <- CallMethod v29, 'hasOwnProperty', [v31]
    v33 <- GetProperty v30, 'iterator'
    v34 <- CallMethod v29, 'propertyIsEnumerable', [v33]
    v35 <- GetProperty v30, 'iterator'
    v36 <- GetComputedProperty v29, v35
    v37 <- CreateArray []
    v38 <- GetProperty v30, 'iterator'
    v39 <- GetComputedProperty v37, v38
EndPlainFunction
v40 <- CallFunction v27, []
v41 <- BeginPlainFunction -> v42, v43, v44
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v42
        ObjectLiteralAddProperty `done`, v43
    v45 <- EndObjectLiteral
EndPlainFunction
v46 <- BeginPlainFunction -> v47, v48, v49
    v50 <- LoadArguments
    v51 <- CreateNamedVariable 'Symbol', 'none'
    v52 <- GetProperty v51, 'iterator'
    v53 <- CallComputedMethod v50, v52, []
    v54 <- CreateNamedVariable 'iterator', 'var', v53
    v55 <- LoadBoolean 'false'
    v56 <- CallMethod v54, 'next', []
    v57 <- LoadBoolean 'false'
    v58 <- CallMethod v54, 'next', []
    v59 <- LoadBoolean 'false'
    v60 <- CallMethod v54, 'next', []
    v61 <- LoadUndefined
    v62 <- LoadBoolean 'true'
    v63 <- CallMethod v54, 'next', []
EndPlainFunction
v64 <- LoadInteger '1'
v65 <- LoadInteger '2'
v66 <- LoadInteger '3'
v67 <- CallFunction v46, [v64, v65, v66]
v68 <- BeginPlainFunction -> v69, v70, v71
    v72 <- LoadArguments
    v73 <- CreateNamedVariable 'args', 'var', v72
    v74 <- CreateNamedVariable 'Symbol', 'none'
    v75 <- GetProperty v74, 'iterator'
    v76 <- CallComputedMethod v73, v75, []
    v77 <- CreateNamedVariable 'iterator', 'var', v76
    v78 <- LoadBoolean 'false'
    v79 <- CallMethod v77, 'next', []
    v80 <- LoadBoolean 'false'
    v81 <- CallMethod v77, 'next', []
    v82 <- LoadBoolean 'false'
    v83 <- CallMethod v77, 'next', []
    v84 <- LoadUndefined
    v85 <- LoadBoolean 'true'
    v86 <- CallMethod v77, 'next', []
EndPlainFunction
v87 <- LoadInteger '1'
v88 <- LoadInteger '2'
v89 <- LoadInteger '3'
v90 <- CallFunction v68, [v87, v88, v89]
v91 <- BeginPlainFunction -> v92, v93, v94
    v95 <- LoadArguments
    v96 <- CreateNamedVariable 'Symbol', 'none'
    v97 <- GetProperty v96, 'iterator'
    v98 <- CallComputedMethod v95, v97, []
    v99 <- CreateNamedVariable 'iterator', 'var', v98
    v100 <- LoadBoolean 'false'
    v101 <- CallMethod v99, 'next', []
    v102 <- LoadBoolean 'false'
    v103 <- CallMethod v99, 'next', []
    v104 <- LoadBoolean 'false'
    v105 <- CallMethod v99, 'next', []
    v106 <- LoadUndefined
    v107 <- LoadBoolean 'true'
    v108 <- CallMethod v99, 'next', []
    v109 <- LoadInteger '4'
    v110 <- LoadArguments
    SetElement v110, '3', v109
    v111 <- LoadInteger '4'
    v112 <- LoadArguments
    SetProperty v112, 'length', v111
    v113 <- LoadUndefined
    v114 <- LoadBoolean 'true'
    v115 <- CallMethod v99, 'next', []
EndPlainFunction
v116 <- LoadInteger '1'
v117 <- LoadInteger '2'
v118 <- LoadInteger '3'
v119 <- CallFunction v91, [v116, v117, v118]
v120 <- BeginPlainFunction -> v121, v122, v123
    v124 <- LoadArguments
    v125 <- CreateNamedVariable 'args', 'var', v124
    v126 <- CreateNamedVariable 'Symbol', 'none'
    v127 <- GetProperty v126, 'iterator'
    v128 <- CallComputedMethod v125, v127, []
    v129 <- CreateNamedVariable 'iterator', 'var', v128
    v130 <- LoadBoolean 'false'
    v131 <- CallMethod v129, 'next', []
    v132 <- LoadBoolean 'false'
    v133 <- CallMethod v129, 'next', []
    v134 <- LoadBoolean 'false'
    v135 <- CallMethod v129, 'next', []
    v136 <- LoadUndefined
    v137 <- LoadBoolean 'true'
    v138 <- CallMethod v129, 'next', []
    v139 <- LoadInteger '4'
    v140 <- LoadArguments
    SetElement v140, '3', v139
    v141 <- LoadInteger '4'
    v142 <- LoadArguments
    SetProperty v142, 'length', v141
    v143 <- LoadUndefined
    v144 <- LoadBoolean 'true'
    v145 <- CallMethod v129, 'next', []
EndPlainFunction
v146 <- LoadInteger '1'
v147 <- LoadInteger '2'
v148 <- LoadInteger '3'
v149 <- CallFunction v120, [v146, v147, v148]
v150 <- BeginPlainFunction -> v151, v152, v153
    v154 <- LoadArguments
    v155 <- CreateNamedVariable 'Symbol', 'none'
    v156 <- GetProperty v155, 'iterator'
    v157 <- CallComputedMethod v154, v156, []
    v158 <- CreateNamedVariable 'iterator', 'var', v157
    v159 <- LoadBoolean 'false'
    v160 <- CallMethod v158, 'next', []
    v161 <- LoadBoolean 'false'
    v162 <- CallMethod v158, 'next', []
    v163 <- LoadInteger '2'
    v164 <- LoadArguments
    SetProperty v164, 'length', v163
    v165 <- LoadUndefined
    v166 <- LoadBoolean 'true'
    v167 <- CallMethod v158, 'next', []
EndPlainFunction
v168 <- LoadInteger '1'
v169 <- LoadInteger '2'
v170 <- LoadInteger '3'
v171 <- CallFunction v150, [v168, v169, v170]
v172 <- BeginPlainFunction -> v173, v174, v175
    v176 <- LoadArguments
    v177 <- CreateNamedVariable 'args', 'var', v176
    v178 <- CreateNamedVariable 'Symbol', 'none'
    v179 <- GetProperty v178, 'iterator'
    v180 <- CallComputedMethod v177, v179, []
    v181 <- CreateNamedVariable 'iterator', 'var', v180
    v182 <- LoadBoolean 'false'
    v183 <- CallMethod v181, 'next', []
    v184 <- LoadBoolean 'false'
    v185 <- CallMethod v181, 'next', []
    v186 <- LoadInteger '2'
    v187 <- LoadArguments
    SetProperty v187, 'length', v186
    v188 <- LoadUndefined
    v189 <- LoadBoolean 'true'
    v190 <- CallMethod v181, 'next', []
EndPlainFunction
v191 <- LoadInteger '1'
v192 <- LoadInteger '2'
v193 <- LoadInteger '3'
v194 <- CallFunction v172, [v191, v192, v193]
v195 <- BeginPlainFunction -> v196, v197, v198
    v199 <- LoadArguments
    v200 <- CreateNamedVariable 'Symbol', 'none'
    v201 <- GetProperty v200, 'iterator'
    v202 <- CallComputedMethod v199, v201, []
    v203 <- CreateNamedVariable 'iterator', 'var', v202
    v204 <- LoadBoolean 'false'
    v205 <- CallMethod v203, 'next', []
    v206 <- LoadBoolean 'false'
    v207 <- CallMethod v203, 'next', []
    v208 <- LoadBoolean 'false'
    v209 <- CallMethod v203, 'next', []
    v210 <- LoadInteger '4'
    v211 <- LoadArguments
    SetProperty v211, 'length', v210
    v212 <- LoadUndefined
    v213 <- LoadBoolean 'false'
    v214 <- CallMethod v203, 'next', []
    v215 <- LoadUndefined
    v216 <- LoadBoolean 'true'
    v217 <- CallMethod v203, 'next', []
EndPlainFunction
v218 <- LoadInteger '1'
v219 <- LoadInteger '2'
v220 <- LoadInteger '3'
v221 <- CallFunction v195, [v218, v219, v220]
v222 <- BeginPlainFunction -> v223, v224, v225
    v226 <- LoadArguments
    v227 <- CreateNamedVariable 'args', 'var', v226
    v228 <- CreateNamedVariable 'Symbol', 'none'
    v229 <- GetProperty v228, 'iterator'
    v230 <- CallComputedMethod v227, v229, []
    v231 <- CreateNamedVariable 'iterator', 'var', v230
    v232 <- LoadBoolean 'false'
    v233 <- CallMethod v231, 'next', []
    v234 <- LoadBoolean 'false'
    v235 <- CallMethod v231, 'next', []
    v236 <- LoadBoolean 'false'
    v237 <- CallMethod v231, 'next', []
    v238 <- LoadInteger '4'
    v239 <- LoadArguments
    SetProperty v239, 'length', v238
    v240 <- LoadUndefined
    v241 <- LoadBoolean 'false'
    v242 <- CallMethod v231, 'next', []
    v243 <- LoadUndefined
    v244 <- LoadBoolean 'true'
    v245 <- CallMethod v231, 'next', []
EndPlainFunction
v246 <- LoadInteger '1'
v247 <- LoadInteger '2'
v248 <- LoadInteger '3'
v249 <- CallFunction v222, [v246, v247, v248]
v250 <- BeginPlainFunction -> 
    v251 <- LoadInteger '0'
    v252 <- CreateNamedVariable 'i', 'var', v251
    v253 <- LoadArguments
    BeginForOfLoop v253 -> v254
        v255 <- LoadArguments
        v256 <- UnaryOperation v252, '++'
        v257 <- GetComputedProperty v255, v256
    EndForOfLoop
    v258 <- LoadArguments
    v259 <- GetProperty v258, 'length'
EndPlainFunction
v260 <- LoadInteger '1'
v261 <- LoadInteger '2'
v262 <- LoadInteger '3'
v263 <- LoadInteger '4'
v264 <- LoadInteger '5'
v265 <- CallFunction v250, [v260, v261, v262, v263, v264]
v266 <- BeginPlainFunction -> 
    v267 <- LoadInteger '0'
    v268 <- CreateNamedVariable 'i', 'var', v267
    v269 <- CreateArray []
    v270 <- GetProperty v269, 'entries'
    v271 <- LoadArguments
    v272 <- CreateNamedVariable 'Symbol', 'none'
    v273 <- GetProperty v272, 'iterator'
    SetComputedProperty v271, v273, v270
    v274 <- LoadArguments
    BeginForOfLoop v274 -> v275
        v276 <- LoadArguments
        v277 <- GetComputedProperty v276, v268
        v278 <- CreateArray [v268, v277]
        v279 <- UnaryOperation v268, '++'
    EndForOfLoop
    v280 <- LoadArguments
    v281 <- GetProperty v280, 'length'
EndPlainFunction
v282 <- LoadInteger '1'
v283 <- LoadInteger '2'
v284 <- LoadInteger '3'
v285 <- LoadInteger '4'
v286 <- LoadInteger '5'
v287 <- CallFunction v266, [v282, v283, v284, v285, v286]
v288 <- BeginPlainFunction -> 
    v289 <- LoadInteger '0'
    v290 <- CreateNamedVariable 'i', 'var', v289
    v291 <- LoadString 'callee'
    v292 <- BeginPlainFunction -> 
    EndPlainFunction
    v293 <- LoadArguments
    v294 <- CallMethod v293, '__defineGetter__', [v291, v292]
    v295 <- LoadString 'length'
    v296 <- BeginPlainFunction -> 
        v297 <- LoadInteger '1'
        Return v297
    EndPlainFunction
    v298 <- LoadArguments
    v299 <- CallMethod v298, '__defineGetter__', [v295, v296]
    v300 <- CreateArray []
    v301 <- GetProperty v300, 'entries'
    v302 <- LoadArguments
    v303 <- CreateNamedVariable 'Symbol', 'none'
    v304 <- GetProperty v303, 'iterator'
    SetComputedProperty v302, v304, v301
    v305 <- LoadArguments
    BeginForOfLoop v305 -> v306
        v307 <- LoadArguments
        v308 <- GetComputedProperty v307, v290
        v309 <- CreateArray [v290, v308]
        v310 <- UnaryOperation v290, '++'
    EndForOfLoop
    v311 <- LoadArguments
    v312 <- GetProperty v311, 'length'
EndPlainFunction
v313 <- LoadInteger '1'
v314 <- LoadInteger '2'
v315 <- LoadInteger '3'
v316 <- LoadInteger '4'
v317 <- LoadInteger '5'
v318 <- CallFunction v288, [v313, v314, v315, v316, v317]
v319 <- BeginPlainFunction -> 
    v320 <- LoadInteger '0'
    v321 <- CreateNamedVariable 'i', 'var', v320
    v322 <- LoadArguments
    BeginForOfLoop v322 -> v323
        v324 <- LoadArguments
        v325 <- GetComputedProperty v324, v321
        v326 <- LoadInteger '2'
        v327 <- LoadArguments
        v328 <- LoadInteger '1'
        v329 <- BinaryOperation v321, '+', v328
        UpdateComputedProperty v327, v329, '*',v326
        v330 <- UnaryOperation v321, '++'
    EndForOfLoop
    v331 <- LoadArguments
    v332 <- GetProperty v331, 'length'
EndPlainFunction
v333 <- LoadInteger '1'
v334 <- LoadInteger '2'
v335 <- LoadInteger '3'
v336 <- LoadInteger '4'
v337 <- LoadInteger '5'
v338 <- CallFunction v319, [v333, v334, v335, v336, v337]
v339 <- BeginPlainFunction -> v340, v341, v342, v343, v344
    v345 <- LoadInteger '0'
    v346 <- CreateNamedVariable 'i', 'var', v345
    v347 <- LoadArguments
    BeginForOfLoop v347 -> v348
        v349 <- LoadArguments
        v350 <- GetComputedProperty v349, v346
        Reassign v340, v341
        Reassign v341, v342
        Reassign v343, v344
        v351 <- UnaryOperation v346, '++'
    EndForOfLoop
    v352 <- LoadArguments
    v353 <- GetProperty v352, 'length'
EndPlainFunction
v354 <- LoadInteger '1'
v355 <- LoadInteger '2'
v356 <- LoadInteger '3'
v357 <- LoadInteger '4'
v358 <- LoadInteger '5'
v359 <- CallFunction v339, [v354, v355, v356, v357, v358]
v360 <- BeginPlainFunction -> v361, v362, v363, v364, v365
    Directive 'use strict'
    v366 <- LoadInteger '0'
    v367 <- CreateNamedVariable 'i', 'var', v366
    v368 <- LoadArguments
    BeginForOfLoop v368 -> v369
        Reassign v361, v362
        Reassign v362, v363
        Reassign v364, v365
        v370 <- LoadArguments
        v371 <- GetComputedProperty v370, v367
        v372 <- UnaryOperation v367, '++'
    EndForOfLoop
    v373 <- LoadArguments
    v374 <- GetProperty v373, 'length'
EndPlainFunction
v375 <- LoadInteger '1'
v376 <- LoadInteger '2'
v377 <- LoadInteger '3'
v378 <- LoadInteger '4'
v379 <- LoadInteger '5'
v380 <- CallFunction v360, [v375, v376, v377, v378, v379]
v381 <- BeginPlainFunction -> 
    Directive 'use strict'
    v382 <- LoadArguments
    BeginObjectLiteral
        ObjectLiteralAddProperty `__proto__`, v382
    v383 <- EndObjectLiteral
    v384 <- CreateNamedVariable 'o', 'var', v383
    v385 <- CreateArray []
    v386 <- CreateNamedVariable 'Symbol', 'none'
    v387 <- GetProperty v386, 'iterator'
    v388 <- GetComputedProperty v385, v387
    v389 <- GetProperty v386, 'iterator'
    v390 <- GetComputedProperty v384, v389
    v391 <- GetProperty v386, 'iterator'
    v392 <- CallMethod v384, 'hasOwnProperty', [v391]
    v393 <- CreateArray []
    v394 <- GetProperty v386, 'iterator'
    v395 <- GetComputedProperty v393, v394
    v396 <- GetProperty v386, 'iterator'
    v397 <- GetComputedProperty v384, v396
    v398 <- LoadInteger '10'
    v399 <- GetProperty v386, 'iterator'
    SetComputedProperty v384, v399, v398
    v400 <- GetProperty v386, 'iterator'
    v401 <- CallMethod v384, 'hasOwnProperty', [v400]
    v402 <- LoadInteger '10'
    v403 <- GetProperty v386, 'iterator'
    v404 <- GetComputedProperty v384, v403
    v405 <- CreateArray []
    v406 <- GetProperty v386, 'iterator'
    v407 <- GetComputedProperty v405, v406
    v408 <- LoadArguments
    v409 <- GetProperty v386, 'iterator'
    v410 <- GetComputedProperty v408, v409
    v411 <- LoadArguments
    BeginObjectLiteral
        ObjectLiteralAddProperty `__proto__`, v411
    v412 <- EndObjectLiteral
    v413 <- CreateNamedVariable 'Object', 'none'
    v414 <- CallMethod v413, 'freeze', [v412]
    Reassign v384, v414
    v415 <- CreateArray []
    v416 <- GetProperty v386, 'iterator'
    v417 <- GetComputedProperty v415, v416
    v418 <- GetProperty v386, 'iterator'
    v419 <- GetComputedProperty v384, v418
    v420 <- GetProperty v386, 'iterator'
    v421 <- CallMethod v384, 'hasOwnProperty', [v420]
    v422 <- CreateArray []
    v423 <- GetProperty v386, 'iterator'
    v424 <- GetComputedProperty v422, v423
    v425 <- GetProperty v386, 'iterator'
    v426 <- GetComputedProperty v384, v425
    v427 <- BeginPlainFunction -> 
        v428 <- LoadInteger '10'
        v429 <- GetProperty v386, 'iterator'
        SetComputedProperty v384, v429, v428
    EndPlainFunction
    v430 <- CallFunction v427, []
    v431 <- GetProperty v386, 'iterator'
    v432 <- CallMethod v384, 'hasOwnProperty', [v431]
    v433 <- CreateArray []
    v434 <- GetProperty v386, 'iterator'
    v435 <- GetComputedProperty v433, v434
    v436 <- GetProperty v386, 'iterator'
    v437 <- GetComputedProperty v384, v436
    v438 <- CreateArray []
    v439 <- GetProperty v386, 'iterator'
    v440 <- GetComputedProperty v438, v439
    v441 <- LoadArguments
    v442 <- GetProperty v386, 'iterator'
    v443 <- GetComputedProperty v441, v442
EndPlainFunction
v444 <- CallFunction v381, []


function TestDirectArgumentsIteratorProperty() {
    arguments.hasOwnProperty(Symbol.iterator);
    arguments.propertyIsEnumerable(Symbol.iterator);
    var descriptor = Object.getOwnPropertyDescriptor(arguments, Symbol.iterator);
    descriptor.writable;
    descriptor.enumerable;
    descriptor.configurable;
    descriptor.value;
    ([])[Symbol.iterator];
    arguments[Symbol.iterator];
    ([])[Symbol.iterator];
}
TestDirectArgumentsIteratorProperty();
function TestIndirectArgumentsIteratorProperty() {
    var o = arguments;
    o.hasOwnProperty(Symbol.iterator);
    o.propertyIsEnumerable(Symbol.iterator);
    o[Symbol.iterator];
    ([])[Symbol.iterator];
}
TestIndirectArgumentsIteratorProperty();
function assertIteratorResult(a42, a43, a44) {
    const v45 = { value: a42, done: a43 };
}
function TestDirectValues1(a47, a48, a49) {
    var iterator = arguments[Symbol.iterator]();
    iterator.next();
    iterator.next();
    iterator.next();
    iterator.next();
}
TestDirectValues1(1, 2, 3);
function TestIndirectValues1(a69, a70, a71) {
    var args = arguments;
    var iterator = args[Symbol.iterator]();
    iterator.next();
    iterator.next();
    iterator.next();
    iterator.next();
}
TestIndirectValues1(1, 2, 3);
function TestDirectValues2(a92, a93, a94) {
    var iterator = arguments[Symbol.iterator]();
    iterator.next();
    iterator.next();
    iterator.next();
    iterator.next();
    arguments[3] = 4;
    arguments.length = 4;
    iterator.next();
}
TestDirectValues2(1, 2, 3);
function TestIndirectValues2(a121, a122, a123) {
    var args = arguments;
    var iterator = args[Symbol.iterator]();
    iterator.next();
    iterator.next();
    iterator.next();
    iterator.next();
    arguments[3] = 4;
    arguments.length = 4;
    iterator.next();
}
TestIndirectValues2(1, 2, 3);
function TestDirectValues3(a151, a152, a153) {
    var iterator = arguments[Symbol.iterator]();
    iterator.next();
    iterator.next();
    arguments.length = 2;
    iterator.next();
}
TestDirectValues3(1, 2, 3);
function TestIndirectValues3(a173, a174, a175) {
    var args = arguments;
    var iterator = args[Symbol.iterator]();
    iterator.next();
    iterator.next();
    arguments.length = 2;
    iterator.next();
}
TestIndirectValues3(1, 2, 3);
function TestDirectValues4(a196, a197, a198) {
    var iterator = arguments[Symbol.iterator]();
    iterator.next();
    iterator.next();
    iterator.next();
    arguments.length = 4;
    iterator.next();
    iterator.next();
}
TestDirectValues4(1, 2, 3);
function TestIndirectValues4(a223, a224, a225) {
    var args = arguments;
    var iterator = args[Symbol.iterator]();
    iterator.next();
    iterator.next();
    iterator.next();
    arguments.length = 4;
    iterator.next();
    iterator.next();
}
TestIndirectValues4(1, 2, 3);
function TestForOf() {
    var i = 0;
    for (const v254 of arguments) {
        arguments[i++];
    }
    arguments.length;
}
TestForOf(1, 2, 3, 4, 5);
function TestAssignmentToIterator() {
    var i = 0;
    const v270 = ([]).entries;
    arguments[Symbol.iterator] = v270;
    for (const v275 of arguments) {
        [i,arguments[i]];
        i++;
    }
    arguments.length;
}
TestAssignmentToIterator(1, 2, 3, 4, 5);
function TestAssignmentToIterator2() {
    var i = 0;
    function f292() {
    }
    arguments.__defineGetter__("callee", f292);
    function f296() {
        return 1;
    }
    arguments.__defineGetter__("length", f296);
    const v301 = ([]).entries;
    arguments[Symbol.iterator] = v301;
    for (const v306 of arguments) {
        [i,arguments[i]];
        i++;
    }
    arguments.length;
}
TestAssignmentToIterator2(1, 2, 3, 4, 5);
function TestArgumentsMutation() {
    var i = 0;
    for (const v323 of arguments) {
        arguments[i];
        arguments[i + 1] *= 2;
        i++;
    }
    arguments.length;
}
TestArgumentsMutation(1, 2, 3, 4, 5);
function TestSloppyArgumentsAliasing(a340, a341, a342, a343, a344) {
    var i = 0;
    for (const v348 of arguments) {
        arguments[i];
        a340 = a341;
        a341 = a342;
        a343 = a344;
        i++;
    }
    arguments.length;
}
TestSloppyArgumentsAliasing(1, 2, 3, 4, 5);
function TestStrictArgumentsAliasing(a361, a362, a363, a364, a365) {
    'use strict';
    var i = 0;
    for (const v369 of arguments) {
        a361 = a362;
        a362 = a363;
        a364 = a365;
        arguments[i];
        i++;
    }
    arguments.length;
}
TestStrictArgumentsAliasing(1, 2, 3, 4, 5);
function TestArgumentsAsProto() {
    'use strict';
    var o = { __proto__: arguments };
    ([])[Symbol.iterator];
    o[Symbol.iterator];
    o.hasOwnProperty(Symbol.iterator);
    ([])[Symbol.iterator];
    o[Symbol.iterator];
    o[Symbol.iterator] = 10;
    o.hasOwnProperty(Symbol.iterator);
    o[Symbol.iterator];
    ([])[Symbol.iterator];
    arguments[Symbol.iterator];
    o = Object.freeze({ __proto__: arguments });
    ([])[Symbol.iterator];
    o[Symbol.iterator];
    o.hasOwnProperty(Symbol.iterator);
    ([])[Symbol.iterator];
    o[Symbol.iterator];
    function f427() {
        o[Symbol.iterator] = 10;
    }
    f427();
    o.hasOwnProperty(Symbol.iterator);
    ([])[Symbol.iterator];
    o[Symbol.iterator];
    ([])[Symbol.iterator];
    arguments[Symbol.iterator];
}
TestArgumentsAsProto();

FuzzIL program written to corpus/arguments-iterator.fzil
