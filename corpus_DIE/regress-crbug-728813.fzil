v0 <- CreateNamedVariable 'Proxy', 'none'
BeginObjectLiteral
v1 <- EndObjectLiteral
v2 <- BeginPlainFunction -> 
    v3 <- LoadString 'nope'
    ThrowException v3
EndPlainFunction
BeginObjectLiteral
    ObjectLiteralAddProperty `has`, v2
v4 <- EndObjectLiteral
v5 <- Construct v0, [v1, v4]
v6 <- CreateNamedVariable 'p', 'var', v5
v7 <- LoadInteger '2'
SetProperty v6, 'length', v7
v8 <- BeginArrowFunction -> 
    v9 <- CreateNamedVariable 'Array', 'none'
    v10 <- GetProperty v9, 'prototype'
    v11 <- GetProperty v10, 'indexOf'
    v12 <- CallMethod v11, 'call', [v6]
    Return v12
EndArrowFunction
v13 <- CallFunction v8, []


const v1 = {};
function f2() {
    throw "nope";
}
const v5 = new Proxy(v1, { has: f2 });
var p = v5;
p.length = 2;
const v8 = () => {
    return Array.prototype.indexOf.call(p);
};
v8();

FuzzIL program written to corpus/regress-crbug-728813.fzil
