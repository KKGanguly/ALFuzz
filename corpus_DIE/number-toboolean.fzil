v0 <- BeginPlainFunction -> 
    v1 <- BeginPlainFunction -> v2
        v3 <- LoadInteger '2'
        v4 <- UnaryOperation '-', v3
        v5 <- BinaryOperation v2, '*', v4
        BeginIf v5
            v6 <- LoadInteger '1'
            Return v6
        EndIf
        v7 <- LoadInteger '0'
        Return v7
    EndPlainFunction
    v8 <- LoadInteger '1'
    v9 <- LoadInteger '1'
    v10 <- CallFunction v1, [v9]
    v11 <- LoadInteger '1'
    v12 <- LoadInteger '2'
    v13 <- CallFunction v1, [v12]
    v14 <- LoadInteger '1'
    v15 <- LoadInteger '1'
    v16 <- CallFunction v1, [v15]
    v17 <- LoadInteger '1'
    v18 <- LoadInteger '2'
    v19 <- CallFunction v1, [v18]
    v20 <- CallFunction v1, []
    v21 <- LoadInteger '0'
    v22 <- LoadInteger '0'
    v23 <- CallFunction v1, [v22]
    v24 <- CallFunction v1, []
EndPlainFunction
v25 <- CallFunction v0, []
v26 <- BeginPlainFunction -> 
    v27 <- BeginPlainFunction -> v28
        v29 <- LoadInteger '0'
        v30 <- BinaryOperation v28, '|', v29
        Reassign v28, v30
        v31 <- LoadInteger '2'
        v32 <- UnaryOperation '-', v31
        v33 <- BinaryOperation v28, '*', v32
        v34 <- LoadInteger '0'
        v35 <- CreateNamedVariable 'Math', 'none'
        v36 <- CallMethod v35, 'max', [v33, v34]
        BeginIf v36
            v37 <- LoadInteger '1'
            Return v37
        EndIf
        v38 <- LoadInteger '0'
        Return v38
    EndPlainFunction
    v39 <- LoadInteger '1'
    v40 <- LoadInteger '1'
    v41 <- UnaryOperation '-', v40
    v42 <- CallFunction v27, [v41]
    v43 <- LoadInteger '1'
    v44 <- LoadInteger '2'
    v45 <- UnaryOperation '-', v44
    v46 <- CallFunction v27, [v45]
    v47 <- LoadInteger '1'
    v48 <- LoadInteger '1'
    v49 <- UnaryOperation '-', v48
    v50 <- CallFunction v27, [v49]
    v51 <- LoadInteger '1'
    v52 <- LoadInteger '2'
    v53 <- UnaryOperation '-', v52
    v54 <- CallFunction v27, [v53]
    v55 <- CallFunction v27, []
    v56 <- LoadInteger '0'
    v57 <- LoadInteger '0'
    v58 <- CallFunction v27, [v57]
    v59 <- CallFunction v27, []
EndPlainFunction
v60 <- CallFunction v26, []


function f0() {
    function foo(a2) {
        if (a2 * -2) {
            return 1;
        }
        return 0;
    }
    foo(1);
    foo(2);
    foo(1);
    foo(2);
    foo();
    foo(0);
    foo();
}
f0();
function f26() {
    function foo(a28) {
        if (Math.max((a28 = a28 | 0) * -2, 0)) {
            return 1;
        }
        return 0;
    }
    foo(-1);
    foo(-2);
    foo(-1);
    foo(-2);
    foo();
    foo(0);
    foo();
}
f26();

FuzzIL program written to corpus/number-toboolean.fzil
