v0 <- BeginPlainFunction -> 
    v1 <- CreateNamedVariable '__v_25055', 'none'
    v2 <- GetProperty v1, 'length'
    v3 <- CreateNamedVariable '__v_25062', 'let', v2
    v4 <- LoadInteger '1'
    SetProperty v1, 'length', v4
    Return v3
EndPlainFunction
BeginObjectLiteral
    ObjectLiteralAddProperty `valueOf`, v0
v5 <- EndObjectLiteral
v6 <- CreateNamedVariable '__v_25059', 'let', v5
v7 <- CreateArray []
v8 <- CreateNamedVariable '__v_25060', 'let', v7
BeginForLoopInitializer
    v9 <- LoadInteger '0'
BeginForLoopCondition -> v10
    v11 <- LoadInteger '1500'
    v12 <- Compare v10, '<', v11
BeginForLoopAfterthought v12 -> v13
    v14 <- UnaryOperation v13, '++'
BeginForLoopBody -> v15
    v16 <- LoadString ''
    v17 <- LoadFloat '0.1'
    v18 <- BinaryOperation v16, '+', v17
    v19 <- CallMethod v8, 'push', [v18]
EndForLoop
BeginForLoopInitializer
    v20 <- LoadInteger '0'
BeginForLoopCondition -> v21
    v22 <- LoadInteger '75'
    v23 <- Compare v21, '<', v22
BeginForLoopAfterthought v23 -> v24
    v25 <- UnaryOperation v24, '++'
BeginForLoopBody -> v26
    v27 <- CallMethod v8, 'slice', []
    v28 <- CreateNamedVariable '__v_25055', 'none'
    Reassign v28, v27
    v29 <- LoadInteger '0'
    v30 <- CreateNamedVariable '__v_25055', 'none'
    v31 <- CallMethod v30, 'slice', [v29, v6]
    v32 <- CreateNamedVariable '__v_25056', 'none'
    Reassign v32, v31
EndForLoop


function f0() {
    let __v_25062 = __v_25055.length;
    __v_25055.length = 1;
    return __v_25062;
}
let __v_25059 = { valueOf: f0 };
let __v_25060 = [];
for (let i10 = 0; i10 < 1500; i10++) {
    __v_25060.push("" + 0.1);
}
for (let i21 = 0; i21 < 75; i21++) {
    __v_25055 = __v_25060.slice();
    __v_25056 = __v_25055.slice(0, __v_25059);
}

FuzzIL program written to corpus/regress-785804.fzil
