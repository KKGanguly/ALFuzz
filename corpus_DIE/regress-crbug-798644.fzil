v0 <- CreateArray []
v1 <- CreateNamedVariable 'arr', 'let', v0
v2 <- LoadInteger '4660'
SetElement v1, '1000', v2
v3 <- LoadInteger '256'
v4 <- BeginPlainFunction -> 
    v5 <- LoadInteger '256'
    v6 <- DeleteElement v1, '256'
    v7 <- LoadFloat '1.1'
    v8 <- CallMethod v1, 'unshift', [v7]
EndPlainFunction
v9 <- CallMethod v1, '__defineGetter__', [v3, v4]
v10 <- CreateNamedVariable 'Object', 'none'
v11 <- CallMethod v10, 'entries', [v1]
v12 <- CreateNamedVariable 'results', 'let', v11
v13 <- CallMethod v12, 'toString', []
v14 <- CreateNamedVariable 'str', 'let', v13


let arr = [];
arr[1000] = 4660;
function f4() {
    delete arr[256];
    arr.unshift(1.1);
}
arr.__defineGetter__(256, f4);
let results = Object.entries(arr);
let str = results.toString();

FuzzIL program written to corpus/regress-crbug-798644.fzil
