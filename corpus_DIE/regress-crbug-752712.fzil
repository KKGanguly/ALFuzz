v0 <- LoadInteger '1'
v1 <- CreateNamedVariable 'number', 'var', v0
v2 <- BeginPlainFunction -> 
    BeginObjectLiteral
    v3 <- EndObjectLiteral
    v4 <- CreateNamedVariable 'obj', 'var', v3
    v5 <- BeginPlainFunction -> 
    EndPlainFunction
    BeginObjectLiteral
        ObjectLiteralAddProperty `get`, v5
    v6 <- EndObjectLiteral
    v7 <- CreateNamedVariable 'handler', 'var', v6
    v8 <- CreateNamedVariable 'Proxy', 'none'
    v9 <- Construct v8, [v4, v7]
    v10 <- CreateNamedVariable 'proxy', 'var', v9
    v11 <- LoadString 'get'
    v12 <- BeginPlainFunction -> 
        Return v1
    EndPlainFunction
    BeginObjectLiteral
        ObjectLiteralAddProperty `get`, v12
    v13 <- EndObjectLiteral
    v14 <- CreateNamedVariable 'Object', 'none'
    v15 <- CallMethod v14, 'defineProperty', [v7, v11, v13]
    v16 <- BeginPlainFunction -> 
        v17 <- GetProperty v10, 'property'
    EndPlainFunction
    v18 <- CallFunction v16, []
    v19 <- CreateNamedVariable 'TypeError', 'none'
EndPlainFunction
v20 <- CallFunction v2, []


var number = 1;
function testFailingInvariant() {
    var obj = {};
    function f5() {
    }
    var handler = { get: f5 };
    const v9 = new Proxy(obj, handler);
    var proxy = v9;
    function f12() {
        return number;
    }
    Object.defineProperty(handler, "get", { get: f12 });
    function f16() {
        proxy.property;
    }
    f16();
}
testFailingInvariant();

FuzzIL program written to corpus/regress-crbug-752712.fzil
