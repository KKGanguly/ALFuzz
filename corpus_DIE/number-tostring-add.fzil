v0 <- BeginPlainFunction -> v1, v2
    v3 <- BinaryOperation v1, '+', v2
    Return v3
EndPlainFunction
v4 <- BeginPlainFunction -> v5, v6
    v7 <- CallMethod v6, 'toString', []
    v8 <- LoadString ''
    v9 <- BinaryOperation v8, '+', v6
    v10 <- LoadString ''
    v11 <- CallFunction v0, [v10, v6]
    v12 <- LoadString 'yes'
    v13 <- BinaryOperation v12, '+', v5
    v14 <- LoadString 'yes'
    v15 <- CallFunction v0, [v14, v6]
EndPlainFunction
v16 <- LoadString 'NaN'
v17 <- CreateNamedVariable 'NaN', 'none'
v18 <- CallFunction v4, [v16, v17]
v19 <- LoadString 'Infinity'
v20 <- LoadInteger '1'
v21 <- LoadInteger '0'
v22 <- BinaryOperation v20, '/', v21
v23 <- CallFunction v4, [v19, v22]
v24 <- LoadString '-Infinity'
v25 <- LoadInteger '1'
v26 <- UnaryOperation '-', v25
v27 <- LoadInteger '0'
v28 <- BinaryOperation v26, '/', v27
v29 <- CallFunction v4, [v24, v28]
v30 <- LoadString '0'
v31 <- LoadInteger '0'
v32 <- CallFunction v4, [v30, v31]
v33 <- LoadString '9'
v34 <- LoadInteger '9'
v35 <- CallFunction v4, [v33, v34]
v36 <- LoadString '90'
v37 <- LoadInteger '90'
v38 <- CallFunction v4, [v36, v37]
v39 <- LoadString '90.12'
v40 <- LoadFloat '90.12'
v41 <- CallFunction v4, [v39, v40]
v42 <- LoadString '0.1'
v43 <- LoadFloat '0.1'
v44 <- CallFunction v4, [v42, v43]
v45 <- LoadString '0.01'
v46 <- LoadFloat '0.01'
v47 <- CallFunction v4, [v45, v46]
v48 <- LoadString '0.0123'
v49 <- LoadFloat '0.0123'
v50 <- CallFunction v4, [v48, v49]
v51 <- LoadString '111111111111111110000'
v52 <- LoadFloat '1.1111111111111111e+20'
v53 <- CallFunction v4, [v51, v52]
v54 <- LoadString '1.1111111111111111e+21'
v55 <- LoadFloat '1.1111111111111111e+21'
v56 <- CallFunction v4, [v54, v55]
v57 <- LoadString '1.1111111111111111e+22'
v58 <- LoadFloat '1.1111111111111111e+22'
v59 <- CallFunction v4, [v57, v58]
v60 <- LoadString '0.00001'
v61 <- LoadFloat '1e-05'
v62 <- CallFunction v4, [v60, v61]
v63 <- LoadString '0.000001'
v64 <- LoadFloat '1e-06'
v65 <- CallFunction v4, [v63, v64]
v66 <- LoadString '1e-7'
v67 <- LoadFloat '1e-07'
v68 <- CallFunction v4, [v66, v67]
v69 <- LoadString '1.2e-7'
v70 <- LoadFloat '1.2e-07'
v71 <- CallFunction v4, [v69, v70]
v72 <- LoadString '1.23e-7'
v73 <- LoadFloat '1.23e-07'
v74 <- CallFunction v4, [v72, v73]
v75 <- LoadString '1e-8'
v76 <- LoadFloat '1e-08'
v77 <- CallFunction v4, [v75, v76]
v78 <- LoadString '1.2e-8'
v79 <- LoadFloat '1.2e-08'
v80 <- CallFunction v4, [v78, v79]
v81 <- LoadString '1.23e-8'
v82 <- LoadFloat '1.23e-08'
v83 <- CallFunction v4, [v81, v82]
v84 <- LoadString '0'
v85 <- LoadInteger '0'
v86 <- UnaryOperation '-', v85
v87 <- CallFunction v4, [v84, v86]
v88 <- LoadString '-9'
v89 <- LoadInteger '9'
v90 <- UnaryOperation '-', v89
v91 <- CallFunction v4, [v88, v90]
v92 <- LoadString '-90'
v93 <- LoadInteger '90'
v94 <- UnaryOperation '-', v93
v95 <- CallFunction v4, [v92, v94]
v96 <- LoadString '-90.12'
v97 <- LoadFloat '90.12'
v98 <- UnaryOperation '-', v97
v99 <- CallFunction v4, [v96, v98]
v100 <- LoadString '-0.1'
v101 <- LoadFloat '0.1'
v102 <- UnaryOperation '-', v101
v103 <- CallFunction v4, [v100, v102]
v104 <- LoadString '-0.01'
v105 <- LoadFloat '0.01'
v106 <- UnaryOperation '-', v105
v107 <- CallFunction v4, [v104, v106]
v108 <- LoadString '-0.0123'
v109 <- LoadFloat '0.0123'
v110 <- UnaryOperation '-', v109
v111 <- CallFunction v4, [v108, v110]
v112 <- LoadString '-111111111111111110000'
v113 <- LoadFloat '1.1111111111111111e+20'
v114 <- UnaryOperation '-', v113
v115 <- CallFunction v4, [v112, v114]
v116 <- LoadString '-1.1111111111111111e+21'
v117 <- LoadFloat '1.1111111111111111e+21'
v118 <- UnaryOperation '-', v117
v119 <- CallFunction v4, [v116, v118]
v120 <- LoadString '-1.1111111111111111e+22'
v121 <- LoadFloat '1.1111111111111111e+22'
v122 <- UnaryOperation '-', v121
v123 <- CallFunction v4, [v120, v122]
v124 <- LoadString '-0.00001'
v125 <- LoadFloat '1e-05'
v126 <- UnaryOperation '-', v125
v127 <- CallFunction v4, [v124, v126]
v128 <- LoadString '-0.000001'
v129 <- LoadFloat '1e-06'
v130 <- UnaryOperation '-', v129
v131 <- CallFunction v4, [v128, v130]
v132 <- LoadString '-1e-7'
v133 <- LoadFloat '1e-07'
v134 <- UnaryOperation '-', v133
v135 <- CallFunction v4, [v132, v134]
v136 <- LoadString '-1.2e-7'
v137 <- LoadFloat '1.2e-07'
v138 <- UnaryOperation '-', v137
v139 <- CallFunction v4, [v136, v138]
v140 <- LoadString '-1.23e-7'
v141 <- LoadFloat '1.23e-07'
v142 <- UnaryOperation '-', v141
v143 <- CallFunction v4, [v140, v142]
v144 <- LoadString '-1e-8'
v145 <- LoadFloat '1e-08'
v146 <- UnaryOperation '-', v145
v147 <- CallFunction v4, [v144, v146]
v148 <- LoadString '-1.2e-8'
v149 <- LoadFloat '1.2e-08'
v150 <- UnaryOperation '-', v149
v151 <- CallFunction v4, [v148, v150]
v152 <- LoadString '-1.23e-8'
v153 <- LoadFloat '1.23e-08'
v154 <- UnaryOperation '-', v153
v155 <- CallFunction v4, [v152, v154]
v156 <- LoadString '1000'
v157 <- LoadInteger '1000'
v158 <- CallFunction v4, [v156, v157]
v159 <- LoadString '0.00001'
v160 <- LoadFloat '1e-05'
v161 <- CallFunction v4, [v159, v160]
v162 <- LoadString '1000000000000000100'
v163 <- LoadInteger '1000000000000000128'
v164 <- CallFunction v4, [v162, v163]
v165 <- LoadString '1e+21'
v166 <- LoadFloat '1e+21'
v167 <- CallFunction v4, [v165, v166]
v168 <- LoadString '-1e+21'
v169 <- LoadFloat '1e+21'
v170 <- UnaryOperation '-', v169
v171 <- CallFunction v4, [v168, v170]
v172 <- LoadString '1e-7'
v173 <- LoadFloat '1e-07'
v174 <- CallFunction v4, [v172, v173]
v175 <- LoadString '-1e-7'
v176 <- LoadFloat '1e-07'
v177 <- UnaryOperation '-', v176
v178 <- CallFunction v4, [v175, v177]
v179 <- LoadString '1.0000000000000001e+21'
v180 <- LoadFloat '1.0000000000000001e+21'
v181 <- CallFunction v4, [v179, v180]
v182 <- LoadString '0.000001'
v183 <- LoadFloat '1e-06'
v184 <- CallFunction v4, [v182, v183]
v185 <- LoadString '1e-7'
v186 <- LoadFloat '1e-07'
v187 <- CallFunction v4, [v185, v186]


function add(a1, a2) {
    return a1 + a2;
}
function testToString(a5, a6) {
    a6.toString();
    "" + a6;
    add("", a6);
    "yes" + a5;
    add("yes", a6);
}
testToString("NaN", NaN);
testToString("Infinity", 1 / 0);
testToString("-Infinity", -1 / 0);
testToString("0", 0);
testToString("9", 9);
testToString("90", 90);
testToString("90.12", 90.12);
testToString("0.1", 0.1);
testToString("0.01", 0.01);
testToString("0.0123", 0.0123);
testToString("111111111111111110000", 1.1111111111111111e+20);
testToString("1.1111111111111111e+21", 1.1111111111111111e+21);
testToString("1.1111111111111111e+22", 1.1111111111111111e+22);
testToString("0.00001", 1e-05);
testToString("0.000001", 1e-06);
testToString("1e-7", 1e-07);
testToString("1.2e-7", 1.2e-07);
testToString("1.23e-7", 1.23e-07);
testToString("1e-8", 1e-08);
testToString("1.2e-8", 1.2e-08);
testToString("1.23e-8", 1.23e-08);
testToString("0", -0);
testToString("-9", -9);
testToString("-90", -90);
testToString("-90.12", -90.12);
testToString("-0.1", -0.1);
testToString("-0.01", -0.01);
testToString("-0.0123", -0.0123);
testToString("-111111111111111110000", -1.1111111111111111e+20);
testToString("-1.1111111111111111e+21", -1.1111111111111111e+21);
testToString("-1.1111111111111111e+22", -1.1111111111111111e+22);
testToString("-0.00001", -1e-05);
testToString("-0.000001", -1e-06);
testToString("-1e-7", -1e-07);
testToString("-1.2e-7", -1.2e-07);
testToString("-1.23e-7", -1.23e-07);
testToString("-1e-8", -1e-08);
testToString("-1.2e-8", -1.2e-08);
testToString("-1.23e-8", -1.23e-08);
testToString("1000", 1000);
testToString("0.00001", 1e-05);
testToString("1000000000000000100", 1000000000000000128);
testToString("1e+21", 1e+21);
testToString("-1e+21", -1e+21);
testToString("1e-7", 1e-07);
testToString("-1e-7", -1e-07);
testToString("1.0000000000000001e+21", 1.0000000000000001e+21);
testToString("0.000001", 1e-06);
testToString("1e-7", 1e-07);

FuzzIL program written to corpus/number-tostring-add.fzil
