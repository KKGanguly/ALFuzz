v0 <- LoadFloat '1.5'
BeginObjectLiteral
v1 <- EndObjectLiteral
BeginObjectLiteral
    ObjectLiteralAddProperty `a`, v0
    ObjectLiteralAddProperty `b`, v1
v2 <- EndObjectLiteral
v3 <- CreateNamedVariable 'o', 'var', v2
v4 <- BeginPlainFunction -> v5
    v6 <- CreateArray []
    v7 <- CreateNamedVariable 'result', 'var', v6
    BeginForInLoop v5 -> v8
        v9 <- GetComputedProperty v5, v8
        v10 <- GetProperty v7, 'length'
        SetComputedProperty v7, v10, v9
    EndForInLoop
    Return v7
EndPlainFunction
v11 <- CallFunction v4, [v3]
v12 <- CallFunction v4, [v3]
v13 <- CallFunction v4, [v3]
v14 <- CreateNamedVariable 'array', 'var', v13
v15 <- LoadFloat '1.7'
SetProperty v3, 'a', v15
v16 <- LoadFloat '1.5'
v17 <- GetElement v14, '0'


const v1 = {};
var o = { a: 1.5, b: v1 };
function f(a5) {
    var result = [];
    for (const v8 in a5) {
        const v9 = a5[v8];
        result[result.length] = v9;
    }
    return result;
}
f(o);
f(o);
var array = f(o);
o.a = 1.7;
array[0];

FuzzIL program written to corpus/regress-load-field-by-index.fzil
