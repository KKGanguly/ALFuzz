v0 <- BeginPlainFunction -> 
    BeginForLoopInitializer
        v1 <- LoadInteger '0'
    BeginForLoopCondition -> v2
        v3 <- LoadInteger '7'
        v4 <- Compare v2, '<', v3
    BeginForLoopAfterthought v4 -> v5
        v6 <- UnaryOperation v5, '++'
    BeginForLoopBody -> v7
        v8 <- CreateNamedVariable 'Array', 'none'
        v9 <- LoadInteger '10'
        v10 <- Construct v8, [v9]
        v11 <- CreateNamedVariable 'array', 'var', v10
        v12 <- LoadInteger '1'
        v13 <- LoadInteger '1'
        v14 <- LoadString 'one'
        v15 <- LoadString 'two'
        v16 <- CallMethod v11, 'splice', [v12, v13, v14, v15]
        v17 <- CreateNamedVariable 'spliced', 'var', v16
        v18 <- LoadInteger '1'
        v19 <- GetProperty v17, 'length'
        v20 <- LoadInteger '0'
        v21 <- TestIn v20, v17
        v22 <- LoadString '0 in spliced'
        v23 <- LoadInteger '11'
        v24 <- GetProperty v11, 'length'
        v25 <- LoadInteger '0'
        v26 <- TestIn v25, v11
        v27 <- LoadString '0 in array'
        v28 <- LoadInteger '1'
        v29 <- TestIn v28, v11
        v30 <- LoadInteger '2'
        v31 <- TestIn v30, v11
        v32 <- LoadInteger '3'
        v33 <- TestIn v32, v11
        v34 <- LoadString '3 in array'
    EndForLoop
EndPlainFunction
v35 <- CallFunction v0, []
v36 <- BeginPlainFunction -> 
    BeginForLoopInitializer
        v37 <- LoadInteger '0'
    BeginForLoopCondition -> v38
        v39 <- LoadInteger '7'
        v40 <- Compare v38, '<', v39
    BeginForLoopAfterthought v40 -> v41
        v42 <- UnaryOperation v41, '++'
    BeginForLoopBody -> v43
        v44 <- CreateArray []
        v45 <- LoadInteger '0'
        v46 <- LoadInteger '0'
        v47 <- CreateArray []
        v48 <- CallMethod v47, 'splice', [v45, v46]
        v49 <- CreateArray []
        v50 <- LoadInteger '1'
        v51 <- LoadInteger '0'
        v52 <- CreateArray []
        v53 <- CallMethod v52, 'splice', [v50, v51]
        v54 <- CreateArray []
        v55 <- LoadInteger '0'
        v56 <- LoadInteger '1'
        v57 <- CreateArray []
        v58 <- CallMethod v57, 'splice', [v55, v56]
        v59 <- CreateArray []
        v60 <- LoadInteger '1'
        v61 <- UnaryOperation '-', v60
        v62 <- LoadInteger '0'
        v63 <- CreateArray []
        v64 <- CallMethod v63, 'splice', [v61, v62]
    EndForLoop
EndPlainFunction
v65 <- CallFunction v36, []
v66 <- BeginPlainFunction -> 
    BeginForLoopInitializer
        v67 <- LoadInteger '0'
    BeginForLoopCondition -> v68
        v69 <- LoadInteger '7'
        v70 <- Compare v68, '<', v69
    BeginForLoopAfterthought v70 -> v71
        v72 <- UnaryOperation v71, '++'
    BeginForLoopBody -> v73
        v74 <- LoadInteger '1'
        v75 <- LoadInteger '2'
        v76 <- LoadInteger '3'
        v77 <- CreateArray [v74, v75, v76]
        v78 <- CreateNamedVariable 'a', 'var', v77
        v79 <- CreateArray []
        v80 <- LoadInteger '1'
        v81 <- LoadInteger '0'
        v82 <- LoadString 'a'
        v83 <- LoadString 'b'
        v84 <- LoadString 'c'
        v85 <- CallMethod v78, 'splice', [v80, v81, v82, v83, v84]
        v86 <- LoadInteger '1'
        v87 <- LoadString 'a'
        v88 <- LoadString 'b'
        v89 <- LoadString 'c'
        v90 <- LoadInteger '2'
        v91 <- LoadInteger '3'
        v92 <- CreateArray [v86, v87, v88, v89, v90, v91]
    EndForLoop
EndPlainFunction
v93 <- CallFunction v66, []
v94 <- BeginPlainFunction -> 
    v95 <- LoadUndefined
    v96 <- CreateNamedVariable 'array', 'var', v95
    BeginForLoopInitializer
        v97 <- LoadInteger '0'
    BeginForLoopCondition -> v98
        v99 <- LoadInteger '7'
        v100 <- Compare v98, '<', v99
    BeginForLoopAfterthought v100 -> v101
        v102 <- UnaryOperation v101, '++'
    BeginForLoopBody -> v103
        v104 <- LoadInteger '1'
        v105 <- LoadInteger '2'
        v106 <- LoadInteger '3'
        v107 <- CreateArray [v104, v105, v106]
        Reassign v96, v107
        v108 <- CreateArray []
        v109 <- CallMethod v96, 'splice', []
        v110 <- LoadInteger '1'
        v111 <- LoadInteger '2'
        v112 <- LoadInteger '3'
        v113 <- CreateArray [v110, v111, v112]
        v114 <- LoadInteger '1'
        v115 <- LoadInteger '2'
        v116 <- LoadInteger '3'
        v117 <- CreateArray [v114, v115, v116]
        Reassign v96, v117
        v118 <- LoadInteger '1'
        v119 <- LoadInteger '2'
        v120 <- LoadInteger '3'
        v121 <- CreateArray [v118, v119, v120]
        v122 <- LoadInteger '0'
        v123 <- CallMethod v96, 'splice', [v122]
        v124 <- CreateArray []
        v125 <- LoadInteger '1'
        v126 <- LoadInteger '2'
        v127 <- LoadInteger '3'
        v128 <- CreateArray [v125, v126, v127]
        Reassign v96, v128
        v129 <- LoadInteger '1'
        v130 <- LoadInteger '2'
        v131 <- LoadInteger '3'
        v132 <- CreateArray [v129, v130, v131]
        v133 <- LoadUndefined
        v134 <- CallMethod v96, 'splice', [v133]
        v135 <- CreateArray []
        v136 <- LoadInteger '1'
        v137 <- LoadInteger '2'
        v138 <- LoadInteger '3'
        v139 <- CreateArray [v136, v137, v138]
        Reassign v96, v139
        v140 <- LoadInteger '1'
        v141 <- LoadInteger '2'
        v142 <- LoadInteger '3'
        v143 <- CreateArray [v140, v141, v142]
        v144 <- LoadString 'foobar'
        v145 <- CallMethod v96, 'splice', [v144]
        v146 <- CreateArray []
        v147 <- LoadInteger '1'
        v148 <- LoadInteger '2'
        v149 <- LoadInteger '3'
        v150 <- CreateArray [v147, v148, v149]
        Reassign v96, v150
        v151 <- CreateArray []
        v152 <- LoadUndefined
        v153 <- LoadUndefined
        v154 <- CallMethod v96, 'splice', [v152, v153]
        v155 <- LoadInteger '1'
        v156 <- LoadInteger '2'
        v157 <- LoadInteger '3'
        v158 <- CreateArray [v155, v156, v157]
        v159 <- LoadInteger '1'
        v160 <- LoadInteger '2'
        v161 <- LoadInteger '3'
        v162 <- CreateArray [v159, v160, v161]
        Reassign v96, v162
        v163 <- CreateArray []
        v164 <- LoadString 'foobar'
        v165 <- LoadUndefined
        v166 <- CallMethod v96, 'splice', [v164, v165]
        v167 <- LoadInteger '1'
        v168 <- LoadInteger '2'
        v169 <- LoadInteger '3'
        v170 <- CreateArray [v167, v168, v169]
        v171 <- LoadInteger '1'
        v172 <- LoadInteger '2'
        v173 <- LoadInteger '3'
        v174 <- CreateArray [v171, v172, v173]
        Reassign v96, v174
        v175 <- CreateArray []
        v176 <- LoadUndefined
        v177 <- LoadString 'foobar'
        v178 <- CallMethod v96, 'splice', [v176, v177]
        v179 <- LoadInteger '1'
        v180 <- LoadInteger '2'
        v181 <- LoadInteger '3'
        v182 <- CreateArray [v179, v180, v181]
        v183 <- LoadInteger '1'
        v184 <- LoadInteger '2'
        v185 <- LoadInteger '3'
        v186 <- CreateArray [v183, v184, v185]
        Reassign v96, v186
        v187 <- CreateArray []
        v188 <- LoadString 'foobar'
        v189 <- LoadString 'foobar'
        v190 <- CallMethod v96, 'splice', [v188, v189]
        v191 <- LoadInteger '1'
        v192 <- LoadInteger '2'
        v193 <- LoadInteger '3'
        v194 <- CreateArray [v191, v192, v193]
    EndForLoop
EndPlainFunction
v195 <- CallFunction v94, []
v196 <- BeginPlainFunction -> 
    v197 <- LoadUndefined
    v198 <- CreateNamedVariable 'array', 'var', v197
    v199 <- LoadUndefined
    v200 <- CreateNamedVariable 'spliced', 'var', v199
    BeginForLoopInitializer
        v201 <- LoadInteger '0'
    BeginForLoopCondition -> v202
        v203 <- LoadInteger '7'
        v204 <- Compare v202, '<', v203
    BeginForLoopAfterthought v204 -> v205
        v206 <- UnaryOperation v205, '++'
    BeginForLoopBody -> v207
        v208 <- LoadInteger '1'
        v209 <- LoadInteger '2'
        v210 <- LoadInteger '3'
        v211 <- LoadInteger '4'
        v212 <- LoadInteger '5'
        v213 <- LoadInteger '6'
        v214 <- LoadInteger '7'
        v215 <- CreateArray [v208, v209, v210, v211, v212, v213, v214]
        Reassign v198, v215
        v216 <- LoadInteger '100'
        v217 <- UnaryOperation '-', v216
        v218 <- CallMethod v198, 'splice', [v217]
        Reassign v200, v218
        v219 <- CreateArray []
        v220 <- LoadInteger '1'
        v221 <- LoadInteger '2'
        v222 <- LoadInteger '3'
        v223 <- LoadInteger '4'
        v224 <- LoadInteger '5'
        v225 <- LoadInteger '6'
        v226 <- LoadInteger '7'
        v227 <- CreateArray [v220, v221, v222, v223, v224, v225, v226]
        v228 <- LoadInteger '1'
        v229 <- LoadInteger '2'
        v230 <- LoadInteger '3'
        v231 <- LoadInteger '4'
        v232 <- LoadInteger '5'
        v233 <- LoadInteger '6'
        v234 <- LoadInteger '7'
        v235 <- CreateArray [v228, v229, v230, v231, v232, v233, v234]
        Reassign v198, v235
        v236 <- LoadFloat '1e+100'
        v237 <- UnaryOperation '-', v236
        v238 <- CallMethod v198, 'splice', [v237]
        Reassign v200, v238
        v239 <- CreateArray []
        v240 <- LoadInteger '1'
        v241 <- LoadInteger '2'
        v242 <- LoadInteger '3'
        v243 <- LoadInteger '4'
        v244 <- LoadInteger '5'
        v245 <- LoadInteger '6'
        v246 <- LoadInteger '7'
        v247 <- CreateArray [v240, v241, v242, v243, v244, v245, v246]
        v248 <- LoadInteger '1'
        v249 <- LoadInteger '2'
        v250 <- LoadInteger '3'
        v251 <- LoadInteger '4'
        v252 <- LoadInteger '5'
        v253 <- LoadInteger '6'
        v254 <- LoadInteger '7'
        v255 <- CreateArray [v248, v249, v250, v251, v252, v253, v254]
        Reassign v198, v255
        v256 <- LoadInteger '3'
        v257 <- UnaryOperation '-', v256
        v258 <- CallMethod v198, 'splice', [v257]
        Reassign v200, v258
        v259 <- LoadInteger '1'
        v260 <- LoadInteger '2'
        v261 <- LoadInteger '3'
        v262 <- LoadInteger '4'
        v263 <- CreateArray [v259, v260, v261, v262]
        v264 <- LoadInteger '5'
        v265 <- LoadInteger '6'
        v266 <- LoadInteger '7'
        v267 <- CreateArray [v264, v265, v266]
        v268 <- LoadInteger '1'
        v269 <- LoadInteger '2'
        v270 <- LoadInteger '3'
        v271 <- LoadInteger '4'
        v272 <- LoadInteger '5'
        v273 <- LoadInteger '6'
        v274 <- LoadInteger '7'
        v275 <- CreateArray [v268, v269, v270, v271, v272, v273, v274]
        Reassign v198, v275
        v276 <- LoadFloat '3.999999'
        v277 <- UnaryOperation '-', v276
        v278 <- CallMethod v198, 'splice', [v277]
        Reassign v200, v278
        v279 <- LoadInteger '1'
        v280 <- LoadInteger '2'
        v281 <- LoadInteger '3'
        v282 <- LoadInteger '4'
        v283 <- CreateArray [v279, v280, v281, v282]
        v284 <- LoadInteger '5'
        v285 <- LoadInteger '6'
        v286 <- LoadInteger '7'
        v287 <- CreateArray [v284, v285, v286]
        v288 <- LoadInteger '1'
        v289 <- LoadInteger '2'
        v290 <- LoadInteger '3'
        v291 <- LoadInteger '4'
        v292 <- LoadInteger '5'
        v293 <- LoadInteger '6'
        v294 <- LoadInteger '7'
        v295 <- CreateArray [v288, v289, v290, v291, v292, v293, v294]
        Reassign v198, v295
        v296 <- LoadFloat '3.000001'
        v297 <- UnaryOperation '-', v296
        v298 <- CallMethod v198, 'splice', [v297]
        Reassign v200, v298
        v299 <- LoadInteger '1'
        v300 <- LoadInteger '2'
        v301 <- LoadInteger '3'
        v302 <- LoadInteger '4'
        v303 <- CreateArray [v299, v300, v301, v302]
        v304 <- LoadInteger '5'
        v305 <- LoadInteger '6'
        v306 <- LoadInteger '7'
        v307 <- CreateArray [v304, v305, v306]
        v308 <- LoadInteger '1'
        v309 <- LoadInteger '2'
        v310 <- LoadInteger '3'
        v311 <- LoadInteger '4'
        v312 <- LoadInteger '5'
        v313 <- LoadInteger '6'
        v314 <- LoadInteger '7'
        v315 <- CreateArray [v308, v309, v310, v311, v312, v313, v314]
        Reassign v198, v315
        v316 <- LoadInteger '4'
        v317 <- CallMethod v198, 'splice', [v316]
        Reassign v200, v317
        v318 <- LoadInteger '1'
        v319 <- LoadInteger '2'
        v320 <- LoadInteger '3'
        v321 <- LoadInteger '4'
        v322 <- CreateArray [v318, v319, v320, v321]
        v323 <- LoadInteger '5'
        v324 <- LoadInteger '6'
        v325 <- LoadInteger '7'
        v326 <- CreateArray [v323, v324, v325]
        v327 <- LoadInteger '1'
        v328 <- LoadInteger '2'
        v329 <- LoadInteger '3'
        v330 <- LoadInteger '4'
        v331 <- LoadInteger '5'
        v332 <- LoadInteger '6'
        v333 <- LoadInteger '7'
        v334 <- CreateArray [v327, v328, v329, v330, v331, v332, v333]
        Reassign v198, v334
        v335 <- LoadFloat '4.999999'
        v336 <- CallMethod v198, 'splice', [v335]
        Reassign v200, v336
        v337 <- LoadInteger '1'
        v338 <- LoadInteger '2'
        v339 <- LoadInteger '3'
        v340 <- LoadInteger '4'
        v341 <- CreateArray [v337, v338, v339, v340]
        v342 <- LoadInteger '5'
        v343 <- LoadInteger '6'
        v344 <- LoadInteger '7'
        v345 <- CreateArray [v342, v343, v344]
        v346 <- LoadInteger '1'
        v347 <- LoadInteger '2'
        v348 <- LoadInteger '3'
        v349 <- LoadInteger '4'
        v350 <- LoadInteger '5'
        v351 <- LoadInteger '6'
        v352 <- LoadInteger '7'
        v353 <- CreateArray [v346, v347, v348, v349, v350, v351, v352]
        Reassign v198, v353
        v354 <- LoadFloat '4.000001'
        v355 <- CallMethod v198, 'splice', [v354]
        Reassign v200, v355
        v356 <- LoadInteger '1'
        v357 <- LoadInteger '2'
        v358 <- LoadInteger '3'
        v359 <- LoadInteger '4'
        v360 <- CreateArray [v356, v357, v358, v359]
        v361 <- LoadInteger '5'
        v362 <- LoadInteger '6'
        v363 <- LoadInteger '7'
        v364 <- CreateArray [v361, v362, v363]
        v365 <- LoadInteger '1'
        v366 <- LoadInteger '2'
        v367 <- LoadInteger '3'
        v368 <- LoadInteger '4'
        v369 <- LoadInteger '5'
        v370 <- LoadInteger '6'
        v371 <- LoadInteger '7'
        v372 <- CreateArray [v365, v366, v367, v368, v369, v370, v371]
        Reassign v198, v372
        v373 <- LoadInteger '6'
        v374 <- CallMethod v198, 'splice', [v373]
        Reassign v200, v374
        v375 <- LoadInteger '1'
        v376 <- LoadInteger '2'
        v377 <- LoadInteger '3'
        v378 <- LoadInteger '4'
        v379 <- LoadInteger '5'
        v380 <- LoadInteger '6'
        v381 <- CreateArray [v375, v376, v377, v378, v379, v380]
        v382 <- LoadInteger '7'
        v383 <- CreateArray [v382]
        v384 <- LoadInteger '1'
        v385 <- LoadInteger '2'
        v386 <- LoadInteger '3'
        v387 <- LoadInteger '4'
        v388 <- LoadInteger '5'
        v389 <- LoadInteger '6'
        v390 <- LoadInteger '7'
        v391 <- CreateArray [v384, v385, v386, v387, v388, v389, v390]
        Reassign v198, v391
        v392 <- LoadInteger '7'
        v393 <- CallMethod v198, 'splice', [v392]
        Reassign v200, v393
        v394 <- LoadInteger '1'
        v395 <- LoadInteger '2'
        v396 <- LoadInteger '3'
        v397 <- LoadInteger '4'
        v398 <- LoadInteger '5'
        v399 <- LoadInteger '6'
        v400 <- LoadInteger '7'
        v401 <- CreateArray [v394, v395, v396, v397, v398, v399, v400]
        v402 <- CreateArray []
        v403 <- LoadInteger '1'
        v404 <- LoadInteger '2'
        v405 <- LoadInteger '3'
        v406 <- LoadInteger '4'
        v407 <- LoadInteger '5'
        v408 <- LoadInteger '6'
        v409 <- LoadInteger '7'
        v410 <- CreateArray [v403, v404, v405, v406, v407, v408, v409]
        Reassign v198, v410
        v411 <- LoadInteger '8'
        v412 <- CallMethod v198, 'splice', [v411]
        Reassign v200, v412
        v413 <- LoadInteger '1'
        v414 <- LoadInteger '2'
        v415 <- LoadInteger '3'
        v416 <- LoadInteger '4'
        v417 <- LoadInteger '5'
        v418 <- LoadInteger '6'
        v419 <- LoadInteger '7'
        v420 <- CreateArray [v413, v414, v415, v416, v417, v418, v419]
        v421 <- CreateArray []
        v422 <- LoadInteger '1'
        v423 <- LoadInteger '2'
        v424 <- LoadInteger '3'
        v425 <- LoadInteger '4'
        v426 <- LoadInteger '5'
        v427 <- LoadInteger '6'
        v428 <- LoadInteger '7'
        v429 <- CreateArray [v422, v423, v424, v425, v426, v427, v428]
        Reassign v198, v429
        v430 <- LoadInteger '100'
        v431 <- CallMethod v198, 'splice', [v430]
        Reassign v200, v431
        v432 <- LoadInteger '1'
        v433 <- LoadInteger '2'
        v434 <- LoadInteger '3'
        v435 <- LoadInteger '4'
        v436 <- LoadInteger '5'
        v437 <- LoadInteger '6'
        v438 <- LoadInteger '7'
        v439 <- CreateArray [v432, v433, v434, v435, v436, v437, v438]
        v440 <- CreateArray []
        v441 <- LoadInteger '1'
        v442 <- LoadInteger '2'
        v443 <- LoadInteger '3'
        v444 <- LoadInteger '4'
        v445 <- LoadInteger '5'
        v446 <- LoadInteger '6'
        v447 <- LoadInteger '7'
        v448 <- CreateArray [v441, v442, v443, v444, v445, v446, v447]
        Reassign v198, v448
        v449 <- LoadFloat '1e+100'
        v450 <- CallMethod v198, 'splice', [v449]
        Reassign v200, v450
        v451 <- LoadInteger '1'
        v452 <- LoadInteger '2'
        v453 <- LoadInteger '3'
        v454 <- LoadInteger '4'
        v455 <- LoadInteger '5'
        v456 <- LoadInteger '6'
        v457 <- LoadInteger '7'
        v458 <- CreateArray [v451, v452, v453, v454, v455, v456, v457]
        v459 <- CreateArray []
        v460 <- LoadInteger '1'
        v461 <- LoadInteger '2'
        v462 <- LoadInteger '3'
        v463 <- LoadInteger '4'
        v464 <- LoadInteger '5'
        v465 <- LoadInteger '6'
        v466 <- LoadInteger '7'
        v467 <- CreateArray [v460, v461, v462, v463, v464, v465, v466]
        Reassign v198, v467
        v468 <- LoadInteger '0'
        v469 <- LoadInteger '100'
        v470 <- UnaryOperation '-', v469
        v471 <- CallMethod v198, 'splice', [v468, v470]
        Reassign v200, v471
        v472 <- LoadInteger '1'
        v473 <- LoadInteger '2'
        v474 <- LoadInteger '3'
        v475 <- LoadInteger '4'
        v476 <- LoadInteger '5'
        v477 <- LoadInteger '6'
        v478 <- LoadInteger '7'
        v479 <- CreateArray [v472, v473, v474, v475, v476, v477, v478]
        v480 <- CreateArray []
        v481 <- LoadInteger '1'
        v482 <- LoadInteger '2'
        v483 <- LoadInteger '3'
        v484 <- LoadInteger '4'
        v485 <- LoadInteger '5'
        v486 <- LoadInteger '6'
        v487 <- LoadInteger '7'
        v488 <- CreateArray [v481, v482, v483, v484, v485, v486, v487]
        Reassign v198, v488
        v489 <- LoadInteger '0'
        v490 <- LoadFloat '1e+100'
        v491 <- UnaryOperation '-', v490
        v492 <- CallMethod v198, 'splice', [v489, v491]
        Reassign v200, v492
        v493 <- LoadInteger '1'
        v494 <- LoadInteger '2'
        v495 <- LoadInteger '3'
        v496 <- LoadInteger '4'
        v497 <- LoadInteger '5'
        v498 <- LoadInteger '6'
        v499 <- LoadInteger '7'
        v500 <- CreateArray [v493, v494, v495, v496, v497, v498, v499]
        v501 <- CreateArray []
        v502 <- LoadInteger '1'
        v503 <- LoadInteger '2'
        v504 <- LoadInteger '3'
        v505 <- LoadInteger '4'
        v506 <- LoadInteger '5'
        v507 <- LoadInteger '6'
        v508 <- LoadInteger '7'
        v509 <- CreateArray [v502, v503, v504, v505, v506, v507, v508]
        Reassign v198, v509
        v510 <- LoadInteger '0'
        v511 <- LoadInteger '3'
        v512 <- UnaryOperation '-', v511
        v513 <- CallMethod v198, 'splice', [v510, v512]
        Reassign v200, v513
        v514 <- LoadInteger '1'
        v515 <- LoadInteger '2'
        v516 <- LoadInteger '3'
        v517 <- LoadInteger '4'
        v518 <- LoadInteger '5'
        v519 <- LoadInteger '6'
        v520 <- LoadInteger '7'
        v521 <- CreateArray [v514, v515, v516, v517, v518, v519, v520]
        v522 <- CreateArray []
        v523 <- LoadInteger '1'
        v524 <- LoadInteger '2'
        v525 <- LoadInteger '3'
        v526 <- LoadInteger '4'
        v527 <- LoadInteger '5'
        v528 <- LoadInteger '6'
        v529 <- LoadInteger '7'
        v530 <- CreateArray [v523, v524, v525, v526, v527, v528, v529]
        Reassign v198, v530
        v531 <- LoadInteger '0'
        v532 <- LoadFloat '3.999999'
        v533 <- UnaryOperation '-', v532
        v534 <- CallMethod v198, 'splice', [v531, v533]
        Reassign v200, v534
        v535 <- LoadInteger '1'
        v536 <- LoadInteger '2'
        v537 <- LoadInteger '3'
        v538 <- LoadInteger '4'
        v539 <- LoadInteger '5'
        v540 <- LoadInteger '6'
        v541 <- LoadInteger '7'
        v542 <- CreateArray [v535, v536, v537, v538, v539, v540, v541]
        v543 <- CreateArray []
        v544 <- LoadInteger '1'
        v545 <- LoadInteger '2'
        v546 <- LoadInteger '3'
        v547 <- LoadInteger '4'
        v548 <- LoadInteger '5'
        v549 <- LoadInteger '6'
        v550 <- LoadInteger '7'
        v551 <- CreateArray [v544, v545, v546, v547, v548, v549, v550]
        Reassign v198, v551
        v552 <- LoadInteger '0'
        v553 <- LoadFloat '3.000001'
        v554 <- UnaryOperation '-', v553
        v555 <- CallMethod v198, 'splice', [v552, v554]
        Reassign v200, v555
        v556 <- LoadInteger '1'
        v557 <- LoadInteger '2'
        v558 <- LoadInteger '3'
        v559 <- LoadInteger '4'
        v560 <- LoadInteger '5'
        v561 <- LoadInteger '6'
        v562 <- LoadInteger '7'
        v563 <- CreateArray [v556, v557, v558, v559, v560, v561, v562]
        v564 <- CreateArray []
        v565 <- LoadInteger '1'
        v566 <- LoadInteger '2'
        v567 <- LoadInteger '3'
        v568 <- LoadInteger '4'
        v569 <- LoadInteger '5'
        v570 <- LoadInteger '6'
        v571 <- LoadInteger '7'
        v572 <- CreateArray [v565, v566, v567, v568, v569, v570, v571]
        Reassign v198, v572
        v573 <- LoadInteger '0'
        v574 <- LoadInteger '4'
        v575 <- CallMethod v198, 'splice', [v573, v574]
        Reassign v200, v575
        v576 <- LoadInteger '5'
        v577 <- LoadInteger '6'
        v578 <- LoadInteger '7'
        v579 <- CreateArray [v576, v577, v578]
        v580 <- LoadInteger '1'
        v581 <- LoadInteger '2'
        v582 <- LoadInteger '3'
        v583 <- LoadInteger '4'
        v584 <- CreateArray [v580, v581, v582, v583]
        v585 <- LoadInteger '1'
        v586 <- LoadInteger '2'
        v587 <- LoadInteger '3'
        v588 <- LoadInteger '4'
        v589 <- LoadInteger '5'
        v590 <- LoadInteger '6'
        v591 <- LoadInteger '7'
        v592 <- CreateArray [v585, v586, v587, v588, v589, v590, v591]
        Reassign v198, v592
        v593 <- LoadInteger '0'
        v594 <- LoadFloat '4.999999'
        v595 <- CallMethod v198, 'splice', [v593, v594]
        Reassign v200, v595
        v596 <- LoadInteger '5'
        v597 <- LoadInteger '6'
        v598 <- LoadInteger '7'
        v599 <- CreateArray [v596, v597, v598]
        v600 <- LoadInteger '1'
        v601 <- LoadInteger '2'
        v602 <- LoadInteger '3'
        v603 <- LoadInteger '4'
        v604 <- CreateArray [v600, v601, v602, v603]
        v605 <- LoadInteger '1'
        v606 <- LoadInteger '2'
        v607 <- LoadInteger '3'
        v608 <- LoadInteger '4'
        v609 <- LoadInteger '5'
        v610 <- LoadInteger '6'
        v611 <- LoadInteger '7'
        v612 <- CreateArray [v605, v606, v607, v608, v609, v610, v611]
        Reassign v198, v612
        v613 <- LoadInteger '0'
        v614 <- LoadFloat '4.000001'
        v615 <- CallMethod v198, 'splice', [v613, v614]
        Reassign v200, v615
        v616 <- LoadInteger '5'
        v617 <- LoadInteger '6'
        v618 <- LoadInteger '7'
        v619 <- CreateArray [v616, v617, v618]
        v620 <- LoadInteger '1'
        v621 <- LoadInteger '2'
        v622 <- LoadInteger '3'
        v623 <- LoadInteger '4'
        v624 <- CreateArray [v620, v621, v622, v623]
        v625 <- LoadInteger '1'
        v626 <- LoadInteger '2'
        v627 <- LoadInteger '3'
        v628 <- LoadInteger '4'
        v629 <- LoadInteger '5'
        v630 <- LoadInteger '6'
        v631 <- LoadInteger '7'
        v632 <- CreateArray [v625, v626, v627, v628, v629, v630, v631]
        Reassign v198, v632
        v633 <- LoadInteger '0'
        v634 <- LoadInteger '6'
        v635 <- CallMethod v198, 'splice', [v633, v634]
        Reassign v200, v635
        v636 <- LoadInteger '7'
        v637 <- CreateArray [v636]
        v638 <- LoadInteger '1'
        v639 <- LoadInteger '2'
        v640 <- LoadInteger '3'
        v641 <- LoadInteger '4'
        v642 <- LoadInteger '5'
        v643 <- LoadInteger '6'
        v644 <- CreateArray [v638, v639, v640, v641, v642, v643]
        v645 <- LoadInteger '1'
        v646 <- LoadInteger '2'
        v647 <- LoadInteger '3'
        v648 <- LoadInteger '4'
        v649 <- LoadInteger '5'
        v650 <- LoadInteger '6'
        v651 <- LoadInteger '7'
        v652 <- CreateArray [v645, v646, v647, v648, v649, v650, v651]
        Reassign v198, v652
        v653 <- LoadInteger '0'
        v654 <- LoadInteger '7'
        v655 <- CallMethod v198, 'splice', [v653, v654]
        Reassign v200, v655
        v656 <- CreateArray []
        v657 <- LoadInteger '1'
        v658 <- LoadInteger '2'
        v659 <- LoadInteger '3'
        v660 <- LoadInteger '4'
        v661 <- LoadInteger '5'
        v662 <- LoadInteger '6'
        v663 <- LoadInteger '7'
        v664 <- CreateArray [v657, v658, v659, v660, v661, v662, v663]
        v665 <- LoadInteger '1'
        v666 <- LoadInteger '2'
        v667 <- LoadInteger '3'
        v668 <- LoadInteger '4'
        v669 <- LoadInteger '5'
        v670 <- LoadInteger '6'
        v671 <- LoadInteger '7'
        v672 <- CreateArray [v665, v666, v667, v668, v669, v670, v671]
        Reassign v198, v672
        v673 <- LoadInteger '0'
        v674 <- LoadInteger '8'
        v675 <- CallMethod v198, 'splice', [v673, v674]
        Reassign v200, v675
        v676 <- CreateArray []
        v677 <- LoadInteger '1'
        v678 <- LoadInteger '2'
        v679 <- LoadInteger '3'
        v680 <- LoadInteger '4'
        v681 <- LoadInteger '5'
        v682 <- LoadInteger '6'
        v683 <- LoadInteger '7'
        v684 <- CreateArray [v677, v678, v679, v680, v681, v682, v683]
        v685 <- LoadInteger '1'
        v686 <- LoadInteger '2'
        v687 <- LoadInteger '3'
        v688 <- LoadInteger '4'
        v689 <- LoadInteger '5'
        v690 <- LoadInteger '6'
        v691 <- LoadInteger '7'
        v692 <- CreateArray [v685, v686, v687, v688, v689, v690, v691]
        Reassign v198, v692
        v693 <- LoadInteger '0'
        v694 <- LoadInteger '100'
        v695 <- CallMethod v198, 'splice', [v693, v694]
        Reassign v200, v695
        v696 <- CreateArray []
        v697 <- LoadInteger '1'
        v698 <- LoadInteger '2'
        v699 <- LoadInteger '3'
        v700 <- LoadInteger '4'
        v701 <- LoadInteger '5'
        v702 <- LoadInteger '6'
        v703 <- LoadInteger '7'
        v704 <- CreateArray [v697, v698, v699, v700, v701, v702, v703]
        v705 <- LoadInteger '1'
        v706 <- LoadInteger '2'
        v707 <- LoadInteger '3'
        v708 <- LoadInteger '4'
        v709 <- LoadInteger '5'
        v710 <- LoadInteger '6'
        v711 <- LoadInteger '7'
        v712 <- CreateArray [v705, v706, v707, v708, v709, v710, v711]
        Reassign v198, v712
        v713 <- LoadInteger '0'
        v714 <- LoadFloat '1e+100'
        v715 <- CallMethod v198, 'splice', [v713, v714]
        Reassign v200, v715
        v716 <- CreateArray []
        v717 <- LoadInteger '1'
        v718 <- LoadInteger '2'
        v719 <- LoadInteger '3'
        v720 <- LoadInteger '4'
        v721 <- LoadInteger '5'
        v722 <- LoadInteger '6'
        v723 <- LoadInteger '7'
        v724 <- CreateArray [v717, v718, v719, v720, v721, v722, v723]
        v725 <- BeginPlainFunction -> 
            v726 <- LoadString 'Exception'
            ThrowException v726
        EndPlainFunction
        BeginObjectLiteral
            ObjectLiteralAddProperty `toString`, v725
        v727 <- EndObjectLiteral
        v728 <- CreateNamedVariable 'obj', 'none'
        Reassign v728, v727
        BeginTry
            v729 <- CreateNamedVariable 'obj', 'none'
            v730 <- LoadInteger '3'
            v731 <- LoadInteger '1'
            v732 <- LoadInteger '2'
            v733 <- LoadInteger '3'
            v734 <- CreateArray [v731, v732, v733]
            v735 <- CallMethod v734, 'splice', [v729, v730]
            v736 <- LoadString 'Should have thrown'
            ThrowException v736
        BeginCatch -> v737
            v738 <- LoadString 'Exception'
        EndTryCatch
        BeginTry
            v739 <- LoadInteger '0'
            v740 <- CreateNamedVariable 'obj', 'none'
            v741 <- LoadInteger '3'
            v742 <- LoadInteger '1'
            v743 <- LoadInteger '2'
            v744 <- LoadInteger '3'
            v745 <- CreateArray [v742, v743, v744]
            v746 <- CallMethod v745, 'splice', [v739, v740, v741]
            v747 <- LoadString 'Should have thrown'
            ThrowException v747
        BeginCatch -> v748
            v749 <- LoadString 'Exception'
        EndTryCatch
        v750 <- LoadInteger '1'
        v751 <- LoadInteger '2'
        v752 <- LoadInteger '3'
        v753 <- CreateArray [v750, v751, v752]
        Reassign v198, v753
        v754 <- LoadInteger '0'
        v755 <- LoadInteger '3'
        v756 <- CreateNamedVariable 'obj', 'none'
        v757 <- CallMethod v198, 'splice', [v754, v755, v756]
        v758 <- LoadInteger '1'
        v759 <- GetProperty v198, 'length'
        v760 <- LoadInteger '1'
        v761 <- LoadInteger '2'
        v762 <- LoadInteger '3'
        v763 <- CreateArray [v760, v761, v762]
        Reassign v198, v763
        v764 <- BeginPlainFunction -> 
            v765 <- LoadInteger '1'
            Return v765
        EndPlainFunction
        BeginObjectLiteral
            ObjectLiteralAddProperty `valueOf`, v764
        v766 <- EndObjectLiteral
        v767 <- BeginPlainFunction -> 
            v768 <- LoadInteger '2'
            Return v768
        EndPlainFunction
        BeginObjectLiteral
            ObjectLiteralAddProperty `toString`, v767
        v769 <- EndObjectLiteral
        v770 <- LoadString 'one'
        v771 <- LoadString 'two'
        v772 <- CallMethod v198, 'splice', [v766, v769, v770, v771]
        Reassign v200, v772
        v773 <- LoadInteger '2'
        v774 <- LoadInteger '3'
        v775 <- CreateArray [v773, v774]
        v776 <- LoadInteger '1'
        v777 <- LoadString 'one'
        v778 <- LoadString 'two'
        v779 <- CreateArray [v776, v777, v778]
    EndForLoop
EndPlainFunction
v780 <- CallFunction v196, []
v781 <- BeginPlainFunction -> 
    v782 <- CreateArray []
    v783 <- CreateNamedVariable 'array', 'var', v782
    v784 <- LoadUndefined
    v785 <- CreateNamedVariable 'spliced', 'var', v784
    BeginForLoopInitializer
        v786 <- LoadInteger '0'
    BeginForLoopCondition -> v787
        v788 <- LoadInteger '13'
        v789 <- Compare v787, '<', v788
    BeginForLoopAfterthought v789 -> v790
        v791 <- UnaryOperation v790, '++'
    BeginForLoopBody -> v792
        v793 <- BeginPlainFunction -> 
            v794 <- LoadInteger '2'
            v795 <- BinaryOperation v794, '*', v792
            v796 <- CallMethod v783, 'push', [v795]
            v797 <- LoadInteger '1'
            v798 <- UnaryOperation '-', v797
            Return v798
        EndPlainFunction
        BeginObjectLiteral
            ObjectLiteralAddProperty `valueOf`, v793
        v799 <- EndObjectLiteral
        v800 <- CreateNamedVariable 'bad_start', 'none'
        Reassign v800, v799
        v801 <- BeginPlainFunction -> 
            v802 <- LoadInteger '2'
            v803 <- BinaryOperation v802, '*', v792
            v804 <- LoadInteger '1'
            v805 <- BinaryOperation v803, '+', v804
            v806 <- CallMethod v783, 'push', [v805]
            v807 <- LoadInteger '1'
            Return v807
        EndPlainFunction
        BeginObjectLiteral
            ObjectLiteralAddProperty `valueOf`, v801
        v808 <- EndObjectLiteral
        v809 <- CreateNamedVariable 'bad_count', 'none'
        Reassign v809, v808
        v810 <- CreateNamedVariable 'bad_start', 'none'
        v811 <- CreateNamedVariable 'bad_count', 'none'
        v812 <- CallMethod v783, 'splice', [v810, v811]
        Reassign v785, v812
        v813 <- LoadInteger '2'
        v814 <- BinaryOperation v813, '*', v792
        v815 <- CallMethod v783, 'push', [v814]
        v816 <- LoadInteger '2'
        v817 <- BinaryOperation v816, '*', v792
        v818 <- LoadInteger '1'
        v819 <- BinaryOperation v817, '+', v818
        v820 <- CallMethod v783, 'push', [v819]
        v821 <- LoadInteger '0'
        v822 <- Compare v792, '==', v821
        BeginIf v822
            v823 <- CreateArray []
            v824 <- LoadInteger '0'
            v825 <- LoadInteger '1'
            v826 <- CreateArray [v824, v825]
        BeginElse
            v827 <- LoadInteger '2'
            v828 <- BinaryOperation v827, '*', v792
            v829 <- LoadInteger '1'
            v830 <- BinaryOperation v828, '-', v829
            v831 <- CreateArray [v830]
            v832 <- LoadInteger '2'
            v833 <- BinaryOperation v832, '*', v792
            v834 <- GetComputedProperty v783, v792
            v835 <- LoadInteger '2'
            v836 <- BinaryOperation v835, '*', v792
            v837 <- LoadInteger '1'
            v838 <- BinaryOperation v836, '+', v837
            v839 <- LoadInteger '1'
            v840 <- BinaryOperation v792, '+', v839
            v841 <- GetComputedProperty v783, v840
        EndIf
    EndForLoop
EndPlainFunction
v842 <- CallFunction v781, []
v843 <- BeginPlainFunction -> 
    BeginForLoopInitializer
        v844 <- LoadInteger '0'
    BeginForLoopCondition -> v845
        v846 <- LoadInteger '7'
        v847 <- Compare v845, '<', v846
    BeginForLoopAfterthought v847 -> v848
        v849 <- UnaryOperation v848, '++'
    BeginForLoopBody -> v850
        BeginTry
            v851 <- LoadInteger '1'
            v852 <- UnaryOperation '-', v851
            v853 <- LoadInteger '0'
            v854 <- LoadInteger '1'
            v855 <- LoadInteger '2'
            v856 <- LoadInteger '3'
            v857 <- LoadInteger '4'
            v858 <- LoadInteger '5'
            v859 <- CreateNamedVariable 'Array', 'none'
            v860 <- LoadInteger '2'
            v861 <- LoadInteger '32'
            v862 <- CreateNamedVariable 'Math', 'none'
            v863 <- CallMethod v862, 'pow', [v860, v861]
            v864 <- LoadInteger '3'
            v865 <- BinaryOperation v863, '-', v864
            v866 <- Construct v859, [v865]
            v867 <- CallMethod v866, 'splice', [v852, v853, v854, v855, v856, v857, v858]
            v868 <- LoadString 'Should have thrown RangeError'
            ThrowException v868
        BeginCatch -> v869
            v870 <- CreateNamedVariable 'RangeError', 'none'
            v871 <- TestInstanceOf v869, v870
        EndTryCatch
        v872 <- LoadInteger '1'
        v873 <- LoadInteger '30'
        v874 <- BinaryOperation v872, '<<', v873
        v875 <- LoadInteger '3'
        v876 <- BinaryOperation v874, '-', v875
        v877 <- CreateNamedVariable 'bigNum', 'var', v876
        v878 <- CreateNamedVariable 'Array', 'none'
        v879 <- Construct v878, [v877]
        v880 <- CreateNamedVariable 'array', 'var', v879
        v881 <- LoadInteger '1'
        v882 <- UnaryOperation '-', v881
        v883 <- LoadInteger '0'
        v884 <- LoadInteger '1'
        v885 <- LoadInteger '2'
        v886 <- LoadInteger '3'
        v887 <- LoadInteger '4'
        v888 <- LoadInteger '5'
        v889 <- LoadInteger '6'
        v890 <- LoadInteger '7'
        v891 <- CallMethod v880, 'splice', [v882, v883, v884, v885, v886, v887, v888, v889, v890]
        v892 <- LoadInteger '7'
        v893 <- BinaryOperation v877, '+', v892
        v894 <- GetProperty v880, 'length'
    EndForLoop
EndPlainFunction
v895 <- CallFunction v843, []
v896 <- BeginPlainFunction -> 
    BeginForLoopInitializer
        v897 <- LoadInteger '0'
    BeginForLoopCondition -> v898
        v899 <- LoadInteger '7'
        v900 <- Compare v898, '<', v899
    BeginForLoopAfterthought v900 -> v901
        v902 <- UnaryOperation v901, '++'
    BeginForLoopBody -> v903
        v904 <- LoadInteger '7'
        v905 <- LoadInteger '8'
        v906 <- LoadInteger '9'
        v907 <- CreateArray [v904, v905, v906]
        v908 <- CreateNamedVariable 'a', 'var', v907
        v909 <- LoadInteger '0'
        v910 <- LoadInteger '0'
        v911 <- LoadInteger '1'
        v912 <- LoadInteger '2'
        v913 <- LoadInteger '3'
        v914 <- LoadInteger '4'
        v915 <- LoadInteger '5'
        v916 <- LoadInteger '6'
        v917 <- CallMethod v908, 'splice', [v909, v910, v911, v912, v913, v914, v915, v916]
        v918 <- LoadInteger '1'
        v919 <- LoadInteger '2'
        v920 <- LoadInteger '3'
        v921 <- LoadInteger '4'
        v922 <- LoadInteger '5'
        v923 <- LoadInteger '6'
        v924 <- LoadInteger '7'
        v925 <- LoadInteger '8'
        v926 <- LoadInteger '9'
        v927 <- CreateArray [v918, v919, v920, v921, v922, v923, v924, v925, v926]
        v928 <- LoadInteger '10'
        v929 <- CallMethod v908, 'hasOwnProperty', [v928]
        v930 <- LoadString 'a.hasOwnProperty(10)'
        v931 <- LoadUndefined
        v932 <- GetElement v908, '10'
    EndForLoop
EndPlainFunction
v933 <- CallFunction v896, []
v934 <- BeginPlainFunction -> 
    v935 <- LoadFloat '1.1'
    v936 <- LoadFloat '1.2'
    v937 <- LoadFloat '1.3'
    v938 <- LoadFloat '1.4'
    v939 <- CreateArray [v935, v936, v937, v938]
    v940 <- CreateNamedVariable 'a', 'var', v939
    v941 <- LoadInteger '2'
    v942 <- LoadInteger '1'
    v943 <- CallMethod v940, 'splice', [v941, v942]
    v944 <- LoadFloat '1.1'
    v945 <- LoadFloat '1.2'
    v946 <- LoadFloat '1.4'
    v947 <- CreateArray [v944, v945, v946]
EndPlainFunction
v948 <- CallFunction v934, []
v949 <- BeginPlainFunction -> 
    BeginForLoopInitializer
        v950 <- LoadInteger '0'
    BeginForLoopCondition -> v951
        v952 <- LoadInteger '7'
        v953 <- Compare v951, '<', v952
    BeginForLoopAfterthought v953 -> v954
        v955 <- UnaryOperation v954, '++'
    BeginForLoopBody -> v956
        v957 <- LoadInteger '1'
        v958 <- LoadInteger '2'
        v959 <- LoadInteger '3'
        v960 <- LoadInteger '4'
        v961 <- CreateArray [v957, v958, v959, v960]
        v962 <- CreateNamedVariable 'array', 'var', v961
        v963 <- LoadString 'foo'
        v964 <- CreateNamedVariable 'Array', 'none'
        v965 <- GetProperty v964, 'prototype'
        SetElement v965, '3', v963
        v966 <- CallMethod v962, 'splice', []
        v967 <- CreateNamedVariable 'spliced', 'var', v966
        v968 <- CreateArray []
        v969 <- LoadInteger '1'
        v970 <- LoadInteger '2'
        v971 <- LoadInteger '3'
        v972 <- LoadInteger '4'
        v973 <- CreateArray [v969, v970, v971, v972]
    EndForLoop
EndPlainFunction
v974 <- CallFunction v949, []
v975 <- BeginPlainFunction -> 
    v976 <- LoadInteger '9'
    v977 <- CreateNamedVariable 'len', 'var', v976
    v978 <- LoadString '@3'
    v979 <- CreateNamedVariable 'at3', 'var', v978
    v980 <- LoadString '@7'
    v981 <- CreateNamedVariable 'at7', 'var', v980
    BeginForLoopInitializer
        v982 <- LoadInteger '0'
    BeginForLoopCondition -> v983
        v984 <- LoadInteger '7'
        v985 <- Compare v983, '<', v984
    BeginForLoopAfterthought v985 -> v986
        v987 <- UnaryOperation v986, '++'
    BeginForLoopBody -> v988
        v989 <- CreateNamedVariable 'Array', 'none'
        v990 <- Construct v989, [v977]
        v991 <- CreateNamedVariable 'array', 'var', v990
        v992 <- CreateArray []
        v993 <- CreateNamedVariable 'array_proto', 'var', v992
        SetElement v993, '3', v979
        SetElement v993, '7', v981
        SetProperty v991, '__proto__', v993
        v994 <- LoadInteger '2'
        v995 <- LoadInteger '2'
        v996 <- LoadString 'one'
        v997 <- LoadUndefined
        v998 <- LoadString 'two'
        v999 <- CallMethod v991, 'splice', [v994, v995, v996, v997, v998]
        v1000 <- CreateNamedVariable 'spliced', 'var', v999
        v1001 <- LoadUndefined
        v1002 <- CreateArray [v1001, v979]
        v1003 <- LoadUndefined
        v1004 <- LoadString 'one'
        v1005 <- LoadUndefined
        v1006 <- LoadString 'two'
        v1007 <- CreateArray [v1003, v1003, v1004, v1005, v1006, v1003, v1003, v981, v981, v1003]
        v1008 <- LoadInteger '3'
        v1009 <- DeleteElement v993, '3'
        v1010 <- LoadUndefined
        v1011 <- GetElement v991, '3'
        v1012 <- LoadInteger '7'
        v1013 <- DeleteElement v993, '7'
        v1014 <- LoadUndefined
        v1015 <- GetElement v991, '7'
        v1016 <- LoadInteger '0'
        v1017 <- CallMethod v991, 'hasOwnProperty', [v1016]
        v1018 <- LoadString 'array.hasOwnProperty(0)'
        v1019 <- LoadInteger '1'
        v1020 <- CallMethod v991, 'hasOwnProperty', [v1019]
        v1021 <- LoadString 'array.hasOwnProperty(1)'
        v1022 <- LoadInteger '2'
        v1023 <- CallMethod v991, 'hasOwnProperty', [v1022]
        v1024 <- LoadInteger '3'
        v1025 <- CallMethod v991, 'hasOwnProperty', [v1024]
        v1026 <- LoadInteger '4'
        v1027 <- CallMethod v991, 'hasOwnProperty', [v1026]
        v1028 <- LoadInteger '5'
        v1029 <- CallMethod v991, 'hasOwnProperty', [v1028]
        v1030 <- LoadString 'array.hasOwnProperty(5)'
        v1031 <- LoadInteger '6'
        v1032 <- CallMethod v991, 'hasOwnProperty', [v1031]
        v1033 <- LoadString 'array.hasOwnProperty(6)'
        v1034 <- LoadInteger '7'
        v1035 <- CallMethod v991, 'hasOwnProperty', [v1034]
        v1036 <- LoadString 'array.hasOwnProperty(7)'
        v1037 <- LoadInteger '8'
        v1038 <- CallMethod v991, 'hasOwnProperty', [v1037]
        v1039 <- LoadInteger '9'
        v1040 <- CallMethod v991, 'hasOwnProperty', [v1039]
        v1041 <- LoadString 'array.hasOwnProperty(9)'
        v1042 <- LoadInteger '10'
        v1043 <- CallMethod v991, 'hasOwnProperty', [v1042]
        v1044 <- LoadString 'array.hasOwnProperty(10)'
        v1045 <- LoadInteger '15'
        v1046 <- CallMethod v991, 'hasOwnProperty', [v1045]
        v1047 <- LoadString 'array.hasOwnProperty(15)'
        v1048 <- LoadInteger '31'
        v1049 <- CallMethod v991, 'hasOwnProperty', [v1048]
        v1050 <- LoadString 'array.hasOwnProperty(31)'
        v1051 <- LoadInteger '63'
        v1052 <- CallMethod v991, 'hasOwnProperty', [v1051]
        v1053 <- LoadString 'array.hasOwnProperty(63)'
        v1054 <- LoadInteger '2'
        v1055 <- LoadInteger '32'
        v1056 <- CreateNamedVariable 'Math', 'none'
        v1057 <- CallMethod v1056, 'pow', [v1054, v1055]
        v1058 <- LoadInteger '2'
        v1059 <- BinaryOperation v1057, '-', v1058
        v1060 <- CallMethod v991, 'hasOwnProperty', [v1059]
        v1061 <- LoadString 'array.hasOwnProperty(Math.pow(2, 32) - 2)'
    EndForLoop
EndPlainFunction
v1062 <- CallFunction v975, []
v1063 <- BeginPlainFunction -> 
    v1064 <- LoadInteger '9'
    v1065 <- CreateNamedVariable 'len', 'var', v1064
    v1066 <- LoadString '@3'
    v1067 <- CreateNamedVariable 'at3', 'var', v1066
    v1068 <- LoadString '@7'
    v1069 <- CreateNamedVariable 'at7', 'var', v1068
    BeginForLoopInitializer
        v1070 <- LoadInteger '0'
    BeginForLoopCondition -> v1071
        v1072 <- LoadInteger '7'
        v1073 <- Compare v1071, '<', v1072
    BeginForLoopAfterthought v1073 -> v1074
        v1075 <- UnaryOperation v1074, '++'
    BeginForLoopBody -> v1076
        v1077 <- CreateNamedVariable 'Array', 'none'
        v1078 <- Construct v1077, [v1065]
        v1079 <- CreateNamedVariable 'array', 'var', v1078
        v1080 <- GetProperty v1077, 'prototype'
        SetElement v1080, '3', v1067
        v1081 <- GetProperty v1077, 'prototype'
        SetElement v1081, '7', v1069
        v1082 <- LoadInteger '2'
        v1083 <- LoadInteger '2'
        v1084 <- LoadString 'one'
        v1085 <- LoadUndefined
        v1086 <- LoadString 'two'
        v1087 <- CallMethod v1079, 'splice', [v1082, v1083, v1084, v1085, v1086]
        v1088 <- CreateNamedVariable 'spliced', 'var', v1087
        v1089 <- LoadUndefined
        v1090 <- CreateArray [v1089, v1067]
        v1091 <- LoadUndefined
        v1092 <- LoadString 'one'
        v1093 <- LoadUndefined
        v1094 <- LoadString 'two'
        v1095 <- CreateArray [v1091, v1091, v1092, v1093, v1094, v1091, v1091, v1069, v1069, v1091]
        v1096 <- GetProperty v1077, 'prototype'
        v1097 <- LoadInteger '3'
        v1098 <- DeleteElement v1096, '3'
        v1099 <- LoadUndefined
        v1100 <- GetElement v1079, '3'
        v1101 <- GetProperty v1077, 'prototype'
        v1102 <- LoadInteger '7'
        v1103 <- DeleteElement v1101, '7'
        v1104 <- LoadUndefined
        v1105 <- GetElement v1079, '7'
        v1106 <- LoadInteger '0'
        v1107 <- CallMethod v1079, 'hasOwnProperty', [v1106]
        v1108 <- LoadString 'array.hasOwnProperty(0)'
        v1109 <- LoadInteger '1'
        v1110 <- CallMethod v1079, 'hasOwnProperty', [v1109]
        v1111 <- LoadString 'array.hasOwnProperty(1)'
        v1112 <- LoadInteger '2'
        v1113 <- CallMethod v1079, 'hasOwnProperty', [v1112]
        v1114 <- LoadInteger '3'
        v1115 <- CallMethod v1079, 'hasOwnProperty', [v1114]
        v1116 <- LoadInteger '4'
        v1117 <- CallMethod v1079, 'hasOwnProperty', [v1116]
        v1118 <- LoadInteger '5'
        v1119 <- CallMethod v1079, 'hasOwnProperty', [v1118]
        v1120 <- LoadString 'array.hasOwnProperty(5)'
        v1121 <- LoadInteger '6'
        v1122 <- CallMethod v1079, 'hasOwnProperty', [v1121]
        v1123 <- LoadString 'array.hasOwnProperty(6)'
        v1124 <- LoadInteger '7'
        v1125 <- CallMethod v1079, 'hasOwnProperty', [v1124]
        v1126 <- LoadString 'array.hasOwnProperty(7)'
        v1127 <- LoadInteger '8'
        v1128 <- CallMethod v1079, 'hasOwnProperty', [v1127]
        v1129 <- LoadInteger '9'
        v1130 <- CallMethod v1079, 'hasOwnProperty', [v1129]
        v1131 <- LoadString 'array.hasOwnProperty(9)'
        v1132 <- LoadInteger '10'
        v1133 <- CallMethod v1079, 'hasOwnProperty', [v1132]
        v1134 <- LoadString 'array.hasOwnProperty(10)'
        v1135 <- LoadInteger '15'
        v1136 <- CallMethod v1079, 'hasOwnProperty', [v1135]
        v1137 <- LoadString 'array.hasOwnProperty(15)'
        v1138 <- LoadInteger '31'
        v1139 <- CallMethod v1079, 'hasOwnProperty', [v1138]
        v1140 <- LoadString 'array.hasOwnProperty(31)'
        v1141 <- LoadInteger '63'
        v1142 <- CallMethod v1079, 'hasOwnProperty', [v1141]
        v1143 <- LoadString 'array.hasOwnProperty(63)'
        v1144 <- LoadInteger '2'
        v1145 <- LoadInteger '32'
        v1146 <- CreateNamedVariable 'Math', 'none'
        v1147 <- CallMethod v1146, 'pow', [v1144, v1145]
        v1148 <- LoadInteger '2'
        v1149 <- BinaryOperation v1147, '-', v1148
        v1150 <- CallMethod v1079, 'hasOwnProperty', [v1149]
        v1151 <- LoadString 'array.hasOwnProperty(Math.pow(2, 32) - 2)'
    EndForLoop
EndPlainFunction
v1152 <- CallFunction v1063, []
v1153 <- BeginPlainFunction -> 
    v1154 <- BeginPlainFunction -> v1155
        v1156 <- CreateArray []
        v1157 <- CreateNamedVariable 'a', 'let', v1156
        v1158 <- LoadUndefined
        v1159 <- Compare v1155, '===', v1158
        BeginIf v1159
            v1160 <- LoadFloat '0.5'
            SetElement v1157, '1', v1160
        EndIf
        v1161 <- LoadInteger '0'
        v1162 <- LoadInteger '0'
        v1163 <- LoadFloat '3.5'
        v1164 <- CallMethod v1157, 'splice', [v1161, v1162, v1163]
        Return v1164
    EndPlainFunction
    v1165 <- CallFunction v1154, []
    v1166 <- CallFunction v1154, []
    v1167 <- LoadBoolean 'true'
    v1168 <- CallFunction v1154, [v1167]
EndPlainFunction
v1169 <- CallFunction v1153, []


function f0() {
    for (let i2 = 0; i2 < 7; i2++) {
        const v10 = new Array(10);
        var array = v10;
        var spliced = array.splice(1, 1, "one", "two");
        spliced.length;
        0 in spliced;
        array.length;
        0 in array;
        1 in array;
        2 in array;
        3 in array;
    }
}
f0();
function f36() {
    for (let i38 = 0; i38 < 7; i38++) {
        [];
        ([]).splice(0, 0);
        [];
        ([]).splice(1, 0);
        [];
        ([]).splice(0, 1);
        [];
        const v61 = -1;
        ([]).splice(v61, 0);
    }
}
f36();
function f66() {
    for (let i68 = 0; i68 < 7; i68++) {
        var a = [1,2,3];
        [];
        a.splice(1, 0, "a", "b", "c");
        [1,"a","b","c",2,3];
    }
}
f66();
function f94() {
    var array;
    for (let i98 = 0; i98 < 7; i98++) {
        array = [1,2,3];
        [];
        array.splice();
        [1,2,3];
        array = [1,2,3];
        [1,2,3];
        array.splice(0);
        [];
        array = [1,2,3];
        [1,2,3];
        array.splice(undefined);
        [];
        array = [1,2,3];
        [1,2,3];
        array.splice("foobar");
        [];
        array = [1,2,3];
        [];
        array.splice(undefined, undefined);
        [1,2,3];
        array = [1,2,3];
        [];
        array.splice("foobar", undefined);
        [1,2,3];
        array = [1,2,3];
        [];
        array.splice(undefined, "foobar");
        [1,2,3];
        array = [1,2,3];
        [];
        array.splice("foobar", "foobar");
        [1,2,3];
    }
}
f94();
function f196() {
    var array;
    var spliced;
    for (let i202 = 0; i202 < 7; i202++) {
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(-100);
        [];
        [1,2,3,4,5,6,7];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(-1e+100);
        [];
        [1,2,3,4,5,6,7];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(-3);
        [1,2,3,4];
        [5,6,7];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(-3.999999);
        [1,2,3,4];
        [5,6,7];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(-3.000001);
        [1,2,3,4];
        [5,6,7];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(4);
        [1,2,3,4];
        [5,6,7];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(4.999999);
        [1,2,3,4];
        [5,6,7];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(4.000001);
        [1,2,3,4];
        [5,6,7];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(6);
        [1,2,3,4,5,6];
        [7];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(7);
        [1,2,3,4,5,6,7];
        [];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(8);
        [1,2,3,4,5,6,7];
        [];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(100);
        [1,2,3,4,5,6,7];
        [];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(1e+100);
        [1,2,3,4,5,6,7];
        [];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(0, -100);
        [1,2,3,4,5,6,7];
        [];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(0, -1e+100);
        [1,2,3,4,5,6,7];
        [];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(0, -3);
        [1,2,3,4,5,6,7];
        [];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(0, -3.999999);
        [1,2,3,4,5,6,7];
        [];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(0, -3.000001);
        [1,2,3,4,5,6,7];
        [];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(0, 4);
        [5,6,7];
        [1,2,3,4];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(0, 4.999999);
        [5,6,7];
        [1,2,3,4];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(0, 4.000001);
        [5,6,7];
        [1,2,3,4];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(0, 6);
        [7];
        [1,2,3,4,5,6];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(0, 7);
        [];
        [1,2,3,4,5,6,7];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(0, 8);
        [];
        [1,2,3,4,5,6,7];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(0, 100);
        [];
        [1,2,3,4,5,6,7];
        array = [1,2,3,4,5,6,7];
        spliced = array.splice(0, 1e+100);
        [];
        [1,2,3,4,5,6,7];
        function f725() {
            throw "Exception";
        }
        obj = { toString: f725 };
        try {
            ([1,2,3]).splice(obj, 3);
            throw "Should have thrown";
        } catch(e737) {
        }
        try {
            ([1,2,3]).splice(0, obj, 3);
            throw "Should have thrown";
        } catch(e748) {
        }
        array = [1,2,3];
        array.splice(0, 3, obj);
        array.length;
        array = [1,2,3];
        function f764() {
            return 1;
        }
        const v766 = { valueOf: f764 };
        function f767() {
            return 2;
        }
        spliced = array.splice(v766, { toString: f767 }, "one", "two");
        [2,3];
        [1,"one","two"];
    }
}
f196();
function f781() {
    var array = [];
    var spliced;
    for (let i787 = 0; i787 < 13; i787++) {
        function f793() {
            array.push(2 * i787);
            return -1;
        }
        bad_start = { valueOf: f793 };
        function f801() {
            array.push((2 * i787) + 1);
            return 1;
        }
        bad_count = { valueOf: f801 };
        spliced = array.splice(bad_start, bad_count);
        array.push(2 * i787);
        array.push((2 * i787) + 1);
        if (i787 == 0) {
            [];
            [0,1];
        } else {
            [(2 * i787) - 1];
            2 * i787;
            array[i787];
            (2 * i787) + 1;
            array[i787 + 1];
        }
    }
}
f781();
function f843() {
    for (let i845 = 0; i845 < 7; i845++) {
        try {
            const v852 = -1;
            const v866 = new Array(Math.pow(2, 32) - 3);
            v866.splice(v852, 0, 1, 2, 3, 4, 5);
            throw "Should have thrown RangeError";
        } catch(e869) {
            e869 instanceof RangeError;
        }
        var bigNum = (1 << 30) - 3;
        const v879 = new Array(bigNum);
        var array = v879;
        array.splice(-1, 0, 1, 2, 3, 4, 5, 6, 7);
        bigNum + 7;
        array.length;
    }
}
f843();
function f896() {
    for (let i898 = 0; i898 < 7; i898++) {
        var a = [7,8,9];
        a.splice(0, 0, 1, 2, 3, 4, 5, 6);
        [1,2,3,4,5,6,7,8,9];
        a.hasOwnProperty(10);
        a[10];
    }
}
f896();
function testSpliceDeleteDouble() {
    var a = [1.1,1.2,1.3,1.4];
    a.splice(2, 1);
    [1.1,1.2,1.4];
}
testSpliceDeleteDouble();
function f949() {
    for (let i951 = 0; i951 < 7; i951++) {
        var array = [1,2,3,4];
        const t283 = Array.prototype;
        t283[3] = "foo";
        var spliced = array.splice();
        [];
        [1,2,3,4];
    }
}
f949();
function f975() {
    var len = 9;
    var at3 = "@3";
    var at7 = "@7";
    for (let i983 = 0; i983 < 7; i983++) {
        const v990 = new Array(len);
        var array = v990;
        var array_proto = [];
        array_proto[3] = at3;
        array_proto[7] = at7;
        array.__proto__ = array_proto;
        var spliced = array.splice(2, 2, "one", undefined, "two");
        [,at3];
        [,,"one",,"two",,,at7,at7,,];
        delete array_proto[3];
        array[3];
        delete array_proto[7];
        array[7];
        array.hasOwnProperty(0);
        array.hasOwnProperty(1);
        array.hasOwnProperty(2);
        array.hasOwnProperty(3);
        array.hasOwnProperty(4);
        array.hasOwnProperty(5);
        array.hasOwnProperty(6);
        array.hasOwnProperty(7);
        array.hasOwnProperty(8);
        array.hasOwnProperty(9);
        array.hasOwnProperty(10);
        array.hasOwnProperty(15);
        array.hasOwnProperty(31);
        array.hasOwnProperty(63);
        array.hasOwnProperty(Math.pow(2, 32) - 2);
    }
}
f975();
function f1063() {
    var len = 9;
    var at3 = "@3";
    var at7 = "@7";
    for (let i1071 = 0; i1071 < 7; i1071++) {
        const v1078 = new Array(len);
        var array = v1078;
        const t334 = Array.prototype;
        t334[3] = at3;
        const t336 = Array.prototype;
        t336[7] = at7;
        var spliced = array.splice(2, 2, "one", undefined, "two");
        [,at3];
        [,,"one",,"two",,,at7,at7,,];
        const t339 = Array.prototype;
        delete t339[3];
        array[3];
        const t342 = Array.prototype;
        delete t342[7];
        array[7];
        array.hasOwnProperty(0);
        array.hasOwnProperty(1);
        array.hasOwnProperty(2);
        array.hasOwnProperty(3);
        array.hasOwnProperty(4);
        array.hasOwnProperty(5);
        array.hasOwnProperty(6);
        array.hasOwnProperty(7);
        array.hasOwnProperty(8);
        array.hasOwnProperty(9);
        array.hasOwnProperty(10);
        array.hasOwnProperty(15);
        array.hasOwnProperty(31);
        array.hasOwnProperty(63);
        array.hasOwnProperty(Math.pow(2, 32) - 2);
    }
}
f1063();
function f1153() {
    function foo(a1155) {
        let a = [];
        if (a1155 === undefined) {
            a[1] = 0.5;
        }
        return a.splice(0, 0, 3.5);
    }
    foo();
    foo();
    foo(true);
}
f1153();

FuzzIL program written to corpus/array-splice.fzil
