v0 <- LoadFloat '1.5'
v1 <- CreateArray [v0]
v2 <- CreateNamedVariable 'a', 'var', v1
v3 <- BeginPlainFunction -> 
    v4 <- LoadFloat '1.7'
    v5 <- CreateNamedVariable 'Array', 'none'
    v6 <- GetProperty v5, 'prototype'
    v7 <- GetProperty v6, 'push'
    v8 <- CallMethod v7, 'call', [v2, v4]
EndPlainFunction
v9 <- CallFunction v3, []
v10 <- CallFunction v3, []
v11 <- CallFunction v3, []
v12 <- CallFunction v3, []
BeginObjectLiteral
v13 <- EndObjectLiteral
v14 <- CallMethod v2, 'push', [v13]
v15 <- CallFunction v3, []
v16 <- LoadFloat '1.7'
v17 <- GetProperty v2, 'length'
v18 <- LoadInteger '1'
v19 <- BinaryOperation v17, '-', v18
v20 <- GetComputedProperty v2, v19


var a = [1.5];
function p() {
    Array.prototype.push.call(a, 1.7);
}
p();
p();
p();
p();
a.push({});
p();
a[a.length - 1];

FuzzIL program written to corpus/regress-indirect-push-unchecked.fzil
