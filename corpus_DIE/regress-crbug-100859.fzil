v0 <- BeginPlainFunction -> 
    v1 <- CreateNamedVariable 'Uint16Array', 'none'
    v2 <- LoadString 'x'
    v3 <- Construct v1, [v2]
    v4 <- TypeOf v3
    v5 <- LoadString 'object'
    v6 <- Compare v4, '===', v5
    v7 <- CallFunction v0, [v6]
EndPlainFunction
v8 <- LoadBoolean 'false'
v9 <- CreateNamedVariable 'exception', 'var', v8
BeginTry
    v10 <- CallFunction v0, []
BeginCatch -> v11
    v12 <- CreateNamedVariable 'RangeError', 'none'
    v13 <- TestInstanceOf v11, v12
    v14 <- LoadBoolean 'true'
    Reassign v9, v14
EndTryCatch


function setx() {
    const v3 = new Uint16Array("x");
    setx(typeof v3 === "object");
}
var exception = false;
try {
    setx();
} catch(e11) {
    e11 instanceof RangeError;
    exception = true;
}

FuzzIL program written to corpus/regress-crbug-100859.fzil
