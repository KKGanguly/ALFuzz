v0 <- BeginPlainFunction -> v1, v2, v3
    v4 <- BinaryOperation v2, '*', v3
    v5 <- BinaryOperation v1, '-', v4
    Return v5
EndPlainFunction
v6 <- BeginPlainFunction -> v7, v8, v9
    v10 <- BinaryOperation v7, '*', v8
    v11 <- BinaryOperation v10, '-', v9
    Return v11
EndPlainFunction
v12 <- BeginPlainFunction -> v13, v14, v15, v16
    v17 <- BinaryOperation v13, '*', v14
    v18 <- BinaryOperation v15, '*', v16
    v19 <- BinaryOperation v17, '-', v18
    Return v19
EndPlainFunction
v20 <- LoadFloat '5.41'
v21 <- UnaryOperation '-', v20
v22 <- LoadFloat '1.1'
v23 <- LoadFloat '2.1'
v24 <- LoadFloat '3.1'
v25 <- CallFunction v0, [v22, v23, v24]
v26 <- LoadFloat '5.41'
v27 <- UnaryOperation '-', v26
v28 <- LoadFloat '1.1'
v29 <- LoadFloat '2.1'
v30 <- LoadFloat '3.1'
v31 <- CallFunction v0, [v28, v29, v30]
v32 <- LoadFloat '5.41'
v33 <- UnaryOperation '-', v32
v34 <- LoadFloat '1.1'
v35 <- LoadFloat '2.1'
v36 <- LoadFloat '3.1'
v37 <- CallFunction v0, [v34, v35, v36]
v38 <- LoadFloat '8.36'
v39 <- LoadFloat '2.2'
v40 <- LoadFloat '3.3'
v41 <- LoadFloat '1.1'
v42 <- UnaryOperation '-', v41
v43 <- CallFunction v6, [v39, v40, v42]
v44 <- LoadFloat '8.36'
v45 <- LoadFloat '2.2'
v46 <- LoadFloat '3.3'
v47 <- LoadFloat '1.1'
v48 <- UnaryOperation '-', v47
v49 <- CallFunction v6, [v45, v46, v48]
v50 <- LoadFloat '8.36'
v51 <- LoadFloat '2.2'
v52 <- LoadFloat '3.3'
v53 <- LoadFloat '1.1'
v54 <- UnaryOperation '-', v53
v55 <- CallFunction v6, [v51, v52, v54]
v56 <- LoadFloat '1.5'
v57 <- UnaryOperation '-', v56
v58 <- LoadFloat '1.5'
v59 <- LoadInteger '3'
v60 <- LoadInteger '12'
v61 <- LoadFloat '0.5'
v62 <- CallFunction v12, [v58, v59, v60, v61]
v63 <- LoadFloat '1.5'
v64 <- UnaryOperation '-', v63
v65 <- LoadFloat '1.5'
v66 <- LoadInteger '3'
v67 <- LoadInteger '12'
v68 <- LoadFloat '0.5'
v69 <- CallFunction v12, [v65, v66, v67, v68]
v70 <- LoadFloat '1.5'
v71 <- UnaryOperation '-', v70
v72 <- LoadFloat '1.5'
v73 <- LoadInteger '3'
v74 <- LoadInteger '12'
v75 <- LoadFloat '0.5'
v76 <- CallFunction v12, [v72, v73, v74, v75]


function f(a1, a2, a3) {
    return a1 - (a2 * a3);
}
function g(a7, a8, a9) {
    return (a7 * a8) - a9;
}
function h(a13, a14, a15, a16) {
    return (a13 * a14) - (a15 * a16);
}
-5.41;
f(1.1, 2.1, 3.1);
-5.41;
f(1.1, 2.1, 3.1);
-5.41;
f(1.1, 2.1, 3.1);
g(2.2, 3.3, -1.1);
g(2.2, 3.3, -1.1);
g(2.2, 3.3, -1.1);
-1.5;
h(1.5, 3, 12, 0.5);
-1.5;
h(1.5, 3, 12, 0.5);
-1.5;
h(1.5, 3, 12, 0.5);

FuzzIL program written to corpus/multiply-sub.fzil
