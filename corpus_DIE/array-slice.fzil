v0 <- BeginPlainFunction -> 
    v1 <- CreateNamedVariable 'Array', 'none'
    v2 <- LoadInteger '10'
    v3 <- Construct v1, [v2]
    v4 <- CreateNamedVariable 'array', 'var', v3
    BeginForLoopInitializer
        v5 <- LoadInteger '0'
    BeginForLoopCondition -> v6
        v7 <- LoadInteger '7'
        v8 <- Compare v6, '<', v7
    BeginForLoopAfterthought v8 -> v9
        v10 <- UnaryOperation v9, '++'
    BeginForLoopBody -> v11
        v12 <- CallMethod v4, 'slice', []
        v13 <- CreateNamedVariable 'sliced', 'var', v12
        v14 <- GetProperty v4, 'length'
        v15 <- GetProperty v13, 'length'
        v16 <- LoadInteger '0'
        v17 <- TestIn v16, v13
    EndForLoop
EndPlainFunction
v18 <- CallFunction v0, []
v19 <- BeginPlainFunction -> 
    BeginForLoopInitializer
        v20 <- LoadInteger '0'
    BeginForLoopCondition -> v21
        v22 <- LoadInteger '7'
        v23 <- Compare v21, '<', v22
    BeginForLoopAfterthought v23 -> v24
        v25 <- UnaryOperation v24, '++'
    BeginForLoopBody -> v26
        v27 <- CreateArray []
        v28 <- LoadInteger '0'
        v29 <- LoadInteger '0'
        v30 <- CreateArray []
        v31 <- CallMethod v30, 'slice', [v28, v29]
        v32 <- CreateArray []
        v33 <- LoadInteger '1'
        v34 <- LoadInteger '0'
        v35 <- CreateArray []
        v36 <- CallMethod v35, 'slice', [v33, v34]
        v37 <- CreateArray []
        v38 <- LoadInteger '0'
        v39 <- LoadInteger '1'
        v40 <- CreateArray []
        v41 <- CallMethod v40, 'slice', [v38, v39]
        v42 <- CreateArray []
        v43 <- LoadInteger '1'
        v44 <- UnaryOperation '-', v43
        v45 <- LoadInteger '0'
        v46 <- CreateArray []
        v47 <- CallMethod v46, 'slice', [v44, v45]
    EndForLoop
EndPlainFunction
v48 <- CallFunction v19, []
v49 <- BeginPlainFunction -> 
    v50 <- CreateNamedVariable 'Array', 'none'
    v51 <- LoadInteger '7'
    v52 <- Construct v50, [v51]
    v53 <- CreateNamedVariable 'array', 'var', v52
    BeginForLoopInitializer
        v54 <- LoadInteger '0'
    BeginForLoopCondition -> v55
        v56 <- LoadInteger '7'
        v57 <- Compare v55, '<', v56
    BeginForLoopAfterthought v57 -> v58
        v59 <- UnaryOperation v58, '++'
    BeginForLoopBody -> v60
        v61 <- CallMethod v53, 'slice', []
        v62 <- LoadInteger '0'
        v63 <- CallMethod v53, 'slice', [v62]
        v64 <- LoadUndefined
        v65 <- CallMethod v53, 'slice', [v64]
        v66 <- LoadString 'foobar'
        v67 <- CallMethod v53, 'slice', [v66]
        v68 <- LoadUndefined
        v69 <- LoadUndefined
        v70 <- CallMethod v53, 'slice', [v68, v69]
    EndForLoop
EndPlainFunction
v71 <- CallFunction v49, []
v72 <- BeginPlainFunction -> 
    v73 <- CreateNamedVariable 'Array', 'none'
    v74 <- LoadInteger '7'
    v75 <- Construct v73, [v74]
    v76 <- CreateNamedVariable 'array', 'var', v75
    BeginForLoopInitializer
        v77 <- LoadInteger '0'
    BeginForLoopCondition -> v78
        v79 <- LoadInteger '7'
        v80 <- Compare v78, '<', v79
    BeginForLoopAfterthought v80 -> v81
        v82 <- UnaryOperation v81, '++'
    BeginForLoopBody -> v83
        v84 <- LoadInteger '7'
        v85 <- LoadInteger '100'
        v86 <- UnaryOperation '-', v85
        v87 <- CallMethod v76, 'slice', [v86]
        v88 <- GetProperty v87, 'length'
        v89 <- LoadInteger '3'
        v90 <- LoadInteger '3'
        v91 <- UnaryOperation '-', v90
        v92 <- CallMethod v76, 'slice', [v91]
        v93 <- GetProperty v92, 'length'
        v94 <- LoadInteger '3'
        v95 <- LoadInteger '4'
        v96 <- CallMethod v76, 'slice', [v95]
        v97 <- GetProperty v96, 'length'
        v98 <- LoadInteger '1'
        v99 <- LoadInteger '6'
        v100 <- CallMethod v76, 'slice', [v99]
        v101 <- GetProperty v100, 'length'
        v102 <- LoadInteger '0'
        v103 <- LoadInteger '7'
        v104 <- CallMethod v76, 'slice', [v103]
        v105 <- GetProperty v104, 'length'
        v106 <- LoadInteger '0'
        v107 <- LoadInteger '8'
        v108 <- CallMethod v76, 'slice', [v107]
        v109 <- GetProperty v108, 'length'
        v110 <- LoadInteger '0'
        v111 <- LoadInteger '100'
        v112 <- CallMethod v76, 'slice', [v111]
        v113 <- GetProperty v112, 'length'
        v114 <- LoadInteger '0'
        v115 <- LoadInteger '0'
        v116 <- LoadInteger '100'
        v117 <- UnaryOperation '-', v116
        v118 <- CallMethod v76, 'slice', [v115, v117]
        v119 <- GetProperty v118, 'length'
        v120 <- LoadInteger '4'
        v121 <- LoadInteger '0'
        v122 <- LoadInteger '3'
        v123 <- UnaryOperation '-', v122
        v124 <- CallMethod v76, 'slice', [v121, v123]
        v125 <- GetProperty v124, 'length'
        v126 <- LoadInteger '4'
        v127 <- LoadInteger '0'
        v128 <- LoadInteger '4'
        v129 <- CallMethod v76, 'slice', [v127, v128]
        v130 <- GetProperty v129, 'length'
        v131 <- LoadInteger '6'
        v132 <- LoadInteger '0'
        v133 <- LoadInteger '6'
        v134 <- CallMethod v76, 'slice', [v132, v133]
        v135 <- GetProperty v134, 'length'
        v136 <- LoadInteger '7'
        v137 <- LoadInteger '0'
        v138 <- LoadInteger '7'
        v139 <- CallMethod v76, 'slice', [v137, v138]
        v140 <- GetProperty v139, 'length'
        v141 <- LoadInteger '7'
        v142 <- LoadInteger '0'
        v143 <- LoadInteger '8'
        v144 <- CallMethod v76, 'slice', [v142, v143]
        v145 <- GetProperty v144, 'length'
        v146 <- LoadInteger '7'
        v147 <- LoadInteger '0'
        v148 <- LoadInteger '100'
        v149 <- CallMethod v76, 'slice', [v147, v148]
        v150 <- GetProperty v149, 'length'
        v151 <- BeginPlainFunction -> 
            v152 <- LoadString 'Exception'
            ThrowException v152
        EndPlainFunction
        BeginObjectLiteral
            ObjectLiteralAddProperty `toString`, v151
        v153 <- EndObjectLiteral
        v154 <- CreateNamedVariable 'obj', 'none'
        Reassign v154, v153
        v155 <- LoadInteger '7'
        v156 <- LoadInteger '0'
        v157 <- LoadInteger '7'
        v158 <- CreateNamedVariable 'obj', 'none'
        v159 <- LoadNull
        v160 <- LoadUndefined
        v161 <- CallMethod v76, 'slice', [v156, v157, v158, v159, v160]
        v162 <- GetProperty v161, 'length'
        v163 <- LoadInteger '1'
        v164 <- BeginPlainFunction -> 
            v165 <- LoadInteger '1'
            Return v165
        EndPlainFunction
        BeginObjectLiteral
            ObjectLiteralAddProperty `valueOf`, v164
        v166 <- EndObjectLiteral
        v167 <- BeginPlainFunction -> 
            v168 <- LoadInteger '2'
            Return v168
        EndPlainFunction
        BeginObjectLiteral
            ObjectLiteralAddProperty `toString`, v167
        v169 <- EndObjectLiteral
        v170 <- CallMethod v76, 'slice', [v166, v169]
        v171 <- GetProperty v170, 'length'
        BeginTry
            v172 <- LoadInteger '7'
            v173 <- LoadInteger '0'
            v174 <- CallMethod v76, 'slice', [v173, v158]
            v175 <- GetProperty v174, 'length'
            v176 <- LoadString 'Should have thrown'
            ThrowException v176
        BeginCatch -> v177
            v178 <- LoadString 'Exception'
        EndTryCatch
    EndForLoop
EndPlainFunction
v179 <- CallFunction v72, []
v180 <- BeginPlainFunction -> 
    v181 <- CreateArray []
    v182 <- CreateNamedVariable 'array', 'var', v181
    v183 <- CreateArray []
    v184 <- CreateNamedVariable 'expected', 'var', v183
    v185 <- BeginPlainFunction -> 
        v186 <- GetProperty v182, 'length'
        v187 <- CallMethod v182, 'push', [v186]
        v188 <- LoadInteger '1'
        v189 <- UnaryOperation '-', v188
        Return v189
    EndPlainFunction
    BeginObjectLiteral
        ObjectLiteralAddProperty `valueOf`, v185
    v190 <- EndObjectLiteral
    v191 <- CreateNamedVariable 'bad_guy', 'none'
    Reassign v191, v190
    BeginForLoopInitializer
        v192 <- LoadInteger '0'
    BeginForLoopCondition -> v193
        v194 <- LoadInteger '13'
        v195 <- Compare v193, '<', v194
    BeginForLoopAfterthought v195 -> v196
        v197 <- UnaryOperation v196, '++'
    BeginForLoopBody -> v198
        v199 <- CreateNamedVariable 'bad_guy', 'none'
        v200 <- CallMethod v182, 'slice', [v199]
        v201 <- CreateNamedVariable 'sliced', 'var', v200
        v202 <- CallMethod v184, 'push', [v198]
        v203 <- LoadInteger '0'
        v204 <- Compare v198, '==', v203
        BeginIf v204
            v205 <- CreateArray []
        BeginElse
            v206 <- LoadInteger '1'
            v207 <- BinaryOperation v198, '-', v206
            v208 <- CreateArray [v207]
        EndIf
    EndForLoop
EndPlainFunction
v209 <- CallFunction v180, []
v210 <- BeginPlainFunction -> 
    v211 <- LoadInteger '9'
    v212 <- CreateNamedVariable 'len', 'var', v211
    v213 <- CreateNamedVariable 'Array', 'none'
    v214 <- Construct v213, [v212]
    v215 <- CreateNamedVariable 'array', 'var', v214
    v216 <- LoadString '@3'
    v217 <- CreateNamedVariable 'at3', 'var', v216
    v218 <- LoadString '@7'
    v219 <- CreateNamedVariable 'at7', 'var', v218
    BeginForLoopInitializer
        v220 <- LoadInteger '0'
    BeginForLoopCondition -> v221
        v222 <- LoadInteger '7'
        v223 <- Compare v221, '<', v222
    BeginForLoopAfterthought v223 -> v224
        v225 <- UnaryOperation v224, '++'
    BeginForLoopBody -> v226
        v227 <- CreateArray []
        v228 <- CreateNamedVariable 'array_proto', 'var', v227
        SetElement v228, '3', v217
        SetElement v228, '7', v219
        SetProperty v215, '__proto__', v228
        v229 <- GetProperty v215, 'length'
        BeginForLoopInitializer
            v230 <- LoadInteger '0'
        BeginForLoopCondition -> v231
            v232 <- GetProperty v215, 'length'
            v233 <- Compare v231, '<', v232
        BeginForLoopAfterthought v233 -> v234
            v235 <- UnaryOperation v234, '++'
        BeginForLoopBody -> v236
            v237 <- GetComputedProperty v215, v236
            v238 <- GetComputedProperty v228, v236
        EndForLoop
        v239 <- CallMethod v215, 'slice', []
        v240 <- CreateNamedVariable 'sliced', 'var', v239
        v241 <- GetProperty v240, 'length'
        v242 <- LoadInteger '3'
        v243 <- DeleteElement v228, '3'
        v244 <- LoadInteger '7'
        v245 <- DeleteElement v228, '7'
        v246 <- GetElement v215, '3'
        v247 <- LoadUndefined
        v248 <- LoadInteger '3'
        v249 <- CallMethod v215, 'hasOwnProperty', [v248]
        v250 <- GetElement v240, '3'
        v251 <- LoadInteger '3'
        v252 <- CallMethod v240, 'hasOwnProperty', [v251]
        v253 <- GetElement v215, '7'
        v254 <- LoadUndefined
        v255 <- LoadInteger '7'
        v256 <- CallMethod v215, 'hasOwnProperty', [v255]
        v257 <- GetElement v240, '7'
        v258 <- LoadInteger '7'
        v259 <- CallMethod v240, 'hasOwnProperty', [v258]
        v260 <- LoadString '@5'
        SetElement v228, '5', v260
        v261 <- GetElement v215, '5'
        v262 <- GetElement v228, '5'
        v263 <- LoadInteger '5'
        v264 <- CallMethod v215, 'hasOwnProperty', [v263]
    EndForLoop
EndPlainFunction
v265 <- CallFunction v210, []
v266 <- BeginPlainFunction -> 
    v267 <- LoadInteger '9'
    v268 <- CreateNamedVariable 'len', 'var', v267
    v269 <- CreateNamedVariable 'Array', 'none'
    v270 <- Construct v269, [v268]
    v271 <- CreateNamedVariable 'array', 'var', v270
    v272 <- LoadString '@3'
    v273 <- CreateNamedVariable 'at3', 'var', v272
    v274 <- LoadString '@7'
    v275 <- CreateNamedVariable 'at7', 'var', v274
    BeginForLoopInitializer
        v276 <- LoadInteger '0'
    BeginForLoopCondition -> v277
        v278 <- LoadInteger '7'
        v279 <- Compare v277, '<', v278
    BeginForLoopAfterthought v279 -> v280
        v281 <- UnaryOperation v280, '++'
    BeginForLoopBody -> v282
        v283 <- GetProperty v269, 'prototype'
        SetElement v283, '3', v273
        v284 <- GetProperty v269, 'prototype'
        SetElement v284, '7', v275
        v285 <- GetProperty v271, 'length'
        BeginForLoopInitializer
            v286 <- LoadInteger '0'
        BeginForLoopCondition -> v287
            v288 <- GetProperty v271, 'length'
            v289 <- Compare v287, '<', v288
        BeginForLoopAfterthought v289 -> v290
            v291 <- UnaryOperation v290, '++'
        BeginForLoopBody -> v292
            v293 <- GetComputedProperty v271, v292
            v294 <- GetProperty v269, 'prototype'
            v295 <- GetComputedProperty v294, v292
        EndForLoop
        v296 <- CallMethod v271, 'slice', []
        v297 <- CreateNamedVariable 'sliced', 'var', v296
        v298 <- GetProperty v297, 'length'
        v299 <- GetProperty v269, 'prototype'
        v300 <- LoadInteger '3'
        v301 <- DeleteElement v299, '3'
        v302 <- GetProperty v269, 'prototype'
        v303 <- LoadInteger '7'
        v304 <- DeleteElement v302, '7'
        v305 <- GetElement v271, '3'
        v306 <- LoadUndefined
        v307 <- LoadInteger '3'
        v308 <- CallMethod v271, 'hasOwnProperty', [v307]
        v309 <- GetElement v297, '3'
        v310 <- LoadInteger '3'
        v311 <- CallMethod v297, 'hasOwnProperty', [v310]
        v312 <- GetElement v271, '7'
        v313 <- LoadUndefined
        v314 <- LoadInteger '7'
        v315 <- CallMethod v271, 'hasOwnProperty', [v314]
        v316 <- GetElement v297, '7'
        v317 <- LoadInteger '7'
        v318 <- CallMethod v297, 'hasOwnProperty', [v317]
        v319 <- LoadString '@5'
        v320 <- GetProperty v269, 'prototype'
        SetElement v320, '5', v319
        v321 <- GetElement v271, '5'
        v322 <- GetProperty v269, 'prototype'
        v323 <- GetElement v322, '5'
        v324 <- LoadInteger '5'
        v325 <- CallMethod v271, 'hasOwnProperty', [v324]
        v326 <- GetElement v297, '5'
        v327 <- GetProperty v269, 'prototype'
        v328 <- GetElement v327, '5'
        v329 <- LoadInteger '5'
        v330 <- CallMethod v297, 'hasOwnProperty', [v329]
        v331 <- GetProperty v269, 'prototype'
        v332 <- LoadInteger '5'
        v333 <- DeleteElement v331, '5'
    EndForLoop
EndPlainFunction
v334 <- CallFunction v266, []
v335 <- BeginPlainFunction -> 
    v336 <- BeginPlainFunction -> v337, v338, v339, v340
        v341 <- LoadArguments
        v342 <- LoadInteger '1'
        v343 <- CreateNamedVariable 'Array', 'none'
        v344 <- GetProperty v343, 'prototype'
        v345 <- GetProperty v344, 'slice'
        v346 <- CallMethod v345, 'call', [v341, v342]
        v347 <- CreateNamedVariable 'result', 'let', v346
    EndPlainFunction
    v348 <- CreateArray []
    v349 <- CallFunction v336, [v348]
    v350 <- LoadString 'a'
    v351 <- CreateArray [v350]
    v352 <- LoadString 'a'
    v353 <- CallFunction v336, [v351, v352]
    v354 <- LoadString 'a'
    v355 <- LoadInteger '1'
    v356 <- CreateArray [v354, v355]
    v357 <- LoadString 'a'
    v358 <- LoadInteger '1'
    v359 <- CallFunction v336, [v356, v357, v358]
    v360 <- LoadString 'a'
    v361 <- LoadInteger '1'
    v362 <- LoadInteger '2'
    v363 <- LoadInteger '3'
    v364 <- LoadInteger '4'
    v365 <- LoadInteger '5'
    v366 <- CreateArray [v360, v361, v362, v363, v364, v365]
    v367 <- LoadString 'a'
    v368 <- LoadInteger '1'
    v369 <- LoadInteger '2'
    v370 <- LoadInteger '3'
    v371 <- LoadInteger '4'
    v372 <- LoadInteger '5'
    v373 <- CallFunction v336, [v366, v367, v368, v369, v370, v371, v372]
    v374 <- LoadString 'a'
    v375 <- LoadInteger '1'
    v376 <- LoadUndefined
    v377 <- CreateArray [v374, v375, v376]
    v378 <- LoadString 'a'
    v379 <- LoadInteger '1'
    v380 <- LoadUndefined
    v381 <- CallFunction v336, [v377, v378, v379, v380]
    v382 <- LoadString 'a'
    v383 <- LoadInteger '1'
    v384 <- LoadUndefined
    v385 <- LoadInteger '0'
    v386 <- Void_ v385
    v387 <- CreateArray [v382, v383, v384, v386]
    v388 <- LoadString 'a'
    v389 <- LoadInteger '1'
    v390 <- LoadUndefined
    v391 <- LoadInteger '0'
    v392 <- Void_ v391
    v393 <- CallFunction v336, [v387, v388, v389, v390, v392]
EndPlainFunction
v394 <- CallFunction v335, []
v395 <- BeginPlainFunction -> 
    v396 <- BeginPlainFunction -> v397, v398
        v399 <- LoadInteger '1'
        v400 <- LoadArguments
        v401 <- GetProperty v400, 'length'
        v402 <- LoadUndefined
        v403 <- LoadInteger '239'
        Reassign v398, v403
        v404 <- LoadInteger '1'
        v405 <- LoadArguments
        v406 <- GetProperty v405, 'length'
        v407 <- LoadArguments
        v408 <- LoadInteger '0'
        v409 <- CreateNamedVariable 'Array', 'none'
        v410 <- GetProperty v409, 'prototype'
        v411 <- GetProperty v410, 'slice'
        v412 <- CallMethod v411, 'call', [v407, v408]
        v413 <- CreateNamedVariable 'result', 'let', v412
        v414 <- CreateArray [v397]
    EndPlainFunction
    v415 <- LoadString 'a'
    v416 <- CallFunction v396, [v415]
EndPlainFunction
v417 <- CallFunction v395, []
v418 <- BeginPlainFunction -> 
    v419 <- BeginPlainFunction -> v420, v421
        v422 <- LoadInteger '1'
        v423 <- LoadArguments
        v424 <- GetProperty v423, 'length'
        v425 <- LoadInteger '7'
        v426 <- LoadArguments
        SetProperty v426, 'length', v425
        v427 <- LoadArguments
        v428 <- LoadInteger '0'
        v429 <- CreateNamedVariable 'Array', 'none'
        v430 <- GetProperty v429, 'prototype'
        v431 <- GetProperty v430, 'slice'
        v432 <- CallMethod v431, 'call', [v427, v428]
        v433 <- CreateNamedVariable 'result', 'let', v432
        v434 <- LoadUndefined
        v435 <- CreateArray [v420, v434, v434, v434, v434, v434, v434]
    EndPlainFunction
    v436 <- LoadString 'a'
    v437 <- CallFunction v419, [v436]
EndPlainFunction
v438 <- CallFunction v418, []
v439 <- BeginPlainFunction -> 
    v440 <- BeginPlainFunction -> v441, v442
        v443 <- LoadInteger '1'
        v444 <- LoadArguments
        v445 <- GetProperty v444, 'length'
        v446 <- LoadString 'foobar'
        v447 <- LoadArguments
        SetProperty v447, 'length', v446
        v448 <- LoadArguments
        v449 <- LoadInteger '0'
        v450 <- CreateNamedVariable 'Array', 'none'
        v451 <- GetProperty v450, 'prototype'
        v452 <- GetProperty v451, 'slice'
        v453 <- CallMethod v452, 'call', [v448, v449]
        v454 <- CreateNamedVariable 'result', 'let', v453
        v455 <- CreateArray []
    EndPlainFunction
    v456 <- LoadString 'a'
    v457 <- CallFunction v440, [v456]
EndPlainFunction
v458 <- CallFunction v439, []
v459 <- BeginPlainFunction -> 
    v460 <- BeginPlainFunction -> v461, v462
        v463 <- LoadInteger '1'
        v464 <- LoadArguments
        v465 <- GetProperty v464, 'length'
        v466 <- LoadInteger '239'
        v467 <- LoadArguments
        SetElement v467, '3', v466
        v468 <- LoadArguments
        v469 <- LoadInteger '0'
        v470 <- CreateNamedVariable 'Array', 'none'
        v471 <- GetProperty v470, 'prototype'
        v472 <- GetProperty v471, 'slice'
        v473 <- CallMethod v472, 'call', [v468, v469]
        v474 <- CreateNamedVariable 'result', 'let', v473
        v475 <- CreateArray [v461]
    EndPlainFunction
    v476 <- LoadString 'a'
    v477 <- CallFunction v460, [v476]
EndPlainFunction
v478 <- CallFunction v459, []
v479 <- BeginPlainFunction -> 
    v480 <- BeginPlainFunction -> v481, v482, v483
        v484 <- LoadInteger '3'
        v485 <- LoadArguments
        v486 <- GetProperty v485, 'length'
        v487 <- LoadArguments
        v488 <- LoadInteger '1'
        v489 <- DeleteElement v487, '1'
        v490 <- LoadArguments
        v491 <- LoadInteger '0'
        v492 <- CreateNamedVariable 'Array', 'none'
        v493 <- GetProperty v492, 'prototype'
        v494 <- GetProperty v493, 'slice'
        v495 <- CallMethod v494, 'call', [v490, v491]
        v496 <- CreateNamedVariable 'result', 'let', v495
        v497 <- LoadUndefined
        v498 <- CreateArray [v481, v497, v483]
    EndPlainFunction
    v499 <- LoadString 'a'
    v500 <- LoadString 'b'
    v501 <- LoadString 'c'
    v502 <- CallFunction v480, [v499, v500, v501]
EndPlainFunction
v503 <- CallFunction v479, []
v504 <- BeginPlainFunction -> 
    v505 <- BeginPlainFunction -> 
        v506 <- LoadArguments
        v507 <- LoadInteger '1'
        v508 <- DeleteElement v506, '1'
        v509 <- LoadInteger '5'
        v510 <- LoadArguments
        v511 <- GetProperty v510, '__proto__'
        SetElement v511, '1', v509
        v512 <- LoadArguments
        v513 <- CreateNamedVariable 'Array', 'none'
        v514 <- GetProperty v513, 'prototype'
        v515 <- GetProperty v514, 'slice'
        v516 <- CallMethod v515, 'call', [v512]
        v517 <- CreateNamedVariable 'result', 'var', v516
        v518 <- LoadArguments
        v519 <- GetProperty v518, '__proto__'
        v520 <- LoadInteger '1'
        v521 <- DeleteElement v519, '1'
        v522 <- LoadInteger '1'
        v523 <- LoadInteger '5'
        v524 <- LoadInteger '3'
        v525 <- CreateArray [v522, v523, v524]
    EndPlainFunction
    v526 <- LoadInteger '1'
    v527 <- LoadInteger '2'
    v528 <- LoadInteger '3'
    v529 <- CallFunction v505, [v526, v527, v528]
EndPlainFunction
v530 <- CallFunction v504, []


function f0() {
    const v3 = new Array(10);
    var array = v3;
    for (let i6 = 0; i6 < 7; i6++) {
        var sliced = array.slice();
        array.length;
        sliced.length;
        0 in sliced;
    }
}
f0();
function f19() {
    for (let i21 = 0; i21 < 7; i21++) {
        [];
        ([]).slice(0, 0);
        [];
        ([]).slice(1, 0);
        [];
        ([]).slice(0, 1);
        [];
        const v44 = -1;
        ([]).slice(v44, 0);
    }
}
f19();
function f49() {
    const v52 = new Array(7);
    var array = v52;
    for (let i55 = 0; i55 < 7; i55++) {
        array.slice();
        array.slice(0);
        array.slice(undefined);
        array.slice("foobar");
        array.slice(undefined, undefined);
    }
}
f49();
function f72() {
    const v75 = new Array(7);
    var array = v75;
    for (let i78 = 0; i78 < 7; i78++) {
        array.slice(-100).length;
        array.slice(-3).length;
        array.slice(4).length;
        array.slice(6).length;
        array.slice(7).length;
        array.slice(8).length;
        array.slice(100).length;
        array.slice(0, -100).length;
        array.slice(0, -3).length;
        array.slice(0, 4).length;
        array.slice(0, 6).length;
        array.slice(0, 7).length;
        array.slice(0, 8).length;
        array.slice(0, 100).length;
        function f151() {
            throw "Exception";
        }
        obj = { toString: f151 };
        array.slice(0, 7, obj, null, undefined).length;
        function f164() {
            return 1;
        }
        const v166 = { valueOf: f164 };
        function f167() {
            return 2;
        }
        array.slice(v166, { toString: f167 }).length;
        try {
            array.slice(0, obj).length;
            throw "Should have thrown";
        } catch(e177) {
        }
    }
}
f72();
function f180() {
    var array = [];
    var expected = [];
    function f185() {
        array.push(array.length);
        return -1;
    }
    bad_guy = { valueOf: f185 };
    for (let i193 = 0; i193 < 13; i193++) {
        var sliced = array.slice(bad_guy);
        expected.push(i193);
        if (i193 == 0) {
            [];
        } else {
            [i193 - 1];
        }
    }
}
f180();
function f210() {
    var len = 9;
    const v214 = new Array(len);
    var array = v214;
    var at3 = "@3";
    var at7 = "@7";
    for (let i221 = 0; i221 < 7; i221++) {
        var array_proto = [];
        array_proto[3] = at3;
        array_proto[7] = at7;
        array.__proto__ = array_proto;
        array.length;
        for (let i231 = 0; i231 < array.length; i231++) {
            array[i231];
            array_proto[i231];
        }
        var sliced = array.slice();
        sliced.length;
        delete array_proto[3];
        delete array_proto[7];
        array[3];
        array.hasOwnProperty(3);
        sliced[3];
        sliced.hasOwnProperty(3);
        array[7];
        array.hasOwnProperty(7);
        sliced[7];
        sliced.hasOwnProperty(7);
        array_proto[5] = "@5";
        array[5];
        array_proto[5];
        array.hasOwnProperty(5);
    }
}
f210();
function f266() {
    var len = 9;
    const v270 = new Array(len);
    var array = v270;
    var at3 = "@3";
    var at7 = "@7";
    for (let i277 = 0; i277 < 7; i277++) {
        const t137 = Array.prototype;
        t137[3] = at3;
        const t139 = Array.prototype;
        t139[7] = at7;
        array.length;
        for (let i287 = 0; i287 < array.length; i287++) {
            array[i287];
            Array.prototype[i287];
        }
        var sliced = array.slice();
        sliced.length;
        const t147 = Array.prototype;
        delete t147[3];
        const t149 = Array.prototype;
        delete t149[7];
        array[3];
        array.hasOwnProperty(3);
        sliced[3];
        sliced.hasOwnProperty(3);
        array[7];
        array.hasOwnProperty(7);
        sliced[7];
        sliced.hasOwnProperty(7);
        const t151 = Array.prototype;
        t151[5] = "@5";
        array[5];
        Array.prototype[5];
        array.hasOwnProperty(5);
        sliced[5];
        Array.prototype[5];
        sliced.hasOwnProperty(5);
        const t162 = Array.prototype;
        delete t162[5];
    }
}
f266();
function f335() {
    function func(a337, a338, a339, a340) {
        let result = Array.prototype.slice.call(arguments, 1);
    }
    func([]);
    func(["a"], "a");
    func(["a",1], "a", 1);
    func(["a",1,2,3,4,5], "a", 1, 2, 3, 4, 5);
    func(["a",1,,], "a", 1, undefined);
    func(["a",1,,void 0], "a", 1, undefined, void 0);
}
f335();
function f395() {
    function func(a397, a398) {
        arguments.length;
        a398 = 239;
        arguments.length;
        let result = Array.prototype.slice.call(arguments, 0);
        [a397];
    }
    func("a");
}
f395();
function f418() {
    function func(a420, a421) {
        arguments.length;
        arguments.length = 7;
        let result = Array.prototype.slice.call(arguments, 0);
        [a420,,,,,,,];
    }
    func("a");
}
f418();
function f439() {
    function func(a441, a442) {
        arguments.length;
        arguments.length = "foobar";
        let result = Array.prototype.slice.call(arguments, 0);
        [];
    }
    func("a");
}
f439();
function f459() {
    function func(a461, a462) {
        arguments.length;
        arguments[3] = 239;
        let result = Array.prototype.slice.call(arguments, 0);
        [a461];
    }
    func("a");
}
f459();
function f479() {
    function func(a481, a482, a483) {
        arguments.length;
        delete arguments[1];
        let result = Array.prototype.slice.call(arguments, 0);
        [a481,,a483];
    }
    func("a", "b", "c");
}
f479();
function f504() {
    function f() {
        delete arguments[1];
        const t238 = arguments.__proto__;
        t238[1] = 5;
        var result = Array.prototype.slice.call(arguments);
        const t242 = arguments.__proto__;
        delete t242[1];
        [1,5,3];
    }
    f(1, 2, 3);
}
f504();

FuzzIL program written to corpus/array-slice.fzil
