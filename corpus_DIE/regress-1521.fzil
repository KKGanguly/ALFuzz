v0 <- BeginPlainFunction -> v1
    BeginTry
        v2 <- CreateNamedVariable 'Error', 'none'
        v3 <- Construct v2, []
        ThrowException v3
    BeginCatch -> v4
        v5 <- LoadInteger '1'
        BeginObjectLiteral
            ObjectLiteralAddProperty `f`, v5
        v6 <- EndObjectLiteral
        v7 <- CreateNamedVariable 'y', 'var', v6
        v8 <- BeginPlainFunction -> 
            v9 <- CreateNamedVariable 'z', 'var', v7
            v10 <- BeginPlainFunction -> 
                v11 <- GetProperty v7, 'f'
                v12 <- GetProperty v9, 'f'
                v13 <- Compare v11, '===', v12
                BeginIf v13
                    Return v1
                EndIf
            EndPlainFunction
            v14 <- CreateNamedVariable 'g', 'var', v10
            Return v14
        EndPlainFunction
        v15 <- CreateNamedVariable 'f', 'var', v8
        v16 <- LoadInteger '3'
        v17 <- CallFunction v15, []
        v18 <- CallFunction v17, []
    EndTryCatch
EndPlainFunction
v19 <- LoadInteger '3'
v20 <- CallFunction v0, [v19]


function test(a1) {
    try {
        const v3 = new Error();
        throw v3;
    } catch(e4) {
        var y = { f: 1 };
        function f8() {
            var z = y;
            function f10() {
                if (y.f === z.f) {
                    return a1;
                }
            }
            var g = f10;
            return g;
        }
        var f = f8;
        const t17 = f();
        t17();
    }
}
test(3);

FuzzIL program written to corpus/regress-1521.fzil
