v0 <- LoadInteger '42'
v1 <- CreateNamedVariable 'x', 'var', v0
v2 <- BeginPlainFunction -> v3
    v4 <- BinaryOperation v1, '+', v3
    Return v4
EndPlainFunction
v5 <- BeginPlainFunction -> v6, v7
    v8 <- LoadInteger '13'
    v9 <- CallFunction v2, [v6, v7, v8]
    Return v9
EndPlainFunction
v10 <- LoadInteger '42'
v11 <- LoadInteger '12'
v12 <- BinaryOperation v10, '+', v11
v13 <- LoadInteger '12'
v14 <- CallFunction v5, [v13]


var x = 42;
function foo(a3) {
    return x + a3;
}
function bar(a6, a7) {
    return foo(a6, a7, 13);
}
42 + 12;
bar(12);

FuzzIL program written to corpus/inline-surplus-arguments.fzil
