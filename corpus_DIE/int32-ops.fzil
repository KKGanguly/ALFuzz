v0 <- LoadInteger '1'
v1 <- LoadInteger '30'
v2 <- BinaryOperation v0, '<<', v1
v3 <- LoadInteger '1'
v4 <- BinaryOperation v2, '-', v3
v5 <- LoadInteger '1'
v6 <- LoadInteger '30'
v7 <- BinaryOperation v5, '<<', v6
v8 <- BinaryOperation v4, '+', v7
v9 <- CreateNamedVariable 'SMI_MAX', 'const', v8
v10 <- UnaryOperation '-', v9
v11 <- LoadInteger '1'
v12 <- BinaryOperation v10, '-', v11
v13 <- CreateNamedVariable 'SMI_MIN', 'const', v12
v14 <- LoadInteger '1'
v15 <- CreateNamedVariable 'ONE', 'const', v14
v16 <- LoadInteger '100'
v17 <- CreateNamedVariable 'ONE_HUNDRED', 'const', v16
v18 <- BeginPlainFunction -> 
    v19 <- BeginPlainFunction -> 
        v20 <- LoadInteger '42'
        Return v20
    EndPlainFunction
    v21 <- LoadThis
    SetProperty v21, 'valueOf', v19
EndPlainFunction
v22 <- Construct v18, []
v23 <- CreateNamedVariable 'OBJ_42', 'const', v22
v24 <- LoadInteger '42'
v25 <- CallMethod v23, 'valueOf', []
v26 <- BeginPlainFunction -> v27
    v28 <- LoadInteger '1'
    v29 <- BinaryOperation v27, '+', v28
    Return v29
EndPlainFunction
v30 <- BeginPlainFunction -> v31
    v32 <- LoadInteger '100'
    v33 <- BinaryOperation v31, '+', v32
    Return v33
EndPlainFunction
v34 <- BeginPlainFunction -> v35
    v36 <- LoadInteger '1'
    v37 <- BinaryOperation v36, '+', v35
    Return v37
EndPlainFunction
v38 <- BeginPlainFunction -> v39
    v40 <- LoadInteger '100'
    v41 <- BinaryOperation v40, '+', v39
    Return v41
EndPlainFunction
v42 <- LoadInteger '1'
v43 <- LoadInteger '0'
v44 <- CallFunction v26, [v43]
v45 <- LoadInteger '1'
v46 <- LoadInteger '0'
v47 <- CallFunction v34, [v46]
v48 <- BinaryOperation v9, '+', v15
v49 <- CallFunction v26, [v9]
v50 <- LoadString 'smimax + 1'
v51 <- BinaryOperation v9, '+', v15
v52 <- CallFunction v34, [v9]
v53 <- LoadString '1 + smimax'
v54 <- LoadInteger '42'
v55 <- BinaryOperation v54, '+', v15
v56 <- CallFunction v26, [v23]
v57 <- LoadInteger '42'
v58 <- BinaryOperation v57, '+', v15
v59 <- CallFunction v34, [v23]
v60 <- LoadInteger '100'
v61 <- LoadInteger '0'
v62 <- CallFunction v30, [v61]
v63 <- LoadInteger '100'
v64 <- LoadInteger '0'
v65 <- CallFunction v38, [v64]
v66 <- BinaryOperation v9, '+', v17
v67 <- CallFunction v30, [v9]
v68 <- LoadString 'smimax + 100'
v69 <- BinaryOperation v9, '+', v17
v70 <- CallFunction v38, [v9]
v71 <- LoadString ' 100 + smimax'
v72 <- LoadInteger '42'
v73 <- BinaryOperation v72, '+', v17
v74 <- CallFunction v30, [v23]
v75 <- LoadInteger '42'
v76 <- BinaryOperation v75, '+', v17
v77 <- CallFunction v38, [v23]
v78 <- BeginPlainFunction -> v79
    v80 <- LoadInteger '1'
    v81 <- BinaryOperation v79, '-', v80
    Return v81
EndPlainFunction
v82 <- BeginPlainFunction -> v83
    v84 <- LoadInteger '100'
    v85 <- BinaryOperation v83, '-', v84
    Return v85
EndPlainFunction
v86 <- BeginPlainFunction -> v87
    v88 <- LoadInteger '1'
    v89 <- BinaryOperation v88, '-', v87
    Return v89
EndPlainFunction
v90 <- BeginPlainFunction -> v91
    v92 <- LoadInteger '100'
    v93 <- BinaryOperation v92, '-', v91
    Return v93
EndPlainFunction
v94 <- LoadInteger '0'
v95 <- LoadInteger '1'
v96 <- CallFunction v78, [v95]
v97 <- LoadInteger '1'
v98 <- UnaryOperation '-', v97
v99 <- LoadInteger '2'
v100 <- CallFunction v86, [v99]
v101 <- BinaryOperation v13, '-', v15
v102 <- CallFunction v78, [v13]
v103 <- BinaryOperation v15, '-', v13
v104 <- CallFunction v86, [v13]
v105 <- LoadInteger '42'
v106 <- BinaryOperation v105, '-', v15
v107 <- CallFunction v78, [v23]
v108 <- LoadInteger '42'
v109 <- BinaryOperation v15, '-', v108
v110 <- CallFunction v86, [v23]
v111 <- LoadInteger '0'
v112 <- LoadInteger '100'
v113 <- CallFunction v82, [v112]
v114 <- LoadInteger '1'
v115 <- LoadInteger '99'
v116 <- CallFunction v90, [v115]
v117 <- BinaryOperation v13, '-', v17
v118 <- CallFunction v82, [v13]
v119 <- BinaryOperation v17, '-', v13
v120 <- CallFunction v90, [v13]
v121 <- LoadInteger '42'
v122 <- BinaryOperation v121, '-', v17
v123 <- CallFunction v82, [v23]
v124 <- LoadInteger '42'
v125 <- BinaryOperation v17, '-', v124
v126 <- CallFunction v90, [v23]
v127 <- BeginPlainFunction -> v128
    v129 <- LoadInteger '1'
    v130 <- BinaryOperation v128, '>>>', v129
    Return v130
EndPlainFunction
v131 <- BeginPlainFunction -> v132
    v133 <- LoadInteger '100'
    v134 <- BinaryOperation v132, '>>>', v133
    Return v134
EndPlainFunction
v135 <- BeginPlainFunction -> v136
    v137 <- LoadInteger '1'
    v138 <- BinaryOperation v137, '>>>', v136
    Return v138
EndPlainFunction
v139 <- BeginPlainFunction -> v140
    v141 <- LoadInteger '100'
    v142 <- BinaryOperation v141, '>>>', v140
    Return v142
EndPlainFunction
v143 <- BeginPlainFunction -> v144
    v145 <- LoadInteger '1'
    v146 <- BinaryOperation v144, '>>', v145
    Return v146
EndPlainFunction
v147 <- BeginPlainFunction -> v148
    v149 <- LoadInteger '100'
    v150 <- BinaryOperation v148, '>>', v149
    Return v150
EndPlainFunction
v151 <- BeginPlainFunction -> v152
    v153 <- LoadInteger '1'
    v154 <- BinaryOperation v153, '>>', v152
    Return v154
EndPlainFunction
v155 <- BeginPlainFunction -> v156
    v157 <- LoadInteger '100'
    v158 <- BinaryOperation v157, '>>', v156
    Return v158
EndPlainFunction
v159 <- LoadInteger '0'
v160 <- LoadInteger '1'
v161 <- CallFunction v127, [v160]
v162 <- LoadInteger '0'
v163 <- LoadInteger '1'
v164 <- CallFunction v143, [v163]
v165 <- LoadInteger '0'
v166 <- LoadInteger '2'
v167 <- CallFunction v135, [v166]
v168 <- LoadInteger '0'
v169 <- LoadInteger '2'
v170 <- CallFunction v151, [v169]
v171 <- LoadInteger '1073741824'
v172 <- CallFunction v127, [v13]
v173 <- LoadInteger '1073741824'
v174 <- UnaryOperation '-', v173
v175 <- CallFunction v143, [v13]
v176 <- LoadInteger '1'
v177 <- CallFunction v135, [v13]
v178 <- LoadInteger '1'
v179 <- CallFunction v151, [v13]
v180 <- LoadInteger '21'
v181 <- CallFunction v127, [v23]
v182 <- LoadInteger '21'
v183 <- CallFunction v143, [v23]
v184 <- LoadInteger '0'
v185 <- CallFunction v135, [v23]
v186 <- LoadInteger '0'
v187 <- CallFunction v151, [v23]
v188 <- LoadInteger '6'
v189 <- LoadInteger '100'
v190 <- CallFunction v131, [v189]
v191 <- LoadString '100 >>> 100'
v192 <- LoadInteger '6'
v193 <- LoadInteger '100'
v194 <- CallFunction v147, [v193]
v195 <- LoadString '100 >> 100'
v196 <- LoadInteger '12'
v197 <- LoadInteger '99'
v198 <- CallFunction v139, [v197]
v199 <- LoadInteger '12'
v200 <- LoadInteger '99'
v201 <- CallFunction v155, [v200]
v202 <- LoadInteger '134217728'
v203 <- CallFunction v131, [v13]
v204 <- LoadInteger '134217728'
v205 <- UnaryOperation '-', v204
v206 <- CallFunction v147, [v13]
v207 <- LoadInteger '100'
v208 <- CallFunction v139, [v13]
v209 <- LoadInteger '100'
v210 <- CallFunction v155, [v13]
v211 <- LoadInteger '2'
v212 <- CallFunction v131, [v23]
v213 <- LoadInteger '2'
v214 <- CallFunction v147, [v23]
v215 <- LoadInteger '0'
v216 <- CallFunction v139, [v23]
v217 <- LoadInteger '0'
v218 <- CallFunction v155, [v23]
v219 <- BeginPlainFunction -> v220
    v221 <- LoadInteger '1'
    v222 <- BinaryOperation v220, '^', v221
    Return v222
EndPlainFunction
v223 <- BeginPlainFunction -> v224
    v225 <- LoadInteger '100'
    v226 <- BinaryOperation v224, '^', v225
    Return v226
EndPlainFunction
v227 <- BeginPlainFunction -> v228
    v229 <- LoadInteger '1'
    v230 <- BinaryOperation v229, '^', v228
    Return v230
EndPlainFunction
v231 <- BeginPlainFunction -> v232
    v233 <- LoadInteger '100'
    v234 <- BinaryOperation v233, '^', v232
    Return v234
EndPlainFunction
v235 <- LoadInteger '0'
v236 <- LoadInteger '1'
v237 <- CallFunction v219, [v236]
v238 <- LoadInteger '3'
v239 <- LoadInteger '2'
v240 <- CallFunction v227, [v239]
v241 <- LoadInteger '1'
v242 <- BinaryOperation v13, '+', v241
v243 <- CallFunction v219, [v13]
v244 <- LoadInteger '1'
v245 <- BinaryOperation v13, '+', v244
v246 <- CallFunction v227, [v13]
v247 <- LoadInteger '43'
v248 <- CallFunction v219, [v23]
v249 <- LoadInteger '43'
v250 <- CallFunction v227, [v23]
v251 <- LoadInteger '0'
v252 <- LoadInteger '100'
v253 <- CallFunction v223, [v252]
v254 <- LoadInteger '7'
v255 <- LoadInteger '99'
v256 <- CallFunction v231, [v255]
v257 <- LoadInteger '2147483548'
v258 <- UnaryOperation '-', v257
v259 <- CallFunction v223, [v13]
v260 <- LoadInteger '2147483548'
v261 <- UnaryOperation '-', v260
v262 <- CallFunction v231, [v13]
v263 <- LoadInteger '78'
v264 <- CallFunction v223, [v23]
v265 <- LoadInteger '78'
v266 <- CallFunction v231, [v23]
v267 <- LoadInteger '35'
v268 <- CreateNamedVariable 'x', 'var', v267
v269 <- LoadInteger '53'
v270 <- CreateNamedVariable 'y', 'var', v269
v271 <- LoadInteger '22'
v272 <- BinaryOperation v268, '^', v270
v273 <- LoadInteger '0'
v274 <- CreateNamedVariable 'v', 'var', v273
v275 <- LoadInteger '1'
v276 <- UnaryOperation '-', v275
v277 <- UnaryOperation '~', v274
Reassign v274, v13
v278 <- LoadInteger '2147483647'
v279 <- UnaryOperation '~', v274
v280 <- LoadString '~smimin'
Reassign v274, v9
v281 <- LoadInteger '2147483648'
v282 <- UnaryOperation '-', v281
v283 <- UnaryOperation '~', v274
v284 <- LoadString '~smimax'
Reassign v274, v9
v285 <- UnaryOperation v274, '++'
v286 <- LoadInteger '2147483648'
v287 <- LoadString 'smimax++'
Reassign v274, v13
v288 <- UnaryOperation v274, '--'
v289 <- LoadInteger '2147483649'
v290 <- UnaryOperation '-', v289
v291 <- LoadString 'smimin--'
v292 <- LoadInteger '0'
v293 <- Compare v13, '>', v292
v294 <- LoadInteger '1'
v295 <- BinaryOperation v13, '+', v294
v296 <- LoadInteger '1'
v297 <- Compare v295, '>', v296
v298 <- LoadInteger '1'
v299 <- BinaryOperation v13, '+', v298
v300 <- LoadInteger '2'
v301 <- Compare v299, '>', v300
v302 <- LoadInteger '2'
v303 <- BinaryOperation v13, '+', v302
v304 <- LoadInteger '1'
v305 <- Compare v303, '>', v304
v306 <- LoadInteger '0'
v307 <- Compare v306, '<', v13
v308 <- LoadInteger '1'
v309 <- UnaryOperation '-', v308
v310 <- Compare v309, '<', v9
v311 <- LoadInteger '1'
v312 <- UnaryOperation '-', v311
v313 <- Compare v9, '<', v312


const SMI_MAX = ((1 << 30) - 1) + (1 << 30);
const SMI_MIN = -SMI_MAX - 1;
const ONE = 1;
const ONE_HUNDRED = 100;
function f18() {
    function f19() {
        return 42;
    }
    this.valueOf = f19;
}
const v22 = new f18();
const OBJ_42 = v22;
OBJ_42.valueOf();
function Add1(a27) {
    return a27 + 1;
}
function Add100(a31) {
    return a31 + 100;
}
function Add1Reversed(a35) {
    return 1 + a35;
}
function Add100Reversed(a39) {
    return 100 + a39;
}
Add1(0);
Add1Reversed(0);
SMI_MAX + ONE;
Add1(SMI_MAX);
SMI_MAX + ONE;
Add1Reversed(SMI_MAX);
42 + ONE;
Add1(OBJ_42);
42 + ONE;
Add1Reversed(OBJ_42);
Add100(0);
Add100Reversed(0);
SMI_MAX + ONE_HUNDRED;
Add100(SMI_MAX);
SMI_MAX + ONE_HUNDRED;
Add100Reversed(SMI_MAX);
42 + ONE_HUNDRED;
Add100(OBJ_42);
42 + ONE_HUNDRED;
Add100Reversed(OBJ_42);
function Sub1(a79) {
    return a79 - 1;
}
function Sub100(a83) {
    return a83 - 100;
}
function Sub1Reversed(a87) {
    return 1 - a87;
}
function Sub100Reversed(a91) {
    return 100 - a91;
}
Sub1(1);
-1;
Sub1Reversed(2);
SMI_MIN - ONE;
Sub1(SMI_MIN);
ONE - SMI_MIN;
Sub1Reversed(SMI_MIN);
42 - ONE;
Sub1(OBJ_42);
ONE - 42;
Sub1Reversed(OBJ_42);
Sub100(100);
Sub100Reversed(99);
SMI_MIN - ONE_HUNDRED;
Sub100(SMI_MIN);
ONE_HUNDRED - SMI_MIN;
Sub100Reversed(SMI_MIN);
42 - ONE_HUNDRED;
Sub100(OBJ_42);
ONE_HUNDRED - 42;
Sub100Reversed(OBJ_42);
function Shr1(a128) {
    return a128 >>> 1;
}
function Shr100(a132) {
    return a132 >>> 100;
}
function Shr1Reversed(a136) {
    return 1 >>> a136;
}
function Shr100Reversed(a140) {
    return 100 >>> a140;
}
function Sar1(a144) {
    return a144 >> 1;
}
function Sar100(a148) {
    return a148 >> 100;
}
function Sar1Reversed(a152) {
    return 1 >> a152;
}
function Sar100Reversed(a156) {
    return 100 >> a156;
}
Shr1(1);
Sar1(1);
Shr1Reversed(2);
Sar1Reversed(2);
Shr1(SMI_MIN);
-1073741824;
Sar1(SMI_MIN);
Shr1Reversed(SMI_MIN);
Sar1Reversed(SMI_MIN);
Shr1(OBJ_42);
Sar1(OBJ_42);
Shr1Reversed(OBJ_42);
Sar1Reversed(OBJ_42);
Shr100(100);
Sar100(100);
Shr100Reversed(99);
Sar100Reversed(99);
Shr100(SMI_MIN);
-134217728;
Sar100(SMI_MIN);
Shr100Reversed(SMI_MIN);
Sar100Reversed(SMI_MIN);
Shr100(OBJ_42);
Sar100(OBJ_42);
Shr100Reversed(OBJ_42);
Sar100Reversed(OBJ_42);
function Xor1(a220) {
    return a220 ^ 1;
}
function Xor100(a224) {
    return a224 ^ 100;
}
function Xor1Reversed(a228) {
    return 1 ^ a228;
}
function Xor100Reversed(a232) {
    return 100 ^ a232;
}
Xor1(1);
Xor1Reversed(2);
SMI_MIN + 1;
Xor1(SMI_MIN);
SMI_MIN + 1;
Xor1Reversed(SMI_MIN);
Xor1(OBJ_42);
Xor1Reversed(OBJ_42);
Xor100(100);
Xor100Reversed(99);
-2147483548;
Xor100(SMI_MIN);
-2147483548;
Xor100Reversed(SMI_MIN);
Xor100(OBJ_42);
Xor100Reversed(OBJ_42);
var x = 35;
var y = 53;
x ^ y;
var v = 0;
-1;
~v;
v = SMI_MIN;
~v;
v = SMI_MAX;
-2147483648;
~v;
v = SMI_MAX;
v++;
v = SMI_MIN;
v--;
-2147483649;
SMI_MIN > 0;
(SMI_MIN + 1) > 1;
(SMI_MIN + 1) > 2;
(SMI_MIN + 2) > 1;
0 < SMI_MIN;
-1 < SMI_MAX;
SMI_MAX < -1;

FuzzIL program written to corpus/int32-ops.fzil
