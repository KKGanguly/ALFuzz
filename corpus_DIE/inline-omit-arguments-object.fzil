v0 <- BeginPlainFunction -> v1, v2, v3, v4
    v5 <- LoadArguments
    Return v5
EndPlainFunction
v6 <- BeginPlainFunction -> v7, v8
    v9 <- CallFunction v0, [v7]
    v10 <- CreateNamedVariable 'args', 'var', v9
    v11 <- GetProperty v10, 'length'
    v12 <- LoadInteger '1'
    v13 <- Compare v11, '==', v12
    v14 <- GetElement v10, '0'
    v15 <- LoadInteger '11'
    v16 <- Compare v14, '==', v15
    v17 <- BinaryOperation v13, '&&', v16
    Return v17
EndPlainFunction
v18 <- LoadBoolean 'true'
v19 <- LoadInteger '11'
v20 <- CallFunction v6, [v19]


function bar(a1, a2, a3, a4) {
    return arguments;
}
function foo(a7, a8) {
    var args = bar(a7);
    return (args.length == 1) && (args[0] == 11);
}
foo(11);

FuzzIL program written to corpus/inline-omit-arguments-object.fzil
