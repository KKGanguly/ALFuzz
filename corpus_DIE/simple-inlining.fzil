v0 <- BeginPlainFunction -> v1
    v2 <- CallMethod v1, 'f', []
    v3 <- CallMethod v1, 'f', []
    v4 <- CreateNamedVariable 'x', 'var', v3
    v5 <- LoadInteger '42'
    v6 <- LoadInteger '42'
    v7 <- CallMethod v1, 'f', []
    v8 <- CallMethod v1, 'f', []
    v9 <- UnaryOperation '!', v8
    BeginIf v9
        v10 <- LoadBoolean 'false'
    EndIf
EndPlainFunction
BeginObjectLiteral
v11 <- EndObjectLiteral
v12 <- CreateNamedVariable 'o1', 'var', v11
v13 <- BeginPlainFunction -> 
    v14 <- LoadInteger '42'
    Return v14
EndPlainFunction
SetProperty v12, 'f', v13
BeginForLoopInitializer
    v15 <- LoadInteger '0'
BeginForLoopCondition -> v16
    v17 <- LoadInteger '5'
    v18 <- Compare v16, '<', v17
BeginForLoopAfterthought v18 -> v19
    v20 <- UnaryOperation v19, '++'
BeginForLoopBody -> v21
    v22 <- CallFunction v0, [v12]
EndForLoop
v23 <- CallFunction v0, [v12]
v24 <- GetProperty v12, 'f'
BeginObjectLiteral
    ObjectLiteralAddProperty `f`, v24
v25 <- EndObjectLiteral
v26 <- CallFunction v0, [v25]
v27 <- BeginPlainFunction -> v28
    v29 <- CallMethod v28, 'g', []
    v30 <- CallMethod v28, 'g', []
    v31 <- CreateNamedVariable 'x', 'var', v30
    v32 <- CallMethod v28, 'g', []
    v33 <- CallMethod v28, 'g', []
    v34 <- UnaryOperation '!', v33
    BeginIf v34
        v35 <- LoadBoolean 'false'
    EndIf
EndPlainFunction
BeginObjectLiteral
v36 <- EndObjectLiteral
v37 <- CreateNamedVariable 'o2', 'var', v36
v38 <- BeginPlainFunction -> 
    v39 <- LoadThis
    Return v39
EndPlainFunction
SetProperty v37, 'g', v38
BeginForLoopInitializer
    v40 <- LoadInteger '0'
BeginForLoopCondition -> v41
    v42 <- LoadInteger '5'
    v43 <- Compare v41, '<', v42
BeginForLoopAfterthought v43 -> v44
    v45 <- UnaryOperation v44, '++'
BeginForLoopBody -> v46
    v47 <- CallFunction v27, [v37]
EndForLoop
v48 <- CallFunction v27, [v37]
v49 <- GetProperty v37, 'g'
BeginObjectLiteral
    ObjectLiteralAddProperty `g`, v49
v50 <- EndObjectLiteral
v51 <- CallFunction v27, [v50]
v52 <- BeginPlainFunction -> v53
    v54 <- CallMethod v53, 'h', []
    v55 <- CallMethod v53, 'h', []
    v56 <- CreateNamedVariable 'x', 'var', v55
    v57 <- LoadInteger '42'
    v58 <- LoadInteger '42'
    v59 <- CallMethod v53, 'h', []
    v60 <- CallMethod v53, 'h', []
    v61 <- UnaryOperation '!', v60
    BeginIf v61
        v62 <- LoadBoolean 'false'
    EndIf
EndPlainFunction
v63 <- LoadInteger '0'
v64 <- LoadInteger '42'
BeginObjectLiteral
    ObjectLiteralAddProperty `y`, v63
    ObjectLiteralAddProperty `x`, v64
v65 <- EndObjectLiteral
v66 <- CreateNamedVariable 'o3', 'var', v65
v67 <- BeginPlainFunction -> 
    v68 <- LoadThis
    v69 <- GetProperty v68, 'x'
    Return v69
EndPlainFunction
SetProperty v66, 'h', v67
BeginForLoopInitializer
    v70 <- LoadInteger '0'
BeginForLoopCondition -> v71
    v72 <- LoadInteger '5'
    v73 <- Compare v71, '<', v72
BeginForLoopAfterthought v73 -> v74
    v75 <- UnaryOperation v74, '++'
BeginForLoopBody -> v76
    v77 <- CallFunction v52, [v66]
EndForLoop
v78 <- CallFunction v52, [v66]
v79 <- GetProperty v66, 'h'
v80 <- LoadInteger '42'
BeginObjectLiteral
    ObjectLiteralAddProperty `h`, v79
    ObjectLiteralAddProperty `x`, v80
v81 <- EndObjectLiteral
v82 <- CallFunction v52, [v81]
v83 <- BeginPlainFunction -> v84
    v85 <- CallMethod v84, 'h', []
    v86 <- CallMethod v84, 'h', []
    v87 <- CreateNamedVariable 'x', 'var', v86
    v88 <- LoadInteger '3'
    v89 <- LoadInteger '3'
    v90 <- CallMethod v84, 'h', []
    v91 <- CallMethod v84, 'h', []
    v92 <- UnaryOperation '!', v91
    BeginIf v92
        v93 <- LoadBoolean 'false'
    EndIf
EndPlainFunction
v94 <- LoadInteger '1'
v95 <- LoadInteger '2'
v96 <- LoadInteger '3'
v97 <- CreateArray [v94, v95, v96]
BeginObjectLiteral
    ObjectLiteralAddProperty `x`, v97
v98 <- EndObjectLiteral
v99 <- CreateNamedVariable 'o4', 'var', v98
v100 <- BeginPlainFunction -> 
    v101 <- LoadThis
    v102 <- GetProperty v101, 'x'
    v103 <- GetProperty v102, 'length'
    Return v103
EndPlainFunction
SetProperty v99, 'h', v100
BeginForLoopInitializer
    v104 <- LoadInteger '0'
BeginForLoopCondition -> v105
    v106 <- LoadInteger '5'
    v107 <- Compare v105, '<', v106
BeginForLoopAfterthought v107 -> v108
    v109 <- UnaryOperation v108, '++'
BeginForLoopBody -> v110
    v111 <- CallFunction v83, [v99]
EndForLoop
v112 <- CallFunction v83, [v99]
v113 <- GetProperty v99, 'h'
v114 <- LoadInteger '1'
v115 <- LoadInteger '2'
v116 <- LoadInteger '3'
v117 <- CreateArray [v114, v115, v116]
BeginObjectLiteral
    ObjectLiteralAddProperty `h`, v113
    ObjectLiteralAddProperty `x`, v117
v118 <- EndObjectLiteral
v119 <- CallFunction v83, [v118]
v120 <- BeginPlainFunction -> v121
    v122 <- CallMethod v121, 'h', []
    v123 <- CallMethod v121, 'h', []
    v124 <- CreateNamedVariable 'x', 'var', v123
    v125 <- LoadInteger '42'
    v126 <- LoadInteger '42'
    v127 <- CallMethod v121, 'h', []
    v128 <- CallMethod v121, 'h', []
    v129 <- UnaryOperation '!', v128
    BeginIf v129
        v130 <- LoadBoolean 'false'
    EndIf
EndPlainFunction
v131 <- LoadInteger '42'
BeginObjectLiteral
    ObjectLiteralAddProperty `y`, v131
v132 <- EndObjectLiteral
v133 <- CreateNamedVariable 'o6', 'var', v132
BeginObjectLiteral
    ObjectLiteralAddProperty `e`, v133
v134 <- EndObjectLiteral
v135 <- CreateNamedVariable 'o5', 'var', v134
v136 <- BeginPlainFunction -> 
    v137 <- LoadThis
    v138 <- GetProperty v137, 'e'
    v139 <- GetProperty v138, 'y'
    Return v139
EndPlainFunction
SetProperty v135, 'h', v136
BeginForLoopInitializer
    v140 <- LoadInteger '0'
BeginForLoopCondition -> v141
    v142 <- LoadInteger '5'
    v143 <- Compare v141, '<', v142
BeginForLoopAfterthought v143 -> v144
    v145 <- UnaryOperation v144, '++'
BeginForLoopBody -> v146
    v147 <- CallFunction v120, [v135]
EndForLoop
v148 <- CallFunction v120, [v135]
v149 <- GetProperty v135, 'h'
BeginObjectLiteral
    ObjectLiteralAddProperty `h`, v149
    ObjectLiteralAddProperty `e`, v133
v150 <- EndObjectLiteral
v151 <- CallFunction v120, [v150]
v152 <- BeginPlainFunction -> v153
    v154 <- CallMethod v153, 'foo', []
    v155 <- CallMethod v153, 'foo', []
    v156 <- CreateNamedVariable 'x', 'var', v155
    v157 <- LoadInteger '42'
    v158 <- LoadInteger '42'
    v159 <- CallMethod v153, 'foo', []
    v160 <- CallMethod v153, 'foo', []
    v161 <- UnaryOperation '!', v160
    BeginIf v161
        v162 <- LoadBoolean 'false'
    EndIf
EndPlainFunction
v163 <- LoadInteger '42'
v164 <- LoadInteger '43'
v165 <- LoadInteger '44'
v166 <- CreateArray [v163, v164, v165]
BeginObjectLiteral
    ObjectLiteralAddProperty `x`, v166
v167 <- EndObjectLiteral
v168 <- CreateNamedVariable 'o7', 'var', v167
v169 <- BeginPlainFunction -> 
    v170 <- LoadThis
    v171 <- GetProperty v170, 'x'
    v172 <- GetElement v171, '0'
    Return v172
EndPlainFunction
SetProperty v168, 'foo', v169
BeginForLoopInitializer
    v173 <- LoadInteger '0'
BeginForLoopCondition -> v174
    v175 <- LoadInteger '5'
    v176 <- Compare v174, '<', v175
BeginForLoopAfterthought v176 -> v177
    v178 <- UnaryOperation v177, '++'
BeginForLoopBody -> v179
    v180 <- CallFunction v152, [v168]
EndForLoop
v181 <- CallFunction v152, [v168]
v182 <- GetProperty v168, 'foo'
v183 <- LoadInteger '42'
v184 <- LoadInteger '0'
v185 <- LoadInteger '0'
v186 <- CreateArray [v183, v184, v185]
BeginObjectLiteral
    ObjectLiteralAddProperty `foo`, v182
    ObjectLiteralAddProperty `x`, v186
v187 <- EndObjectLiteral
v188 <- CallFunction v152, [v187]


function TestInlineConstant(a1) {
    a1.f();
    var x = a1.f();
    a1.f();
    if (!a1.f()) {
    }
}
var o1 = {};
function f13() {
    return 42;
}
o1.f = f13;
for (let i16 = 0; i16 < 5; i16++) {
    TestInlineConstant(o1);
}
TestInlineConstant(o1);
const v24 = o1.f;
TestInlineConstant({ f: v24 });
function TestInlineThis(a28) {
    a28.g();
    var x = a28.g();
    a28.g();
    if (!a28.g()) {
    }
}
var o2 = {};
function f38() {
    return this;
}
o2.g = f38;
for (let i41 = 0; i41 < 5; i41++) {
    TestInlineThis(o2);
}
TestInlineThis(o2);
const v49 = o2.g;
TestInlineThis({ g: v49 });
function TestInlineThisX(a53) {
    a53.h();
    var x = a53.h();
    a53.h();
    if (!a53.h()) {
    }
}
var o3 = { y: 0, x: 42 };
function f67() {
    return this.x;
}
o3.h = f67;
for (let i71 = 0; i71 < 5; i71++) {
    TestInlineThisX(o3);
}
TestInlineThisX(o3);
const v79 = o3.h;
TestInlineThisX({ h: v79, x: 42 });
function TestInlineThisXLength(a84) {
    a84.h();
    var x = a84.h();
    a84.h();
    if (!a84.h()) {
    }
}
const v97 = [1,2,3];
var o4 = { x: v97 };
function f100() {
    return this.x.length;
}
o4.h = f100;
for (let i105 = 0; i105 < 5; i105++) {
    TestInlineThisXLength(o4);
}
TestInlineThisXLength(o4);
const v113 = o4.h;
const v117 = [1,2,3];
TestInlineThisXLength({ h: v113, x: v117 });
function TestInlineThisXY(a121) {
    a121.h();
    var x = a121.h();
    a121.h();
    if (!a121.h()) {
    }
}
var o6 = { y: 42 };
var o5 = { e: o6 };
function f136() {
    return this.e.y;
}
o5.h = f136;
for (let i141 = 0; i141 < 5; i141++) {
    TestInlineThisXY(o5);
}
TestInlineThisXY(o5);
const v149 = o5.h;
TestInlineThisXY({ h: v149, e: o6 });
function TestInlineThisX0(a153) {
    a153.foo();
    var x = a153.foo();
    a153.foo();
    if (!a153.foo()) {
    }
}
const v166 = [42,43,44];
var o7 = { x: v166 };
function f169() {
    return this.x[0];
}
o7.foo = f169;
for (let i174 = 0; i174 < 5; i174++) {
    TestInlineThisX0(o7);
}
TestInlineThisX0(o7);
const v182 = o7.foo;
const v186 = [42,0,0];
TestInlineThisX0({ foo: v182, x: v186 });

FuzzIL program written to corpus/simple-inlining.fzil
