v0 <- BeginPlainFunction -> v1, v2
    v3 <- GetProperty v1, 'constructor'
    v4 <- CallFunction v2, []
    v5 <- CallFunction v2, []
EndPlainFunction
v6 <- BeginPlainFunction -> v7
    v8 <- LoadInteger '0'
    SetElement v7, '0', v8
    v9 <- LoadInteger '0'
    SetElement v7, '1', v9
EndPlainFunction
v10 <- CreateNamedVariable 'Int32Array', 'none'
v11 <- LoadInteger '2'
v12 <- Construct v10, [v11]
v13 <- CreateNamedVariable 'a', 'var', v12
BeginForLoopInitializer
    v14 <- LoadInteger '0'
BeginForLoopCondition -> v15
    v16 <- LoadInteger '5'
    v17 <- Compare v15, '<', v16
BeginForLoopAfterthought v17 -> v18
    v19 <- UnaryOperation v18, '++'
BeginForLoopBody -> v20
    v21 <- CallFunction v6, [v13]
EndForLoop
v22 <- CallFunction v6, [v13]
v23 <- LoadInteger '0'
v24 <- GetElement v13, '0'
v25 <- LoadInteger '0'
v26 <- GetElement v13, '1'
v27 <- CreateNamedVariable 'ArrayBuffer', 'none'
v28 <- LoadInteger '12'
v29 <- Construct v27, [v28]
v30 <- CreateNamedVariable 'ab', 'var', v29
v31 <- CreateNamedVariable 'Uint8Array', 'none'
v32 <- Construct v31, [v30]
v33 <- CreateNamedVariable 'derived_uint8', 'var', v32
v34 <- GetProperty v33, 'buffer'
v35 <- LoadInteger '12'
v36 <- GetProperty v33, 'length'
v37 <- LoadInteger '12'
v38 <- GetProperty v33, 'byteLength'
v39 <- LoadInteger '0'
v40 <- GetProperty v33, 'byteOffset'
v41 <- LoadInteger '1'
v42 <- GetProperty v33, 'BYTES_PER_ELEMENT'
v43 <- LoadInteger '7'
v44 <- Construct v31, [v30, v43]
v45 <- CreateNamedVariable 'derived_uint8_2', 'var', v44
v46 <- GetProperty v45, 'buffer'
v47 <- LoadInteger '5'
v48 <- GetProperty v45, 'length'
v49 <- LoadInteger '5'
v50 <- GetProperty v45, 'byteLength'
v51 <- LoadInteger '7'
v52 <- GetProperty v45, 'byteOffset'
v53 <- LoadInteger '1'
v54 <- GetProperty v45, 'BYTES_PER_ELEMENT'
v55 <- CreateNamedVariable 'Int16Array', 'none'
v56 <- Construct v55, [v30]
v57 <- CreateNamedVariable 'derived_int16', 'var', v56
v58 <- GetProperty v57, 'buffer'
v59 <- LoadInteger '6'
v60 <- GetProperty v57, 'length'
v61 <- LoadInteger '12'
v62 <- GetProperty v57, 'byteLength'
v63 <- LoadInteger '0'
v64 <- GetProperty v57, 'byteOffset'
v65 <- LoadInteger '2'
v66 <- GetProperty v57, 'BYTES_PER_ELEMENT'
v67 <- LoadInteger '6'
v68 <- Construct v55, [v30, v67]
v69 <- CreateNamedVariable 'derived_int16_2', 'var', v68
v70 <- GetProperty v69, 'buffer'
v71 <- LoadInteger '3'
v72 <- GetProperty v69, 'length'
v73 <- LoadInteger '6'
v74 <- GetProperty v69, 'byteLength'
v75 <- LoadInteger '6'
v76 <- GetProperty v69, 'byteOffset'
v77 <- LoadInteger '2'
v78 <- GetProperty v69, 'BYTES_PER_ELEMENT'
v79 <- CreateNamedVariable 'Uint32Array', 'none'
v80 <- Construct v79, [v30]
v81 <- CreateNamedVariable 'derived_uint32', 'var', v80
v82 <- GetProperty v81, 'buffer'
v83 <- LoadInteger '3'
v84 <- GetProperty v81, 'length'
v85 <- LoadInteger '12'
v86 <- GetProperty v81, 'byteLength'
v87 <- LoadInteger '0'
v88 <- GetProperty v81, 'byteOffset'
v89 <- LoadInteger '4'
v90 <- GetProperty v81, 'BYTES_PER_ELEMENT'
v91 <- LoadInteger '4'
v92 <- Construct v79, [v30, v91]
v93 <- CreateNamedVariable 'derived_uint32_2', 'var', v92
v94 <- GetProperty v93, 'buffer'
v95 <- LoadInteger '2'
v96 <- GetProperty v93, 'length'
v97 <- LoadInteger '8'
v98 <- GetProperty v93, 'byteLength'
v99 <- LoadInteger '4'
v100 <- GetProperty v93, 'byteOffset'
v101 <- LoadInteger '4'
v102 <- GetProperty v93, 'BYTES_PER_ELEMENT'
v103 <- LoadInteger '4'
v104 <- LoadInteger '1'
v105 <- Construct v79, [v30, v103, v104]
v106 <- CreateNamedVariable 'derived_uint32_3', 'var', v105
v107 <- GetProperty v106, 'buffer'
v108 <- LoadInteger '1'
v109 <- GetProperty v106, 'length'
v110 <- LoadInteger '4'
v111 <- GetProperty v106, 'byteLength'
v112 <- LoadInteger '4'
v113 <- GetProperty v106, 'byteOffset'
v114 <- LoadInteger '4'
v115 <- GetProperty v106, 'BYTES_PER_ELEMENT'
v116 <- CreateNamedVariable 'Float64Array', 'none'
v117 <- LoadInteger '0'
v118 <- LoadInteger '1'
v119 <- Construct v116, [v30, v117, v118]
v120 <- CreateNamedVariable 'derived_float64', 'var', v119
v121 <- GetProperty v120, 'buffer'
v122 <- LoadInteger '1'
v123 <- GetProperty v120, 'length'
v124 <- LoadInteger '8'
v125 <- GetProperty v120, 'byteLength'
v126 <- LoadInteger '0'
v127 <- GetProperty v120, 'byteOffset'
v128 <- LoadInteger '8'
v129 <- GetProperty v120, 'BYTES_PER_ELEMENT'
v130 <- BeginPlainFunction -> 
    v131 <- LoadInteger '4'
    v132 <- LoadInteger '3'
    v133 <- Construct v79, [v30, v131, v132]
EndPlainFunction
v134 <- CallFunction v130, []
v135 <- BeginPlainFunction -> 
    v136 <- LoadInteger '16'
    v137 <- Construct v79, [v30, v136]
EndPlainFunction
v138 <- CallFunction v135, []
v139 <- BeginPlainFunction -> 
    v140 <- LoadInteger '5'
    v141 <- Construct v79, [v30, v140]
EndPlainFunction
v142 <- CallFunction v139, []
v143 <- LoadInteger '13'
v144 <- Construct v27, [v143]
v145 <- CreateNamedVariable 'ab2', 'var', v144
v146 <- BeginPlainFunction -> 
    v147 <- LoadInteger '4'
    v148 <- Construct v79, [v145, v147]
EndPlainFunction
v149 <- CallFunction v146, []
v150 <- LoadInteger '31'
v151 <- Construct v31, [v150]
Reassign v13, v151
v152 <- GetProperty v13, 'byteLength'
v153 <- GetProperty v13, 'buffer'
v154 <- GetProperty v153, 'byteLength'
v155 <- GetProperty v13, 'length'
v156 <- GetProperty v13, 'buffer'
v157 <- GetProperty v156, 'byteLength'
v158 <- GetProperty v13, 'length'
v159 <- GetProperty v13, 'BYTES_PER_ELEMENT'
v160 <- BinaryOperation v158, '*', v159
v161 <- GetProperty v13, 'buffer'
v162 <- GetProperty v161, 'byteLength'
v163 <- LoadInteger '5'
v164 <- Construct v55, [v163]
Reassign v13, v164
v165 <- GetProperty v13, 'byteLength'
v166 <- GetProperty v13, 'buffer'
v167 <- GetProperty v166, 'byteLength'
v168 <- GetProperty v13, 'length'
v169 <- GetProperty v13, 'BYTES_PER_ELEMENT'
v170 <- BinaryOperation v168, '*', v169
v171 <- GetProperty v13, 'buffer'
v172 <- GetProperty v171, 'byteLength'
v173 <- LoadInteger '7'
v174 <- Construct v116, [v173]
Reassign v13, v174
v175 <- GetProperty v13, 'byteLength'
v176 <- GetProperty v13, 'buffer'
v177 <- GetProperty v176, 'byteLength'
v178 <- GetProperty v13, 'length'
v179 <- GetProperty v13, 'BYTES_PER_ELEMENT'
v180 <- BinaryOperation v178, '*', v179
v181 <- GetProperty v13, 'buffer'
v182 <- GetProperty v181, 'byteLength'
v183 <- LoadInteger '7'
v184 <- Construct v116, [v183]
Reassign v13, v184
v185 <- GetProperty v13, 'buffer'
v186 <- CreateNamedVariable 'Uint16Array', 'none'
v187 <- GetProperty v13, 'buffer'
v188 <- Construct v186, [v187]
v189 <- GetProperty v188, 'buffer'
v190 <- GetProperty v13, 'buffer'
v191 <- CreateNamedVariable 'Float32Array', 'none'
v192 <- GetProperty v13, 'buffer'
v193 <- LoadInteger '4'
v194 <- Construct v191, [v192, v193]
v195 <- GetProperty v194, 'buffer'
v196 <- GetProperty v13, 'buffer'
v197 <- CreateNamedVariable 'Int8Array', 'none'
v198 <- GetProperty v13, 'buffer'
v199 <- LoadInteger '3'
v200 <- LoadInteger '51'
v201 <- Construct v197, [v198, v199, v200]
v202 <- GetProperty v201, 'buffer'
v203 <- GetProperty v13, 'buffer'
v204 <- LoadInteger '2'
v205 <- Construct v10, [v204]
Reassign v13, v205
v206 <- LoadInteger '4'
v207 <- GetProperty v13, 'BYTES_PER_ELEMENT'
v208 <- LoadInteger '42'
SetProperty v13, 'BYTES_PER_ELEMENT', v208
v209 <- LoadInteger '2'
v210 <- Construct v31, [v209]
Reassign v13, v210
v211 <- LoadInteger '1'
v212 <- GetProperty v13, 'BYTES_PER_ELEMENT'
v213 <- LoadInteger '2'
v214 <- Construct v55, [v213]
Reassign v13, v214
v215 <- LoadInteger '2'
v216 <- GetProperty v13, 'BYTES_PER_ELEMENT'
v217 <- BeginPlainFunction -> v218, v219
    v220 <- GetComputedProperty v218, v219
    Return v220
EndPlainFunction
v221 <- BeginPlainFunction -> v222, v223, v224
    SetComputedProperty v222, v223, v224
EndPlainFunction
v225 <- BeginPlainFunction -> 
    v226 <- LoadInteger '2'
    v227 <- Construct v116, [v226]
    v228 <- CreateNamedVariable 'array', 'var', v227
    BeginForLoopInitializer
        v229 <- LoadInteger '0'
    BeginForLoopCondition -> v230
        v231 <- LoadInteger '5'
        v232 <- Compare v230, '<', v231
    BeginForLoopAfterthought v232 -> v233
        v234 <- UnaryOperation v233, '++'
    BeginForLoopBody -> v235
        v236 <- LoadInteger '0'
        v237 <- LoadFloat '2.5'
        v238 <- CallFunction v221, [v228, v236, v237]
        v239 <- LoadFloat '2.5'
        v240 <- GetElement v228, '0'
    EndForLoop
    v241 <- LoadInteger '0'
    v242 <- LoadFloat '2.5'
    v243 <- CallFunction v221, [v228, v241, v242]
    v244 <- LoadFloat '2.5'
    v245 <- GetElement v228, '0'
    v246 <- LoadInteger '1'
    v247 <- LoadFloat '3.5'
    v248 <- CallFunction v221, [v228, v246, v247]
    v249 <- LoadFloat '3.5'
    v250 <- GetElement v228, '1'
    BeginForLoopInitializer
        v251 <- LoadInteger '0'
    BeginForLoopCondition -> v252
        v253 <- LoadInteger '5'
        v254 <- Compare v252, '<', v253
    BeginForLoopAfterthought v254 -> v255
        v256 <- UnaryOperation v255, '++'
    BeginForLoopBody -> v257
        v258 <- LoadFloat '2.5'
        v259 <- LoadInteger '0'
        v260 <- CallFunction v217, [v228, v259]
        v261 <- LoadFloat '3.5'
        v262 <- GetElement v228, '1'
    EndForLoop
    v263 <- LoadFloat '2.5'
    v264 <- LoadInteger '0'
    v265 <- CallFunction v217, [v228, v264]
    v266 <- LoadFloat '3.5'
    v267 <- LoadInteger '1'
    v268 <- CallFunction v217, [v228, v267]
EndPlainFunction
v269 <- LoadString '2'
v270 <- Construct v10, [v269]
v271 <- CreateNamedVariable 'array_with_length_from_non_number', 'var', v270
v272 <- LoadInteger '2'
v273 <- GetProperty v271, 'length'
v274 <- CreateNamedVariable 'Array', 'none'
v275 <- CreateNamedVariable 'Uint8ClampedArray', 'none'
v276 <- CreateArray [v274, v197, v31, v55, v186, v10, v79, v275, v191, v116]
v277 <- CreateNamedVariable 'types', 'none'
Reassign v277, v276
v278 <- CreateNamedVariable 'NaN', 'none'
v279 <- LoadInteger '0'
v280 <- LoadInteger '0'
v281 <- LoadInteger '0'
v282 <- LoadInteger '0'
v283 <- LoadInteger '0'
v284 <- LoadInteger '0'
v285 <- LoadInteger '0'
v286 <- CreateArray [v278, v279, v280, v281, v282, v283, v284, v285, v278, v278]
v287 <- CreateNamedVariable 'test_result_nan', 'none'
Reassign v287, v286
v288 <- LoadInteger '1'
v289 <- UnaryOperation '-', v288
v290 <- LoadInteger '1'
v291 <- UnaryOperation '-', v290
v292 <- LoadInteger '255'
v293 <- LoadInteger '1'
v294 <- UnaryOperation '-', v293
v295 <- LoadInteger '65535'
v296 <- LoadInteger '1'
v297 <- UnaryOperation '-', v296
v298 <- LoadInteger '4294967295'
v299 <- LoadInteger '0'
v300 <- LoadInteger '1'
v301 <- UnaryOperation '-', v300
v302 <- LoadInteger '1'
v303 <- UnaryOperation '-', v302
v304 <- CreateArray [v289, v291, v292, v294, v295, v297, v298, v299, v301, v303]
v305 <- CreateNamedVariable 'test_result_low_int', 'none'
Reassign v305, v304
v306 <- LoadFloat '1.25'
v307 <- UnaryOperation '-', v306
v308 <- LoadInteger '1'
v309 <- UnaryOperation '-', v308
v310 <- LoadInteger '255'
v311 <- LoadInteger '1'
v312 <- UnaryOperation '-', v311
v313 <- LoadInteger '65535'
v314 <- LoadInteger '1'
v315 <- UnaryOperation '-', v314
v316 <- LoadInteger '4294967295'
v317 <- LoadInteger '0'
v318 <- LoadFloat '1.25'
v319 <- UnaryOperation '-', v318
v320 <- LoadFloat '1.25'
v321 <- UnaryOperation '-', v320
v322 <- CreateArray [v307, v309, v310, v312, v313, v315, v316, v317, v319, v321]
v323 <- CreateNamedVariable 'test_result_low_double', 'none'
Reassign v323, v322
v324 <- LoadFloat '253.75'
v325 <- LoadInteger '3'
v326 <- UnaryOperation '-', v325
v327 <- LoadInteger '253'
v328 <- LoadInteger '253'
v329 <- LoadInteger '253'
v330 <- LoadInteger '253'
v331 <- LoadInteger '253'
v332 <- LoadInteger '254'
v333 <- LoadFloat '253.75'
v334 <- LoadFloat '253.75'
v335 <- CreateArray [v324, v326, v327, v328, v329, v330, v331, v332, v333, v334]
v336 <- CreateNamedVariable 'test_result_middle', 'none'
Reassign v336, v335
v337 <- LoadInteger '256'
v338 <- LoadInteger '0'
v339 <- LoadInteger '0'
v340 <- LoadInteger '256'
v341 <- LoadInteger '256'
v342 <- LoadInteger '256'
v343 <- LoadInteger '256'
v344 <- LoadInteger '255'
v345 <- LoadInteger '256'
v346 <- LoadInteger '256'
v347 <- CreateArray [v337, v338, v339, v340, v341, v342, v343, v344, v345, v346]
v348 <- CreateNamedVariable 'test_result_high_int', 'none'
Reassign v348, v347
v349 <- LoadFloat '256.25'
v350 <- LoadInteger '0'
v351 <- LoadInteger '0'
v352 <- LoadInteger '256'
v353 <- LoadInteger '256'
v354 <- LoadInteger '256'
v355 <- LoadInteger '256'
v356 <- LoadInteger '255'
v357 <- LoadFloat '256.25'
v358 <- LoadFloat '256.25'
v359 <- CreateArray [v349, v350, v351, v352, v353, v354, v355, v356, v357, v358]
v360 <- CreateNamedVariable 'test_result_high_double', 'none'
Reassign v360, v359
v361 <- LoadInteger '40'
v362 <- CreateNamedVariable 'kElementCount', 'const', v361
v363 <- BeginPlainFunction -> v364, v365
    BeginForLoopInitializer
        v366 <- LoadInteger '0'
    BeginForLoopCondition -> v367
        v368 <- Compare v367, '<', v362
    BeginForLoopAfterthought v368 -> v369
        v370 <- UnaryOperation v369, '++'
    BeginForLoopBody -> v371
        v372 <- GetComputedProperty v364, v371
        Update v365, '+', v372
    EndForLoop
    Return v365
EndPlainFunction
v373 <- BeginPlainFunction -> v374, v375
    v376 <- GetElement v374, '0'
    Update v375, '+', v376
    v377 <- GetElement v374, '1'
    Update v375, '+', v377
    v378 <- GetElement v374, '2'
    Update v375, '+', v378
    Return v375
EndPlainFunction
v379 <- BeginPlainFunction -> v380, v381
    BeginForLoopInitializer
        v382 <- LoadInteger '0'
    BeginForLoopCondition -> v383
        v384 <- Compare v383, '<', v362
    BeginForLoopAfterthought v384 -> v385
        v386 <- UnaryOperation v385, '++'
    BeginForLoopBody -> v387
        v388 <- LoadInteger '1'
        v389 <- BinaryOperation v387, '+', v388
        SetComputedProperty v380, v387, v389
        Update v381, '+', v389
    EndForLoop
    Return v381
EndPlainFunction
v390 <- BeginPlainFunction -> v391, v392
    v393 <- LoadInteger '1'
    SetElement v391, '0', v393
    Update v392, '+', v393
    v394 <- LoadInteger '2'
    SetElement v391, '1', v394
    Update v392, '+', v394
    v395 <- LoadInteger '3'
    SetElement v391, '2', v395
    Update v392, '+', v395
    Return v392
EndPlainFunction
v396 <- BeginPlainFunction -> 
    v397 <- LoadInteger '0'
    Return v397
EndPlainFunction
v398 <- BeginPlainFunction -> v399, v400
    v401 <- LoadFloat '253.75'
    SetElement v399, '0', v401
    v402 <- GetElement v399, '0'
    Return v402
EndPlainFunction
v403 <- BeginPlainFunction -> v404, v405
    v406 <- LoadFloat '256.25'
    SetElement v404, '0', v406
    v407 <- GetElement v404, '0'
    Return v407
EndPlainFunction
v408 <- BeginPlainFunction -> v409, v410
    v411 <- LoadFloat '253.75'
    v412 <- CallFunction v396, []
    v413 <- BinaryOperation v411, '+', v412
    SetElement v409, '0', v413
    v414 <- GetElement v409, '0'
    Return v414
EndPlainFunction
v415 <- BeginPlainFunction -> v416, v417
    v418 <- LoadFloat '256.25'
    v419 <- CallFunction v396, []
    v420 <- BinaryOperation v418, '+', v419
    SetElement v416, '0', v420
    v421 <- GetElement v416, '0'
    Return v421
EndPlainFunction
v422 <- BeginPlainFunction -> v423, v424
    v425 <- LoadFloat '256.25'
    SetElement v423, '0', v425
    v426 <- GetElement v423, '0'
    Return v426
EndPlainFunction
v427 <- BeginPlainFunction -> v428, v429
    v430 <- LoadInteger '1'
    v431 <- UnaryOperation '-', v430
    SetElement v428, '0', v431
    v432 <- GetElement v428, '0'
    Return v432
EndPlainFunction
v433 <- BeginPlainFunction -> v434, v435
    v436 <- LoadFloat '1.25'
    v437 <- UnaryOperation '-', v436
    SetElement v434, '0', v437
    v438 <- GetElement v434, '0'
    Return v438
EndPlainFunction
v439 <- BeginPlainFunction -> v440, v441
    v442 <- LoadFloat '1.25'
    v443 <- UnaryOperation '-', v442
    v444 <- CallFunction v396, []
    v445 <- BinaryOperation v443, '+', v444
    SetElement v440, '0', v445
    v446 <- GetElement v440, '0'
    Return v446
EndPlainFunction
v447 <- BeginPlainFunction -> v448, v449
    v450 <- LoadInteger '256'
    SetElement v448, '0', v450
    v451 <- GetElement v448, '0'
    Return v451
EndPlainFunction
v452 <- BeginPlainFunction -> v453, v454
    SetElement v453, '0', v278
    v455 <- GetElement v453, '0'
    Return v455
EndPlainFunction
v456 <- LoadInteger '10'
v457 <- CreateNamedVariable 'kRuns', 'const', v456
v458 <- BeginPlainFunction -> v459, v460, v461
    BeginForLoopInitializer
        v462 <- LoadInteger '0'
    BeginForLoopCondition -> v463
        v464 <- LoadInteger '5'
        v465 <- Compare v463, '<', v464
    BeginForLoopAfterthought v465 -> v466
        v467 <- UnaryOperation v466, '++'
    BeginForLoopBody -> v468
        v469 <- LoadInteger '0'
        v470 <- CallFunction v459, [v460, v469]
    EndForLoop
    v471 <- LoadInteger '0'
    v472 <- CreateNamedVariable 'sum', 'var', v471
    BeginForLoopInitializer
        v473 <- LoadInteger '0'
    BeginForLoopCondition -> v474
        v475 <- Compare v474, '<', v457
    BeginForLoopAfterthought v475 -> v476
        v477 <- UnaryOperation v476, '++'
    BeginForLoopBody -> v478
        v479 <- CallFunction v459, [v460, v472]
        Reassign v472, v479
    EndForLoop
EndPlainFunction
v480 <- BeginPlainFunction -> v481, v482, v483
    v484 <- LoadUndefined
    v485 <- GetComputedProperty v13, v362
    v486 <- LoadInteger '456'
    SetComputedProperty v13, v362, v486
    v487 <- LoadUndefined
    v488 <- GetComputedProperty v13, v362
    v489 <- LoadUndefined
    v490 <- LoadInteger '1'
    v491 <- BinaryOperation v362, '+', v490
    v492 <- GetComputedProperty v13, v491
    v493 <- LoadInteger '456'
    v494 <- LoadInteger '1'
    v495 <- BinaryOperation v362, '+', v494
    SetComputedProperty v13, v495, v493
    v496 <- LoadUndefined
    v497 <- LoadInteger '1'
    v498 <- BinaryOperation v362, '+', v497
    v499 <- GetComputedProperty v13, v498
EndPlainFunction
BeginForLoopInitializer
    v500 <- LoadInteger '0'
BeginForLoopCondition -> v501
    v502 <- CreateNamedVariable 'types', 'none'
    v503 <- GetProperty v502, 'length'
    v504 <- Compare v501, '<', v503
BeginForLoopAfterthought v504 -> v505
    v506 <- UnaryOperation v505, '++'
BeginForLoopBody -> v507
    v508 <- CreateNamedVariable 'types', 'none'
    v509 <- GetComputedProperty v508, v507
    v510 <- CreateNamedVariable 'type', 'var', v509
    v511 <- Construct v510, [v362]
    v512 <- CreateNamedVariable 'a', 'var', v511
    BeginForLoopInitializer
        v513 <- LoadInteger '0'
    BeginForLoopCondition -> v514
        v515 <- Compare v514, '<', v362
    BeginForLoopAfterthought v515 -> v516
        v517 <- UnaryOperation v516, '++'
    BeginForLoopBody -> v518
        SetComputedProperty v512, v518, v518
    EndForLoop
    v519 <- LoadInteger '780'
    v520 <- BinaryOperation v519, '*', v457
    v521 <- CallFunction v458, [v363, v512, v520]
    v522 <- LoadInteger '3'
    v523 <- BinaryOperation v522, '*', v457
    v524 <- CallFunction v458, [v373, v512, v523]
    v525 <- LoadInteger '820'
    v526 <- BinaryOperation v525, '*', v457
    v527 <- CallFunction v458, [v379, v512, v526]
    v528 <- LoadInteger '6'
    v529 <- BinaryOperation v528, '*', v457
    v530 <- CallFunction v458, [v390, v512, v529]
    v531 <- CreateNamedVariable 'test_result_low_int', 'none'
    v532 <- GetComputedProperty v531, v507
    v533 <- CallFunction v458, [v427, v512, v532]
    v534 <- CreateNamedVariable 'test_result_low_double', 'none'
    v535 <- GetComputedProperty v534, v507
    v536 <- CallFunction v458, [v439, v512, v535]
    v537 <- GetComputedProperty v534, v507
    v538 <- CallFunction v458, [v433, v512, v537]
    v539 <- CreateNamedVariable 'test_result_high_int', 'none'
    v540 <- GetComputedProperty v539, v507
    v541 <- CallFunction v458, [v447, v512, v540]
    v542 <- CreateNamedVariable 'test_result_nan', 'none'
    v543 <- GetComputedProperty v542, v507
    v544 <- CallFunction v458, [v452, v512, v543]
    v545 <- CreateNamedVariable 'test_result_middle', 'none'
    v546 <- GetComputedProperty v545, v507
    v547 <- CallFunction v458, [v408, v512, v546]
    v548 <- GetComputedProperty v545, v507
    v549 <- CallFunction v458, [v398, v512, v548]
    v550 <- CreateNamedVariable 'test_result_high_double', 'none'
    v551 <- GetComputedProperty v550, v507
    v552 <- CallFunction v458, [v422, v512, v551]
    v553 <- GetComputedProperty v550, v507
    v554 <- CallFunction v458, [v403, v512, v553]
    v555 <- LoadInteger '0'
    v556 <- Compare v507, '!=', v555
    BeginIf v556
        v557 <- GetProperty v512, 'length'
        v558 <- LoadInteger '2'
        SetProperty v512, 'length', v558
        v559 <- GetProperty v512, 'length'
        v560 <- DeleteProperty v512, 'length'
        v561 <- CallFunction v480, [v512]
        v562 <- CallFunction v480, [v512]
        v563 <- CallFunction v480, [v512]
        v564 <- CallFunction v480, [v512]
    EndIf
    v565 <- BeginPlainFunction -> v566
        v567 <- LoadInteger '1'
        SetElement v566, '0', v567
        SetElement v566, '0', v567
        Return v567
    EndPlainFunction
    v568 <- CallFunction v565, [v512]
    v569 <- LoadInteger '0'
    v570 <- CallFunction v565, [v569]
    v571 <- BeginPlainFunction -> v572
        v573 <- LoadInteger '1'
        SetElement v572, '0', v573
        SetElement v572, '0', v573
        Return v573
    EndPlainFunction
    v574 <- CallFunction v571, [v512]
    v575 <- CallFunction v571, [v512]
    v576 <- LoadInteger '0'
    v577 <- CallFunction v571, [v576]
EndForLoop
v578 <- BeginPlainFunction -> v579
    v580 <- LoadUndefined
    SetElement v579, '0', v580
EndPlainFunction
v581 <- LoadInteger '1'
v582 <- Construct v191, [v581]
v583 <- CreateNamedVariable 'float32_array', 'var', v582
v584 <- CallFunction v578, [v583]
v585 <- GetElement v583, '0'
v586 <- CreateNamedVariable 'isNaN', 'none'
v587 <- CallFunction v586, [v585]
v588 <- CallFunction v578, [v583]
v589 <- GetElement v583, '0'
v590 <- CallFunction v586, [v589]
v591 <- CallFunction v578, [v583]
v592 <- GetElement v583, '0'
v593 <- CallFunction v586, [v592]
v594 <- BeginPlainFunction -> v595
    v596 <- LoadUndefined
    SetElement v595, '0', v596
EndPlainFunction
v597 <- LoadInteger '1'
v598 <- Construct v116, [v597]
v599 <- CreateNamedVariable 'float64_array', 'var', v598
v600 <- CallFunction v594, [v599]
v601 <- GetElement v599, '0'
v602 <- CallFunction v586, [v601]
v603 <- CallFunction v594, [v599]
v604 <- GetElement v599, '0'
v605 <- CallFunction v586, [v604]
v606 <- CallFunction v594, [v599]
v607 <- GetElement v599, '0'
v608 <- CallFunction v586, [v607]
v609 <- LoadInteger '0'
v610 <- Construct v27, [v609]
Reassign v30, v610
v611 <- LoadInteger '0'
v612 <- GetProperty v30, 'byteLength'
v613 <- Construct v197, [v30]
Reassign v13, v613
v614 <- LoadInteger '0'
v615 <- GetProperty v13, 'byteLength'
v616 <- LoadInteger '0'
v617 <- GetProperty v13, 'length'
v618 <- LoadInteger '1'
SetElement v13, '0', v618
v619 <- LoadUndefined
v620 <- GetElement v13, '0'
v621 <- LoadInteger '16'
v622 <- Construct v27, [v621]
Reassign v30, v622
v623 <- LoadInteger '4'
v624 <- LoadInteger '0'
v625 <- Construct v191, [v30, v623, v624]
Reassign v13, v625
v626 <- LoadInteger '0'
v627 <- GetProperty v13, 'byteLength'
v628 <- LoadInteger '0'
v629 <- GetProperty v13, 'length'
v630 <- LoadInteger '1'
SetElement v13, '0', v630
v631 <- LoadUndefined
v632 <- GetElement v13, '0'
v633 <- LoadInteger '0'
v634 <- Construct v186, [v633]
Reassign v13, v634
v635 <- LoadInteger '0'
v636 <- GetProperty v13, 'byteLength'
v637 <- LoadInteger '0'
v638 <- GetProperty v13, 'length'
v639 <- LoadInteger '1'
SetElement v13, '0', v639
v640 <- LoadUndefined
v641 <- GetElement v13, '0'
v642 <- CreateArray []
v643 <- Construct v79, [v642]
Reassign v13, v643
v644 <- LoadInteger '0'
v645 <- GetProperty v13, 'length'
v646 <- LoadInteger '0'
v647 <- GetProperty v13, 'byteLength'
v648 <- LoadInteger '0'
v649 <- GetProperty v13, 'buffer'
v650 <- GetProperty v649, 'byteLength'
v651 <- LoadInteger '4'
v652 <- GetProperty v13, 'BYTES_PER_ELEMENT'
v653 <- GetProperty v13, 'buffer'
v654 <- LoadInteger '1'
v655 <- LoadInteger '2'
v656 <- LoadInteger '3'
v657 <- CreateArray [v654, v655, v656]
v658 <- Construct v186, [v657]
Reassign v13, v658
v659 <- LoadInteger '3'
v660 <- GetProperty v13, 'length'
v661 <- LoadInteger '6'
v662 <- GetProperty v13, 'byteLength'
v663 <- LoadInteger '6'
v664 <- GetProperty v13, 'buffer'
v665 <- GetProperty v664, 'byteLength'
v666 <- LoadInteger '2'
v667 <- GetProperty v13, 'BYTES_PER_ELEMENT'
v668 <- LoadInteger '1'
v669 <- GetElement v13, '0'
v670 <- LoadInteger '3'
v671 <- GetElement v13, '2'
v672 <- GetProperty v13, 'buffer'
v673 <- Construct v79, [v13]
Reassign v13, v673
v674 <- LoadInteger '3'
v675 <- GetProperty v13, 'length'
v676 <- LoadInteger '12'
v677 <- GetProperty v13, 'byteLength'
v678 <- LoadInteger '12'
v679 <- GetProperty v13, 'buffer'
v680 <- GetProperty v679, 'byteLength'
v681 <- LoadInteger '4'
v682 <- GetProperty v13, 'BYTES_PER_ELEMENT'
v683 <- LoadInteger '1'
v684 <- GetElement v13, '0'
v685 <- LoadInteger '3'
v686 <- GetElement v13, '2'
v687 <- GetProperty v13, 'buffer'
v688 <- LoadInteger '1'
v689 <- LoadInteger '2'
v690 <- LoadInteger '3'
v691 <- LoadInteger '4'
v692 <- LoadInteger '5'
v693 <- LoadInteger '6'
v694 <- CreateArray [v688, v689, v690, v691, v692, v693]
v695 <- Construct v186, [v694]
Reassign v13, v695
v696 <- LoadInteger '3'
v697 <- CallMethod v13, 'subarray', [v696]
v698 <- CreateNamedVariable 'aa', 'none'
Reassign v698, v697
v699 <- CreateNamedVariable 'aa', 'none'
v700 <- LoadInteger '3'
v701 <- GetProperty v699, 'length'
v702 <- LoadInteger '6'
v703 <- GetProperty v699, 'byteLength'
v704 <- LoadInteger '2'
v705 <- GetProperty v699, 'BYTES_PER_ELEMENT'
v706 <- GetProperty v13, 'buffer'
v707 <- GetProperty v699, 'buffer'
v708 <- LoadInteger '3'
v709 <- LoadInteger '5'
v710 <- CallMethod v13, 'subarray', [v708, v709]
Reassign v699, v710
v711 <- LoadInteger '2'
v712 <- GetProperty v699, 'length'
v713 <- LoadInteger '4'
v714 <- GetProperty v699, 'byteLength'
v715 <- LoadInteger '2'
v716 <- GetProperty v699, 'BYTES_PER_ELEMENT'
v717 <- GetProperty v13, 'buffer'
v718 <- GetProperty v699, 'buffer'
v719 <- LoadInteger '4'
v720 <- LoadInteger '8'
v721 <- CallMethod v13, 'subarray', [v719, v720]
Reassign v699, v721
v722 <- LoadInteger '2'
v723 <- GetProperty v699, 'length'
v724 <- LoadInteger '4'
v725 <- GetProperty v699, 'byteLength'
v726 <- LoadInteger '2'
v727 <- GetProperty v699, 'BYTES_PER_ELEMENT'
v728 <- GetProperty v13, 'buffer'
v729 <- GetProperty v699, 'buffer'
v730 <- LoadInteger '9'
v731 <- CallMethod v13, 'subarray', [v730]
Reassign v699, v731
v732 <- LoadInteger '0'
v733 <- GetProperty v699, 'length'
v734 <- LoadInteger '0'
v735 <- GetProperty v699, 'byteLength'
v736 <- LoadInteger '2'
v737 <- GetProperty v699, 'BYTES_PER_ELEMENT'
v738 <- GetProperty v13, 'buffer'
v739 <- GetProperty v699, 'buffer'
v740 <- LoadInteger '4'
v741 <- UnaryOperation '-', v740
v742 <- CallMethod v13, 'subarray', [v741]
Reassign v699, v742
v743 <- LoadInteger '4'
v744 <- GetProperty v699, 'length'
v745 <- LoadInteger '8'
v746 <- GetProperty v699, 'byteLength'
v747 <- LoadInteger '2'
v748 <- GetProperty v699, 'BYTES_PER_ELEMENT'
v749 <- GetProperty v13, 'buffer'
v750 <- GetProperty v699, 'buffer'
v751 <- LoadInteger '3'
v752 <- UnaryOperation '-', v751
v753 <- LoadInteger '1'
v754 <- UnaryOperation '-', v753
v755 <- CallMethod v13, 'subarray', [v752, v754]
Reassign v699, v755
v756 <- LoadInteger '2'
v757 <- GetProperty v699, 'length'
v758 <- LoadInteger '4'
v759 <- GetProperty v699, 'byteLength'
v760 <- LoadInteger '2'
v761 <- GetProperty v699, 'BYTES_PER_ELEMENT'
v762 <- GetProperty v13, 'buffer'
v763 <- GetProperty v699, 'buffer'
v764 <- LoadInteger '3'
v765 <- LoadInteger '2'
v766 <- CallMethod v13, 'subarray', [v764, v765]
Reassign v699, v766
v767 <- LoadInteger '0'
v768 <- GetProperty v699, 'length'
v769 <- LoadInteger '0'
v770 <- GetProperty v699, 'byteLength'
v771 <- LoadInteger '2'
v772 <- GetProperty v699, 'BYTES_PER_ELEMENT'
v773 <- GetProperty v13, 'buffer'
v774 <- GetProperty v699, 'buffer'
v775 <- LoadInteger '3'
v776 <- UnaryOperation '-', v775
v777 <- LoadInteger '4'
v778 <- UnaryOperation '-', v777
v779 <- CallMethod v13, 'subarray', [v776, v778]
Reassign v699, v779
v780 <- LoadInteger '0'
v781 <- GetProperty v699, 'length'
v782 <- LoadInteger '0'
v783 <- GetProperty v699, 'byteLength'
v784 <- LoadInteger '2'
v785 <- GetProperty v699, 'BYTES_PER_ELEMENT'
v786 <- GetProperty v13, 'buffer'
v787 <- GetProperty v699, 'buffer'
v788 <- LoadInteger '0'
v789 <- LoadInteger '8'
v790 <- UnaryOperation '-', v789
v791 <- CallMethod v13, 'subarray', [v788, v790]
Reassign v699, v791
v792 <- LoadInteger '0'
v793 <- GetProperty v699, 'length'
v794 <- LoadInteger '0'
v795 <- GetProperty v699, 'byteLength'
v796 <- LoadInteger '2'
v797 <- GetProperty v699, 'BYTES_PER_ELEMENT'
v798 <- GetProperty v13, 'buffer'
v799 <- GetProperty v699, 'buffer'
v800 <- BeginPlainFunction -> 
    BeginObjectLiteral
    v801 <- EndObjectLiteral
    v802 <- LoadInteger '0'
    v803 <- GetProperty v13, 'subarray'
    v804 <- CallMethod v803, 'call', [v801, v802]
EndPlainFunction
v805 <- CallFunction v800, []
v806 <- BeginPlainFunction -> 
    v807 <- CreateArray []
    v808 <- LoadInteger '0'
    v809 <- GetProperty v13, 'subarray'
    v810 <- CallMethod v809, 'call', [v807, v808]
EndPlainFunction
v811 <- CallFunction v806, []
v812 <- BeginPlainFunction -> 
    v813 <- LoadInteger '100'
    v814 <- CallFunction v27, [v813]
EndPlainFunction
v815 <- CallFunction v812, []
v816 <- CreateNamedVariable 'TypeError', 'none'
v817 <- BeginPlainFunction -> 
    v818 <- CreateNamedVariable 'b', 'none'
    v819 <- LoadInteger '5'
    v820 <- LoadInteger '77'
    v821 <- CallFunction v197, [v818, v819, v820]
EndPlainFunction
v822 <- CallFunction v817, []
v823 <- BeginPlainFunction -> 
    v824 <- LoadNull
    v825 <- LoadInteger '10'
    v826 <- CallMethod v27, 'call', [v824, v825]
EndPlainFunction
v827 <- CallFunction v823, []
v828 <- BeginPlainFunction -> 
    v829 <- LoadNull
    v830 <- CreateNamedVariable 'b', 'none'
    v831 <- LoadInteger '2'
    v832 <- LoadInteger '4'
    v833 <- CallMethod v186, 'call', [v829, v830, v831, v832]
EndPlainFunction
v834 <- CallFunction v828, []
v835 <- BeginPlainFunction -> 
    v836 <- LoadNull
    v837 <- LoadInteger '1000'
    v838 <- CreateArray [v837]
    v839 <- CallMethod v27, 'apply', [v836, v838]
EndPlainFunction
v840 <- CallFunction v835, []
v841 <- BeginPlainFunction -> 
    v842 <- LoadNull
    v843 <- CreateNamedVariable 'b', 'none'
    v844 <- LoadInteger '128'
    v845 <- LoadInteger '1'
    v846 <- CreateArray [v843, v844, v845]
    v847 <- CallMethod v191, 'apply', [v842, v846]
EndPlainFunction
v848 <- CallFunction v841, []
v849 <- LoadInteger '4'
v850 <- Construct v27, [v849]
v851 <- CreateNamedVariable 'b', 'var', v850
v852 <- BeginPlainFunction -> v853, v854
    BeginForLoopInitializer
        v855 <- LoadInteger '0'
    BeginForLoopCondition -> v856
        v857 <- GetProperty v853, 'length'
        v858 <- Compare v856, '<', v857
    BeginForLoopAfterthought v858 -> v859
        v860 <- UnaryOperation '++', v859
    BeginForLoopBody -> v861
        v862 <- GetComputedProperty v853, v861
        v863 <- GetComputedProperty v854, v861
    EndForLoop
EndPlainFunction
v864 <- LoadInteger '1'
v865 <- LoadInteger '2'
v866 <- LoadInteger '3'
v867 <- LoadInteger '4'
v868 <- LoadInteger '0'
v869 <- LoadInteger '1'
v870 <- UnaryOperation '-', v869
v871 <- CreateArray [v864, v865, v866, v867, v868, v870]
v872 <- Construct v55, [v871]
v873 <- CreateNamedVariable 'a11', 'var', v872
v874 <- LoadInteger '15'
v875 <- Construct v186, [v874]
v876 <- CreateNamedVariable 'a12', 'var', v875
v877 <- LoadInteger '3'
v878 <- CallMethod v876, 'set', [v873, v877]
v879 <- LoadInteger '0'
v880 <- LoadInteger '0'
v881 <- LoadInteger '0'
v882 <- LoadInteger '1'
v883 <- LoadInteger '2'
v884 <- LoadInteger '3'
v885 <- LoadInteger '4'
v886 <- LoadInteger '0'
v887 <- LoadInteger '65535'
v888 <- LoadInteger '0'
v889 <- LoadInteger '0'
v890 <- CreateArray [v879, v880, v881, v882, v883, v884, v885, v886, v887, v888, v889]
v891 <- BeginPlainFunction -> 
    v892 <- CallMethod v873, 'set', [v876]
EndPlainFunction
v893 <- CallFunction v891, []
v894 <- LoadInteger '1'
v895 <- LoadUndefined
v896 <- LoadInteger '10'
v897 <- LoadInteger '0'
v898 <- LoadInteger '1'
v899 <- UnaryOperation '-', v898
v900 <- BeginPlainFunction -> 
    v901 <- LoadInteger '3'
    Return v901
EndPlainFunction
BeginObjectLiteral
    ObjectLiteralAddProperty `valueOf`, v900
v902 <- EndObjectLiteral
v903 <- CreateArray [v894, v895, v896, v278, v897, v899, v902]
v904 <- CreateNamedVariable 'a21', 'var', v903
v905 <- LoadInteger '12'
v906 <- Construct v10, [v905]
v907 <- CreateNamedVariable 'a22', 'var', v906
v908 <- LoadInteger '2'
v909 <- CallMethod v907, 'set', [v904, v908]
v910 <- LoadInteger '0'
v911 <- LoadInteger '0'
v912 <- LoadInteger '1'
v913 <- LoadInteger '0'
v914 <- LoadInteger '10'
v915 <- LoadInteger '0'
v916 <- LoadInteger '0'
v917 <- LoadInteger '1'
v918 <- UnaryOperation '-', v917
v919 <- LoadInteger '3'
v920 <- LoadInteger '0'
v921 <- CreateArray [v910, v911, v912, v913, v914, v915, v916, v918, v919, v920]
v922 <- LoadInteger '2'
v923 <- LoadInteger '4'
v924 <- LoadInteger '6'
v925 <- LoadInteger '8'
v926 <- LoadInteger '11'
v927 <- LoadInteger '1'
v928 <- LoadInteger '0'
v929 <- BinaryOperation v927, '/', v928
v930 <- LoadInteger '3'
v931 <- UnaryOperation '-', v930
v932 <- CreateArray [v922, v923, v924, v925, v926, v278, v929, v931]
v933 <- Construct v191, [v932]
v934 <- CreateNamedVariable 'a31', 'var', v933
v935 <- LoadInteger '2'
v936 <- LoadInteger '6'
v937 <- CallMethod v934, 'subarray', [v935, v936]
v938 <- CreateNamedVariable 'a32', 'var', v937
v939 <- LoadInteger '4'
v940 <- CallMethod v934, 'set', [v938, v939]
v941 <- LoadInteger '2'
v942 <- LoadInteger '4'
v943 <- LoadInteger '6'
v944 <- LoadInteger '8'
v945 <- LoadInteger '6'
v946 <- LoadInteger '8'
v947 <- LoadInteger '11'
v948 <- CreateArray [v941, v942, v943, v944, v945, v946, v947, v278]
v949 <- LoadInteger '6'
v950 <- LoadInteger '8'
v951 <- LoadInteger '6'
v952 <- LoadInteger '8'
v953 <- CreateArray [v949, v950, v951, v952]
v954 <- LoadInteger '3'
v955 <- LoadInteger '2'
v956 <- LoadInteger '5'
v957 <- LoadInteger '6'
v958 <- CreateArray [v954, v955, v956, v957]
v959 <- Construct v275, [v958]
v960 <- CreateNamedVariable 'a4', 'var', v959
v961 <- CallMethod v960, 'set', [v960]
v962 <- LoadInteger '3'
v963 <- LoadInteger '2'
v964 <- LoadInteger '5'
v965 <- LoadInteger '6'
v966 <- CreateArray [v962, v963, v964, v965]
v967 <- LoadInteger '4'
v968 <- Construct v27, [v967]
v969 <- CreateNamedVariable 'b', 'var', v968
v970 <- Construct v55, [v969]
v971 <- CreateNamedVariable 'a5', 'var', v970
v972 <- Construct v197, [v969]
v973 <- CreateNamedVariable 'a50', 'var', v972
v974 <- LoadInteger '0'
v975 <- LoadInteger '2'
v976 <- Construct v197, [v969, v974, v975]
v977 <- CreateNamedVariable 'a51', 'var', v976
v978 <- LoadInteger '1'
v979 <- LoadInteger '2'
v980 <- Construct v197, [v969, v978, v979]
v981 <- CreateNamedVariable 'a52', 'var', v980
v982 <- LoadInteger '2'
v983 <- LoadInteger '2'
v984 <- Construct v197, [v969, v982, v983]
v985 <- CreateNamedVariable 'a53', 'var', v984
v986 <- LoadInteger '20560'
v987 <- LoadInteger '2570'
v988 <- CreateArray [v986, v987]
v989 <- CallMethod v971, 'set', [v988]
v990 <- LoadInteger '80'
v991 <- LoadInteger '80'
v992 <- LoadInteger '10'
v993 <- LoadInteger '10'
v994 <- CreateArray [v990, v991, v992, v993]
v995 <- LoadInteger '80'
v996 <- LoadInteger '80'
v997 <- CreateArray [v995, v996]
v998 <- LoadInteger '80'
v999 <- LoadInteger '10'
v1000 <- CreateArray [v998, v999]
v1001 <- LoadInteger '10'
v1002 <- LoadInteger '10'
v1003 <- CreateArray [v1001, v1002]
v1004 <- LoadInteger '80'
v1005 <- LoadInteger '80'
v1006 <- LoadInteger '10'
v1007 <- LoadInteger '10'
v1008 <- CreateArray [v1004, v1005, v1006, v1007]
v1009 <- CallMethod v973, 'set', [v1008]
v1010 <- CallMethod v977, 'set', [v971]
v1011 <- LoadInteger '80'
v1012 <- LoadInteger '10'
v1013 <- LoadInteger '10'
v1014 <- LoadInteger '10'
v1015 <- CreateArray [v1011, v1012, v1013, v1014]
v1016 <- LoadInteger '80'
v1017 <- LoadInteger '80'
v1018 <- LoadInteger '10'
v1019 <- LoadInteger '10'
v1020 <- CreateArray [v1016, v1017, v1018, v1019]
v1021 <- CallMethod v973, 'set', [v1020]
v1022 <- CallMethod v981, 'set', [v971]
v1023 <- LoadInteger '80'
v1024 <- LoadInteger '80'
v1025 <- LoadInteger '10'
v1026 <- LoadInteger '10'
v1027 <- CreateArray [v1023, v1024, v1025, v1026]
v1028 <- LoadInteger '80'
v1029 <- LoadInteger '80'
v1030 <- LoadInteger '10'
v1031 <- LoadInteger '10'
v1032 <- CreateArray [v1028, v1029, v1030, v1031]
v1033 <- CallMethod v973, 'set', [v1032]
v1034 <- CallMethod v985, 'set', [v971]
v1035 <- LoadInteger '80'
v1036 <- LoadInteger '80'
v1037 <- LoadInteger '80'
v1038 <- LoadInteger '10'
v1039 <- CreateArray [v1035, v1036, v1037, v1038]
v1040 <- LoadInteger '80'
v1041 <- LoadInteger '81'
v1042 <- LoadInteger '10'
v1043 <- LoadInteger '11'
v1044 <- CreateArray [v1040, v1041, v1042, v1043]
v1045 <- CallMethod v973, 'set', [v1044]
v1046 <- CallMethod v971, 'set', [v977]
v1047 <- LoadInteger '80'
v1048 <- LoadInteger '81'
v1049 <- CreateArray [v1047, v1048]
v1050 <- LoadInteger '80'
v1051 <- LoadInteger '81'
v1052 <- LoadInteger '10'
v1053 <- LoadInteger '11'
v1054 <- CreateArray [v1050, v1051, v1052, v1053]
v1055 <- CallMethod v973, 'set', [v1054]
v1056 <- CallMethod v971, 'set', [v981]
v1057 <- LoadInteger '81'
v1058 <- LoadInteger '10'
v1059 <- CreateArray [v1057, v1058]
v1060 <- LoadInteger '80'
v1061 <- LoadInteger '81'
v1062 <- LoadInteger '10'
v1063 <- LoadInteger '11'
v1064 <- CreateArray [v1060, v1061, v1062, v1063]
v1065 <- CallMethod v973, 'set', [v1064]
v1066 <- CallMethod v971, 'set', [v985]
v1067 <- LoadInteger '10'
v1068 <- LoadInteger '11'
v1069 <- CreateArray [v1067, v1068]
v1070 <- LoadFloat '1.2'
v1071 <- LoadFloat '12.3'
v1072 <- CreateArray [v1070, v1071]
v1073 <- Construct v191, [v1072]
v1074 <- CreateNamedVariable 'a61', 'var', v1073
v1075 <- LoadInteger '2'
v1076 <- Construct v10, [v1075]
v1077 <- CreateNamedVariable 'a62', 'var', v1076
v1078 <- CallMethod v1077, 'set', [v1074]
v1079 <- LoadInteger '1'
v1080 <- LoadInteger '12'
v1081 <- CreateArray [v1079, v1080]
v1082 <- CallMethod v1074, 'set', [v1077]
v1083 <- LoadInteger '1'
v1084 <- LoadInteger '12'
v1085 <- CreateArray [v1083, v1084]
v1086 <- BeginPlainFunction -> 
    v1087 <- LoadInteger '0'
    v1088 <- CallMethod v13, 'set', [v1087]
EndPlainFunction
v1089 <- CallFunction v1086, []
v1090 <- LoadInteger '1'
v1091 <- LoadInteger '2'
v1092 <- LoadInteger '3'
v1093 <- LoadInteger '4'
v1094 <- LoadInteger '5'
v1095 <- LoadInteger '6'
v1096 <- CreateArray [v1090, v1091, v1092, v1093, v1094, v1095]
BeginObjectLiteral
v1097 <- EndObjectLiteral
v1098 <- CallMethod v13, 'set', [v1097]
v1099 <- LoadInteger '1'
v1100 <- LoadInteger '2'
v1101 <- LoadInteger '3'
v1102 <- LoadInteger '4'
v1103 <- LoadInteger '5'
v1104 <- LoadInteger '6'
v1105 <- CreateArray [v1099, v1100, v1101, v1102, v1103, v1104]
v1106 <- LoadInteger '1'
v1107 <- LoadInteger '2'
v1108 <- LoadInteger '3'
v1109 <- LoadInteger '4'
v1110 <- LoadInteger '5'
v1111 <- LoadInteger '6'
v1112 <- CreateArray [v1106, v1107, v1108, v1109, v1110, v1111]
v1113 <- Construct v197, [v1112]
v1114 <- CreateNamedVariable 'a0', 'var', v1113
v1115 <- GetProperty v1114, 'buffer'
v1116 <- CreateNamedVariable 'b0', 'var', v1115
v1117 <- LoadInteger '0'
v1118 <- CallMethod v1116, 'slice', [v1117]
v1119 <- CreateNamedVariable 'b1', 'var', v1118
v1120 <- GetProperty v1116, 'byteLength'
v1121 <- GetProperty v1119, 'byteLength'
v1122 <- LoadInteger '1'
v1123 <- LoadInteger '2'
v1124 <- LoadInteger '3'
v1125 <- LoadInteger '4'
v1126 <- LoadInteger '5'
v1127 <- LoadInteger '6'
v1128 <- CreateArray [v1122, v1123, v1124, v1125, v1126, v1127]
v1129 <- Construct v197, [v1119]
v1130 <- LoadInteger '3'
v1131 <- CallMethod v1116, 'slice', [v1130]
v1132 <- CreateNamedVariable 'b2', 'var', v1131
v1133 <- GetProperty v1116, 'byteLength'
v1134 <- LoadInteger '3'
v1135 <- BinaryOperation v1133, '-', v1134
v1136 <- GetProperty v1132, 'byteLength'
v1137 <- LoadInteger '4'
v1138 <- LoadInteger '5'
v1139 <- LoadInteger '6'
v1140 <- CreateArray [v1137, v1138, v1139]
v1141 <- Construct v197, [v1132]
v1142 <- LoadInteger '2'
v1143 <- LoadInteger '4'
v1144 <- CallMethod v1116, 'slice', [v1142, v1143]
v1145 <- CreateNamedVariable 'b3', 'var', v1144
v1146 <- LoadInteger '2'
v1147 <- GetProperty v1145, 'byteLength'
v1148 <- LoadInteger '3'
v1149 <- LoadInteger '4'
v1150 <- CreateArray [v1148, v1149]
v1151 <- Construct v197, [v1145]
v1152 <- BeginPlainFunction -> v1153, v1154
    v1155 <- GetComputedProperty v1153, v1154
    Return v1155
EndPlainFunction
v1156 <- BeginPlainFunction -> v1157, v1158, v1159
    SetComputedProperty v1157, v1158, v1159
    Return v1159
EndPlainFunction
v1160 <- BeginPlainFunction -> v1161
    v1162 <- LoadInteger '1'
    v1163 <- LoadInteger '2'
    v1164 <- LoadInteger '3'
    v1165 <- LoadInteger '4'
    v1166 <- LoadInteger '5'
    v1167 <- LoadInteger '6'
    v1168 <- CreateArray [v1162, v1163, v1164, v1165, v1166, v1167]
    v1169 <- Construct v1161, [v1168]
    v1170 <- CreateNamedVariable 't_array', 'var', v1169
    v1171 <- LoadInteger '1'
    v1172 <- LoadInteger '0'
    v1173 <- CallFunction v1152, [v1170, v1172]
    v1174 <- LoadInteger '1'
    v1175 <- LoadInteger '0'
    v1176 <- CallFunction v1152, [v1170, v1175]
    v1177 <- LoadInteger '0'
    v1178 <- LoadInteger '13'
    v1179 <- CallFunction v1156, [v1170, v1177, v1178]
    v1180 <- LoadInteger '13'
    v1181 <- LoadInteger '0'
    v1182 <- CallFunction v1152, [v1170, v1181]
    v1183 <- LoadInteger '0'
    v1184 <- LoadInteger '15'
    v1185 <- CallFunction v1156, [v1170, v1183, v1184]
    v1186 <- LoadInteger '15'
    v1187 <- LoadInteger '0'
    v1188 <- CallFunction v1152, [v1170, v1187]
EndPlainFunction
v1189 <- CallFunction v1160, [v197]
v1190 <- CallFunction v1160, [v31]
v1191 <- CallFunction v1160, [v55]
v1192 <- CallFunction v1160, [v186]
v1193 <- CallFunction v1160, [v10]
v1194 <- CallFunction v1160, [v79]
v1195 <- CallFunction v1160, [v191]
v1196 <- CallFunction v1160, [v116]
v1197 <- LoadInteger '1'
v1198 <- LoadInteger '2'
v1199 <- LoadInteger '3'
v1200 <- LoadInteger '4'
v1201 <- LoadInteger '5'
v1202 <- LoadInteger '6'
v1203 <- Construct v274, [v1197, v1198, v1199, v1200, v1201, v1202]
v1204 <- CreateNamedVariable 'built_in_array', 'var', v1203
v1205 <- LoadInteger '1'
v1206 <- LoadInteger '0'
v1207 <- CallFunction v1152, [v1204, v1206]
v1208 <- LoadInteger '1'
v1209 <- LoadInteger '0'
v1210 <- CallFunction v1152, [v1204, v1209]
v1211 <- LoadInteger '0'
v1212 <- LoadInteger '11'
v1213 <- CallFunction v1156, [v1204, v1211, v1212]
v1214 <- LoadInteger '11'
v1215 <- LoadInteger '0'
v1216 <- CallFunction v1152, [v1204, v1215]
v1217 <- LoadFloat '1.5'
v1218 <- LoadInteger '2'
v1219 <- LoadInteger '3'
v1220 <- LoadInteger '4'
v1221 <- LoadInteger '5'
v1222 <- LoadInteger '6'
v1223 <- Construct v274, [v1217, v1218, v1219, v1220, v1221, v1222]
Reassign v1204, v1223
v1224 <- LoadFloat '1.5'
v1225 <- LoadInteger '0'
v1226 <- CallFunction v1152, [v1204, v1225]
v1227 <- LoadFloat '1.5'
v1228 <- LoadInteger '0'
v1229 <- CallFunction v1152, [v1204, v1228]
v1230 <- LoadInteger '0'
v1231 <- LoadFloat '2.5'
v1232 <- CallFunction v1156, [v1204, v1230, v1231]
v1233 <- LoadFloat '2.5'
v1234 <- LoadInteger '0'
v1235 <- CallFunction v1152, [v1204, v1234]
v1236 <- BeginPlainFunction -> 
    v1237 <- LoadInteger '2'
    v1238 <- LoadInteger '32'
    v1239 <- CreateNamedVariable 'Math', 'none'
    v1240 <- CallMethod v1239, 'pow', [v1237, v1238]
    v1241 <- CreateNamedVariable 'e32', 'var', v1240
    v1242 <- LoadInteger '2'
    v1243 <- LoadInteger '31'
    v1244 <- CallMethod v1239, 'pow', [v1242, v1243]
    v1245 <- CreateNamedVariable 'e31', 'var', v1244
    v1246 <- LoadInteger '2'
    v1247 <- LoadInteger '16'
    v1248 <- CallMethod v1239, 'pow', [v1246, v1247]
    v1249 <- CreateNamedVariable 'e16', 'var', v1248
    v1250 <- LoadInteger '2'
    v1251 <- LoadInteger '15'
    v1252 <- CallMethod v1239, 'pow', [v1250, v1251]
    v1253 <- CreateNamedVariable 'e15', 'var', v1252
    v1254 <- LoadInteger '2'
    v1255 <- LoadInteger '8'
    v1256 <- CallMethod v1239, 'pow', [v1254, v1255]
    v1257 <- CreateNamedVariable 'e8', 'var', v1256
    v1258 <- LoadInteger '2'
    v1259 <- LoadInteger '7'
    v1260 <- CallMethod v1239, 'pow', [v1258, v1259]
    v1261 <- CreateNamedVariable 'e7', 'var', v1260
    v1262 <- LoadInteger '2'
    v1263 <- Construct v79, [v1262]
    v1264 <- CreateNamedVariable 'a7', 'var', v1263
    v1265 <- LoadInteger '2'
    v1266 <- Construct v10, [v1265]
    v1267 <- CreateNamedVariable 'a71', 'var', v1266
    v1268 <- LoadInteger '2'
    v1269 <- Construct v186, [v1268]
    v1270 <- CreateNamedVariable 'a72', 'var', v1269
    v1271 <- LoadInteger '2'
    v1272 <- Construct v55, [v1271]
    v1273 <- CreateNamedVariable 'a73', 'var', v1272
    v1274 <- LoadInteger '2'
    v1275 <- Construct v31, [v1274]
    v1276 <- CreateNamedVariable 'a74', 'var', v1275
    v1277 <- LoadInteger '2'
    v1278 <- Construct v197, [v1277]
    v1279 <- CreateNamedVariable 'a75', 'var', v1278
    BeginForLoopInitializer
        v1280 <- LoadInteger '1'
        v1281 <- CreateNamedVariable 'i', 'none'
        Reassign v1281, v1280
    BeginForLoopCondition
        v1282 <- CreateNamedVariable 'i', 'none'
        v1283 <- LoadInteger '2'
        v1284 <- LoadInteger '33'
        v1285 <- CallMethod v1239, 'pow', [v1283, v1284]
        v1286 <- Compare v1282, '<=', v1285
    BeginForLoopAfterthought v1286
        v1287 <- LoadInteger '2'
        v1288 <- CreateNamedVariable 'i', 'none'
        Update v1288, '*', v1287
    BeginForLoopBody
        v1289 <- CreateNamedVariable 'i', 'none'
        v1290 <- LoadInteger '1'
        v1291 <- BinaryOperation v1289, '-', v1290
        v1292 <- CreateNamedVariable 'j', 'var', v1291
        SetElement v1264, '0', v1289
        SetElement v1267, '0', v1289
        SetElement v1270, '0', v1289
        SetElement v1273, '0', v1289
        SetElement v1276, '0', v1289
        SetElement v1279, '0', v1289
        SetElement v1264, '1', v1292
        SetElement v1267, '1', v1292
        SetElement v1270, '1', v1292
        SetElement v1273, '1', v1292
        SetElement v1276, '1', v1292
        SetElement v1279, '1', v1292
        v1293 <- Compare v1289, '<', v1241
        BeginIf v1293
            v1294 <- GetElement v1264, '0'
        BeginElse
            v1295 <- GetElement v1264, '0'
            v1296 <- LoadInteger '0'
        EndIf
        v1297 <- Compare v1292, '<', v1241
        BeginIf v1297
            v1298 <- GetElement v1264, '1'
        BeginElse
            v1299 <- GetElement v1264, '1'
            v1300 <- LoadInteger '1'
            v1301 <- BinaryOperation v1241, '-', v1300
        EndIf
        v1302 <- Compare v1289, '<', v1245
        BeginIf v1302
            v1303 <- GetElement v1267, '0'
        BeginElse
            v1304 <- GetElement v1267, '0'
            v1305 <- Compare v1289, '<', v1241
            v1306 <- UnaryOperation '-', v1245
            v1307 <- LoadInteger '0'
            v1308 <- TernaryOperation v1305, v1306, v1307
        EndIf
        v1309 <- Compare v1292, '<', v1245
        BeginIf v1309
            v1310 <- GetElement v1267, '1'
        BeginElse
            v1311 <- GetElement v1267, '1'
            v1312 <- LoadInteger '1'
            v1313 <- UnaryOperation '-', v1312
        EndIf
        v1314 <- Compare v1289, '<', v1249
        BeginIf v1314
            v1315 <- GetElement v1270, '0'
        BeginElse
            v1316 <- GetElement v1270, '0'
            v1317 <- LoadInteger '0'
        EndIf
        v1318 <- Compare v1292, '<', v1249
        BeginIf v1318
            v1319 <- GetElement v1270, '1'
        BeginElse
            v1320 <- GetElement v1270, '1'
            v1321 <- LoadInteger '1'
            v1322 <- BinaryOperation v1249, '-', v1321
        EndIf
        v1323 <- Compare v1289, '<', v1253
        BeginIf v1323
            v1324 <- GetElement v1273, '0'
        BeginElse
            v1325 <- GetElement v1273, '0'
            v1326 <- Compare v1289, '<', v1249
            v1327 <- UnaryOperation '-', v1253
            v1328 <- LoadInteger '0'
            v1329 <- TernaryOperation v1326, v1327, v1328
        EndIf
        v1330 <- Compare v1292, '<', v1253
        BeginIf v1330
            v1331 <- GetElement v1273, '1'
        BeginElse
            v1332 <- GetElement v1273, '1'
            v1333 <- LoadInteger '1'
            v1334 <- UnaryOperation '-', v1333
        EndIf
        v1335 <- Compare v1289, '<', v1257
        BeginIf v1335
            v1336 <- GetElement v1276, '0'
        BeginElse
            v1337 <- GetElement v1276, '0'
            v1338 <- LoadInteger '0'
        EndIf
        v1339 <- Compare v1292, '<', v1257
        BeginIf v1339
            v1340 <- GetElement v1276, '1'
        BeginElse
            v1341 <- GetElement v1276, '1'
            v1342 <- LoadInteger '1'
            v1343 <- BinaryOperation v1257, '-', v1342
        EndIf
        v1344 <- Compare v1289, '<', v1261
        BeginIf v1344
            v1345 <- GetElement v1279, '0'
        BeginElse
            v1346 <- GetElement v1279, '0'
            v1347 <- Compare v1289, '<', v1257
            v1348 <- UnaryOperation '-', v1261
            v1349 <- LoadInteger '0'
            v1350 <- TernaryOperation v1347, v1348, v1349
        EndIf
        v1351 <- Compare v1292, '<', v1261
        BeginIf v1351
            v1352 <- GetElement v1279, '1'
        BeginElse
            v1353 <- GetElement v1279, '1'
            v1354 <- LoadInteger '1'
            v1355 <- UnaryOperation '-', v1354
        EndIf
    EndForLoop
EndPlainFunction
v1356 <- CallFunction v1236, []


function assertInstance(a1, a2) {
    a1.constructor;
    a2();
    a2();
}
function f(a7) {
    a7[0] = 0;
    a7[1] = 0;
}
const v12 = new Int32Array(2);
var a = v12;
for (let i15 = 0; i15 < 5; i15++) {
    f(a);
}
f(a);
a[0];
a[1];
const v29 = new ArrayBuffer(12);
var ab = v29;
const v32 = new Uint8Array(ab);
var derived_uint8 = v32;
derived_uint8.buffer;
derived_uint8.length;
derived_uint8.byteLength;
derived_uint8.byteOffset;
derived_uint8.BYTES_PER_ELEMENT;
const v44 = new Uint8Array(ab, 7);
var derived_uint8_2 = v44;
derived_uint8_2.buffer;
derived_uint8_2.length;
derived_uint8_2.byteLength;
derived_uint8_2.byteOffset;
derived_uint8_2.BYTES_PER_ELEMENT;
const v56 = new Int16Array(ab);
var derived_int16 = v56;
derived_int16.buffer;
derived_int16.length;
derived_int16.byteLength;
derived_int16.byteOffset;
derived_int16.BYTES_PER_ELEMENT;
const v68 = new Int16Array(ab, 6);
var derived_int16_2 = v68;
derived_int16_2.buffer;
derived_int16_2.length;
derived_int16_2.byteLength;
derived_int16_2.byteOffset;
derived_int16_2.BYTES_PER_ELEMENT;
const v80 = new Uint32Array(ab);
var derived_uint32 = v80;
derived_uint32.buffer;
derived_uint32.length;
derived_uint32.byteLength;
derived_uint32.byteOffset;
derived_uint32.BYTES_PER_ELEMENT;
const v92 = new Uint32Array(ab, 4);
var derived_uint32_2 = v92;
derived_uint32_2.buffer;
derived_uint32_2.length;
derived_uint32_2.byteLength;
derived_uint32_2.byteOffset;
derived_uint32_2.BYTES_PER_ELEMENT;
const v105 = new Uint32Array(ab, 4, 1);
var derived_uint32_3 = v105;
derived_uint32_3.buffer;
derived_uint32_3.length;
derived_uint32_3.byteLength;
derived_uint32_3.byteOffset;
derived_uint32_3.BYTES_PER_ELEMENT;
const v119 = new Float64Array(ab, 0, 1);
var derived_float64 = v119;
derived_float64.buffer;
derived_float64.length;
derived_float64.byteLength;
derived_float64.byteOffset;
derived_float64.BYTES_PER_ELEMENT;
function abfunc3() {
    new Uint32Array(ab, 4, 3);
}
abfunc3();
function abfunc4() {
    new Uint32Array(ab, 16);
}
abfunc4();
function abfunc5() {
    new Uint32Array(ab, 5);
}
abfunc5();
const v144 = new ArrayBuffer(13);
var ab2 = v144;
function abfunc6() {
    new Uint32Array(ab2, 4);
}
abfunc6();
const v151 = new Uint8Array(31);
a = v151;
a.byteLength;
a.buffer.byteLength;
a.length;
a.buffer.byteLength;
a.length * a.BYTES_PER_ELEMENT;
a.buffer.byteLength;
const v164 = new Int16Array(5);
a = v164;
a.byteLength;
a.buffer.byteLength;
a.length * a.BYTES_PER_ELEMENT;
a.buffer.byteLength;
const v174 = new Float64Array(7);
a = v174;
a.byteLength;
a.buffer.byteLength;
a.length * a.BYTES_PER_ELEMENT;
a.buffer.byteLength;
const v184 = new Float64Array(7);
a = v184;
a.buffer;
const v188 = new Uint16Array(a.buffer);
v188.buffer;
a.buffer;
const v194 = new Float32Array(a.buffer, 4);
v194.buffer;
a.buffer;
const v201 = new Int8Array(a.buffer, 3, 51);
v201.buffer;
a.buffer;
const v205 = new Int32Array(2);
a = v205;
a.BYTES_PER_ELEMENT;
a.BYTES_PER_ELEMENT = 42;
const v210 = new Uint8Array(2);
a = v210;
a.BYTES_PER_ELEMENT;
const v214 = new Int16Array(2);
a = v214;
a.BYTES_PER_ELEMENT;
function get(a218, a219) {
    return a218[a219];
}
function set(a222, a223, a224) {
    a222[a223] = a224;
}
function temp() {
    const v227 = new Float64Array(2);
    var array = v227;
    for (let i230 = 0; i230 < 5; i230++) {
        set(array, 0, 2.5);
        array[0];
    }
    set(array, 0, 2.5);
    array[0];
    set(array, 1, 3.5);
    array[1];
    for (let i252 = 0; i252 < 5; i252++) {
        get(array, 0);
        array[1];
    }
    get(array, 0);
    get(array, 1);
}
const v270 = new Int32Array("2");
var array_with_length_from_non_number = v270;
array_with_length_from_non_number.length;
types = [Array,Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Uint8ClampedArray,Float32Array,Float64Array];
test_result_nan = [NaN,0,0,0,0,0,0,0,NaN,NaN];
test_result_low_int = [-1,-1,255,-1,65535,-1,4294967295,0,-1,-1];
test_result_low_double = [-1.25,-1,255,-1,65535,-1,4294967295,0,-1.25,-1.25];
test_result_middle = [253.75,-3,253,253,253,253,253,254,253.75,253.75];
test_result_high_int = [256,0,0,256,256,256,256,255,256,256];
test_result_high_double = [256.25,0,0,256,256,256,256,255,256.25,256.25];
const kElementCount = 40;
function test_load(a364, a365) {
    for (let i367 = 0; i367 < kElementCount; i367++) {
        a365 += a364[i367];
    }
    return a365;
}
function test_load_const_key(a374, a375) {
    a375 += a374[0];
    a375 += a374[1];
    a375 += a374[2];
    return a375;
}
function test_store(a380, a381) {
    for (let i383 = 0; i383 < kElementCount; i383++) {
        const v389 = i383 + 1;
        a380[i383] = v389;
        a381 += v389;
    }
    return a381;
}
function test_store_const_key(a391, a392) {
    a391[0] = 1;
    a392 += 1;
    a391[1] = 2;
    a392 += 2;
    a391[2] = 3;
    a392 += 3;
    return a392;
}
function zero() {
    return 0;
}
function test_store_middle_tagged(a399, a400) {
    a399[0] = 253.75;
    return a399[0];
}
function test_store_high_tagged(a404, a405) {
    a404[0] = 256.25;
    return a404[0];
}
function test_store_middle_double(a409, a410) {
    a409[0] = 253.75 + zero();
    return a409[0];
}
function test_store_high_double(a416, a417) {
    a416[0] = 256.25 + zero();
    return a416[0];
}
function test_store_high_double(a423, a424) {
    a423[0] = 256.25;
    return a423[0];
}
function test_store_low_int(a428, a429) {
    a428[0] = -1;
    return a428[0];
}
function test_store_low_tagged(a434, a435) {
    a434[0] = -1.25;
    return a434[0];
}
function test_store_low_double(a440, a441) {
    a440[0] = -1.25 + zero();
    return a440[0];
}
function test_store_high_int(a448, a449) {
    a448[0] = 256;
    return a448[0];
}
function test_store_nan(a453, a454) {
    a453[0] = NaN;
    return a453[0];
}
const kRuns = 10;
function run_test(a459, a460, a461) {
    for (let i463 = 0; i463 < 5; i463++) {
        a459(a460, 0);
    }
    var sum = 0;
    for (let i474 = 0; i474 < kRuns; i474++) {
        sum = a459(a460, sum);
    }
}
function run_bounds_test(a481, a482, a483) {
    a[kElementCount];
    a[kElementCount] = 456;
    a[kElementCount];
    a[kElementCount + 1];
    a[kElementCount + 1] = 456;
    a[kElementCount + 1];
}
for (let i501 = 0; i501 < types.length; i501++) {
    var type = types[i501];
    const v511 = new type(kElementCount);
    var a = v511;
    for (let i514 = 0; i514 < kElementCount; i514++) {
        a[i514] = i514;
    }
    run_test(test_load, a, 780 * kRuns);
    run_test(test_load_const_key, a, 3 * kRuns);
    run_test(test_store, a, 820 * kRuns);
    run_test(test_store_const_key, a, 6 * kRuns);
    run_test(test_store_low_int, a, test_result_low_int[i501]);
    run_test(test_store_low_double, a, test_result_low_double[i501]);
    run_test(test_store_low_tagged, a, test_result_low_double[i501]);
    run_test(test_store_high_int, a, test_result_high_int[i501]);
    run_test(test_store_nan, a, test_result_nan[i501]);
    run_test(test_store_middle_double, a, test_result_middle[i501]);
    run_test(test_store_middle_tagged, a, test_result_middle[i501]);
    run_test(test_store_high_double, a, test_result_high_double[i501]);
    run_test(test_store_high_tagged, a, test_result_high_double[i501]);
    if (i501 != 0) {
        a.length;
        a.length = 2;
        a.length;
        delete a.length;
        run_bounds_test(a);
        run_bounds_test(a);
        run_bounds_test(a);
        run_bounds_test(a);
    }
    function array_load_set_smi_check(a566) {
        a566[0] = 1;
        a566[0] = 1;
        return 1;
    }
    array_load_set_smi_check(a);
    array_load_set_smi_check(0);
    function array_load_set_smi_check2(a572) {
        a572[0] = 1;
        a572[0] = 1;
        return 1;
    }
    array_load_set_smi_check2(a);
    array_load_set_smi_check2(a);
    array_load_set_smi_check2(0);
}
function store_float32_undefined(a579) {
    a579[0] = undefined;
}
const v582 = new Float32Array(1);
var float32_array = v582;
store_float32_undefined(float32_array);
isNaN(float32_array[0]);
store_float32_undefined(float32_array);
isNaN(float32_array[0]);
store_float32_undefined(float32_array);
isNaN(float32_array[0]);
function store_float64_undefined(a595) {
    a595[0] = undefined;
}
const v598 = new Float64Array(1);
var float64_array = v598;
store_float64_undefined(float64_array);
isNaN(float64_array[0]);
store_float64_undefined(float64_array);
isNaN(float64_array[0]);
store_float64_undefined(float64_array);
isNaN(float64_array[0]);
const v610 = new ArrayBuffer(0);
ab = v610;
ab.byteLength;
const v613 = new Int8Array(ab);
a = v613;
a.byteLength;
a.length;
a[0] = 1;
a[0];
const v622 = new ArrayBuffer(16);
ab = v622;
const v625 = new Float32Array(ab, 4, 0);
a = v625;
a.byteLength;
a.length;
a[0] = 1;
a[0];
const v634 = new Uint16Array(0);
a = v634;
a.byteLength;
a.length;
a[0] = 1;
a[0];
const v643 = new Uint32Array([]);
a = v643;
a.length;
a.byteLength;
a.buffer.byteLength;
a.BYTES_PER_ELEMENT;
a.buffer;
const v658 = new Uint16Array([1,2,3]);
a = v658;
a.length;
a.byteLength;
a.buffer.byteLength;
a.BYTES_PER_ELEMENT;
a[0];
a[2];
a.buffer;
const v673 = new Uint32Array(a);
a = v673;
a.length;
a.byteLength;
a.buffer.byteLength;
a.BYTES_PER_ELEMENT;
a[0];
a[2];
a.buffer;
const v695 = new Uint16Array([1,2,3,4,5,6]);
a = v695;
aa = a.subarray(3);
aa.length;
aa.byteLength;
aa.BYTES_PER_ELEMENT;
a.buffer;
aa.buffer;
aa = a.subarray(3, 5);
aa.length;
aa.byteLength;
aa.BYTES_PER_ELEMENT;
a.buffer;
aa.buffer;
aa = a.subarray(4, 8);
aa.length;
aa.byteLength;
aa.BYTES_PER_ELEMENT;
a.buffer;
aa.buffer;
aa = a.subarray(9);
aa.length;
aa.byteLength;
aa.BYTES_PER_ELEMENT;
a.buffer;
aa.buffer;
aa = a.subarray(-4);
aa.length;
aa.byteLength;
aa.BYTES_PER_ELEMENT;
a.buffer;
aa.buffer;
aa = a.subarray(-3, -1);
aa.length;
aa.byteLength;
aa.BYTES_PER_ELEMENT;
a.buffer;
aa.buffer;
aa = a.subarray(3, 2);
aa.length;
aa.byteLength;
aa.BYTES_PER_ELEMENT;
a.buffer;
aa.buffer;
aa = a.subarray(-3, -4);
aa.length;
aa.byteLength;
aa.BYTES_PER_ELEMENT;
a.buffer;
aa.buffer;
aa = a.subarray(0, -8);
aa.length;
aa.byteLength;
aa.BYTES_PER_ELEMENT;
a.buffer;
aa.buffer;
function f800() {
    const v801 = {};
    a.subarray.call(v801, 0);
}
f800();
function f806() {
    const v807 = [];
    a.subarray.call(v807, 0);
}
f806();
function f812() {
    ArrayBuffer(100);
}
f812();
function f817() {
    Int8Array(b, 5, 77);
}
f817();
function f823() {
    ArrayBuffer.call(null, 10);
}
f823();
function f828() {
    Uint16Array.call(null, b, 2, 4);
}
f828();
function f835() {
    ArrayBuffer.apply(null, [1000]);
}
f835();
function f841() {
    Float32Array.apply(null, [b,128,1]);
}
f841();
const v850 = new ArrayBuffer(4);
var b = v850;
function assertArrayPrefix(a853, a854) {
    for (let i856 = 0; i856 < a853.length; ++i856) {
        a853[i856];
        a854[i856];
    }
}
const v872 = new Int16Array([1,2,3,4,0,-1]);
var a11 = v872;
const v875 = new Uint16Array(15);
var a12 = v875;
a12.set(a11, 3);
[0,0,0,1,2,3,4,0,65535,0,0];
function f891() {
    a11.set(a12);
}
f891();
const v899 = -1;
function f900() {
    return 3;
}
var a21 = [1,,10,NaN,0,v899,{ valueOf: f900 }];
const v906 = new Int32Array(12);
var a22 = v906;
a22.set(a21, 2);
[0,0,1,0,10,0,0,-1,3,0];
const v933 = new Float32Array([2,4,6,8,11,NaN,1 / 0,-3]);
var a31 = v933;
var a32 = a31.subarray(2, 6);
a31.set(a32, 4);
[2,4,6,8,6,8,11,NaN];
[6,8,6,8];
const v959 = new Uint8ClampedArray([3,2,5,6]);
var a4 = v959;
a4.set(a4);
[3,2,5,6];
const v968 = new ArrayBuffer(4);
var b = v968;
const v970 = new Int16Array(b);
var a5 = v970;
const v972 = new Int8Array(b);
var a50 = v972;
const v976 = new Int8Array(b, 0, 2);
var a51 = v976;
const v980 = new Int8Array(b, 1, 2);
var a52 = v980;
const v984 = new Int8Array(b, 2, 2);
var a53 = v984;
a5.set([20560,2570]);
[80,80,10,10];
[80,80];
[80,10];
[10,10];
a50.set([80,80,10,10]);
a51.set(a5);
[80,10,10,10];
a50.set([80,80,10,10]);
a52.set(a5);
[80,80,10,10];
a50.set([80,80,10,10]);
a53.set(a5);
[80,80,80,10];
a50.set([80,81,10,11]);
a5.set(a51);
[80,81];
a50.set([80,81,10,11]);
a5.set(a52);
[81,10];
a50.set([80,81,10,11]);
a5.set(a53);
[10,11];
const v1073 = new Float32Array([1.2,12.3]);
var a61 = v1073;
const v1076 = new Int32Array(2);
var a62 = v1076;
a62.set(a61);
[1,12];
a61.set(a62);
[1,12];
function f1086() {
    a.set(0);
}
f1086();
[1,2,3,4,5,6];
a.set({});
[1,2,3,4,5,6];
const v1113 = new Int8Array([1,2,3,4,5,6]);
var a0 = v1113;
var b0 = a0.buffer;
var b1 = b0.slice(0);
b0.byteLength;
b1.byteLength;
[1,2,3,4,5,6];
new Int8Array(b1);
var b2 = b0.slice(3);
b0.byteLength - 3;
b2.byteLength;
[4,5,6];
new Int8Array(b2);
var b3 = b0.slice(2, 4);
b3.byteLength;
[3,4];
new Int8Array(b3);
function goo(a1153, a1154) {
    return a1153[a1154];
}
function boo(a1157, a1158, a1159) {
    a1157[a1158] = a1159;
    return a1159;
}
function do_tagged_index_external_array_test(a1161) {
    const v1169 = new a1161([1,2,3,4,5,6]);
    var t_array = v1169;
    goo(t_array, 0);
    goo(t_array, 0);
    boo(t_array, 0, 13);
    goo(t_array, 0);
    boo(t_array, 0, 15);
    goo(t_array, 0);
}
do_tagged_index_external_array_test(Int8Array);
do_tagged_index_external_array_test(Uint8Array);
do_tagged_index_external_array_test(Int16Array);
do_tagged_index_external_array_test(Uint16Array);
do_tagged_index_external_array_test(Int32Array);
do_tagged_index_external_array_test(Uint32Array);
do_tagged_index_external_array_test(Float32Array);
do_tagged_index_external_array_test(Float64Array);
const v1203 = new Array(1, 2, 3, 4, 5, 6);
var built_in_array = v1203;
goo(built_in_array, 0);
goo(built_in_array, 0);
boo(built_in_array, 0, 11);
goo(built_in_array, 0);
const v1223 = new Array(1.5, 2, 3, 4, 5, 6);
goo(built_in_array = v1223, 0);
goo(built_in_array, 0);
boo(built_in_array, 0, 2.5);
goo(built_in_array, 0);
function checkRange() {
    var e32 = Math.pow(2, 32);
    var e31 = Math.pow(2, 31);
    var e16 = Math.pow(2, 16);
    var e15 = Math.pow(2, 15);
    var e8 = Math.pow(2, 8);
    var e7 = Math.pow(2, 7);
    const v1263 = new Uint32Array(2);
    var a7 = v1263;
    const v1266 = new Int32Array(2);
    var a71 = v1266;
    const v1269 = new Uint16Array(2);
    var a72 = v1269;
    const v1272 = new Int16Array(2);
    var a73 = v1272;
    const v1275 = new Uint8Array(2);
    var a74 = v1275;
    const v1278 = new Int8Array(2);
    var a75 = v1278;
    for (i = 1; i <= Math.pow(2, 33); i *= 2) {
        var j = i - 1;
        a7[0] = i;
        a71[0] = i;
        a72[0] = i;
        a73[0] = i;
        a74[0] = i;
        a75[0] = i;
        a7[1] = j;
        a71[1] = j;
        a72[1] = j;
        a73[1] = j;
        a74[1] = j;
        a75[1] = j;
        if (i < e32) {
            a7[0];
        } else {
            a7[0];
        }
        if (j < e32) {
            a7[1];
        } else {
            a7[1];
            e32 - 1;
        }
        if (i < e31) {
            a71[0];
        } else {
            a71[0];
            i < e32 ? -e31 : 0;
        }
        if (j < e31) {
            a71[1];
        } else {
            a71[1];
            -1;
        }
        if (i < e16) {
            a72[0];
        } else {
            a72[0];
        }
        if (j < e16) {
            a72[1];
        } else {
            a72[1];
            e16 - 1;
        }
        if (i < e15) {
            a73[0];
        } else {
            a73[0];
            i < e16 ? -e15 : 0;
        }
        if (j < e15) {
            a73[1];
        } else {
            a73[1];
            -1;
        }
        if (i < e8) {
            a74[0];
        } else {
            a74[0];
        }
        if (j < e8) {
            a74[1];
        } else {
            a74[1];
            e8 - 1;
        }
        if (i < e7) {
            a75[0];
        } else {
            a75[0];
            i < e8 ? -e7 : 0;
        }
        if (j < e7) {
            a75[1];
        } else {
            a75[1];
            -1;
        }
    }
}
checkRange();

FuzzIL program written to corpus/external-array.fzil
