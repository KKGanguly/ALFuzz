v0 <- CreateNamedVariable 'Object', 'none'
v1 <- Construct v0, []
v2 <- CreateNamedVariable 'document', 'var', v1
v3 <- BeginPlainFunction -> v4
    BeginObjectLiteral
    v5 <- EndObjectLiteral
    BeginObjectLiteral
        ObjectLiteralAddProperty `style`, v5
    v6 <- EndObjectLiteral
    Return v6
EndPlainFunction
SetProperty v2, 'getElementById', v3
v7 <- BeginPlainFunction -> v8, v9, v10, v11
    v12 <- LoadString ''
    v13 <- BinaryOperation v9, '+', v8
    v14 <- CallMethod v2, 'getElementById', [v13]
    v15 <- GetProperty v14, 'style'
    SetProperty v15, 'display', v12
    v16 <- LoadString ''
    v17 <- LoadString ''
    v18 <- BinaryOperation v9, '+', v17
    v19 <- BinaryOperation v18, '+', v8
    v20 <- CallMethod v2, 'getElementById', [v19]
    v21 <- GetProperty v20, 'style'
    SetProperty v21, 'backgroundColor', v16
    v22 <- LoadString ''
    v23 <- LoadString ''
    v24 <- BinaryOperation v9, '+', v23
    v25 <- BinaryOperation v24, '+', v8
    v26 <- CallMethod v2, 'getElementById', [v25]
    v27 <- GetProperty v26, 'style'
    SetProperty v27, 'color', v22
    v28 <- LoadString ''
    v29 <- LoadString ''
    v30 <- BinaryOperation v9, '+', v29
    v31 <- BinaryOperation v30, '+', v8
    v32 <- CallMethod v2, 'getElementById', [v31]
    v33 <- GetProperty v32, 'style'
    SetProperty v33, 'borderBottomColor', v28
    BeginForLoopInitializer
    BeginForLoopCondition -> v34
        v35 <- Compare v34, '<=', v10
    BeginForLoopAfterthought v35 -> v36
        v37 <- UnaryOperation '++', v36
    BeginForLoopBody -> v38
        v39 <- Compare v38, '!=', v8
        BeginIf v39
            v40 <- LoadString ''
            v41 <- BinaryOperation v9, '+', v38
            v42 <- CallMethod v2, 'getElementById', [v41]
            v43 <- GetProperty v42, 'style'
            SetProperty v43, 'display', v40
            v44 <- LoadString ''
            v45 <- LoadString ''
            v46 <- BinaryOperation v9, '+', v45
            v47 <- BinaryOperation v46, '+', v38
            v48 <- CallMethod v2, 'getElementById', [v47]
            v49 <- GetProperty v48, 'style'
            SetProperty v49, 'backgroundColor', v44
            v50 <- LoadString ''
            v51 <- LoadString ''
            v52 <- BinaryOperation v9, '+', v51
            v53 <- BinaryOperation v52, '+', v38
            v54 <- CallMethod v2, 'getElementById', [v53]
            v55 <- GetProperty v54, 'style'
            SetProperty v55, 'color', v50
            v56 <- LoadString ''
            v57 <- LoadString ''
            v58 <- BinaryOperation v9, '+', v57
            v59 <- BinaryOperation v58, '+', v38
            v60 <- CallMethod v2, 'getElementById', [v59]
            v61 <- GetProperty v60, 'style'
            SetProperty v61, 'borderBottomColor', v56
        EndIf
    EndForLoop
EndPlainFunction
v62 <- LoadInteger '1'
v63 <- LoadString 'xxx'
v64 <- LoadInteger '10000'
v65 <- LoadInteger '1'
v66 <- CallFunction v7, [v62, v63, v64, v65]


const v1 = new Object();
var document = v1;
function f3(a4) {
    const v5 = {};
    return { style: v5 };
}
document.getElementById = f3;
function x(a8, a9, a10, a11) {
    const t8 = document.getElementById(a9 + a8).style;
    t8.display = "";
    const t10 = document.getElementById((a9 + "") + a8).style;
    t10.backgroundColor = "";
    const t12 = document.getElementById((a9 + "") + a8).style;
    t12.color = "";
    const t14 = document.getElementById((a9 + "") + a8).style;
    t14.borderBottomColor = "";
    for (let i34 = a11; i34 <= a10; ++i34) {
        if (i34 != a8) {
            const t18 = document.getElementById(a9 + i34).style;
            t18.display = "";
            const t20 = document.getElementById((a9 + "") + i34).style;
            t20.backgroundColor = "";
            const t22 = document.getElementById((a9 + "") + i34).style;
            t22.color = "";
            const t24 = document.getElementById((a9 + "") + i34).style;
            t24.borderBottomColor = "";
        }
    }
}
x(1, "xxx", 10000, 1);

FuzzIL program written to corpus/regress-3252443.fzil
