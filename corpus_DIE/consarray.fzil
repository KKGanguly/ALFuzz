v0 <- CreateNamedVariable 'Array', 'none'
v1 <- Construct v0, []
v2 <- CreateNamedVariable 'arr1', 'var', v1
v3 <- CallMethod v2, 'atEnd', []
v4 <- CreateArray []
v5 <- CallMethod v2, 'concat', [v4]
v6 <- CallMethod v2, 'atEnd', []
v7 <- LoadInteger '1'
v8 <- CreateArray [v7]
v9 <- CallMethod v2, 'concat', [v8]
v10 <- CallMethod v2, 'atEnd', []
v11 <- LoadInteger '1'
v12 <- CallMethod v2, 'next', []
v13 <- CallMethod v2, 'atEnd', []
v14 <- LoadInteger '2'
v15 <- LoadInteger '3'
v16 <- LoadInteger '4'
v17 <- CreateArray [v14, v15, v16]
v18 <- CallMethod v2, 'concat', [v17]
v19 <- LoadInteger '5'
v20 <- CreateArray [v19]
v21 <- CallMethod v2, 'concat', [v20]
v22 <- CreateArray []
v23 <- CallMethod v2, 'concat', [v22]
v24 <- LoadInteger '6'
v25 <- LoadInteger '7'
v26 <- CreateArray [v24, v25]
v27 <- CallMethod v2, 'concat', [v26]
v28 <- CallMethod v2, 'atEnd', []
v29 <- LoadInteger '2'
v30 <- CallMethod v2, 'next', []
v31 <- CallMethod v2, 'atEnd', []
v32 <- LoadInteger '3'
v33 <- CallMethod v2, 'next', []
v34 <- CallMethod v2, 'atEnd', []
v35 <- LoadInteger '4'
v36 <- CallMethod v2, 'next', []
v37 <- CallMethod v2, 'atEnd', []
v38 <- LoadInteger '5'
v39 <- CallMethod v2, 'next', []
v40 <- CallMethod v2, 'atEnd', []
v41 <- LoadInteger '6'
v42 <- CallMethod v2, 'next', []
v43 <- CallMethod v2, 'atEnd', []
v44 <- LoadInteger '7'
v45 <- CallMethod v2, 'next', []
v46 <- CallMethod v2, 'atEnd', []


const v1 = new Array();
var arr1 = v1;
arr1.atEnd();
arr1.concat([]);
arr1.atEnd();
arr1.concat([1]);
arr1.atEnd();
arr1.next();
arr1.atEnd();
arr1.concat([2,3,4]);
arr1.concat([5]);
arr1.concat([]);
arr1.concat([6,7]);
arr1.atEnd();
arr1.next();
arr1.atEnd();
arr1.next();
arr1.atEnd();
arr1.next();
arr1.atEnd();
arr1.next();
arr1.atEnd();
arr1.next();
arr1.atEnd();
arr1.next();
arr1.atEnd();

FuzzIL program written to corpus/consarray.fzil
