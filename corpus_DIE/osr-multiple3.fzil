v0 <- BeginPlainFunction -> v1, v2, v3
    v4 <- LoadInteger '0'
    v5 <- CreateNamedVariable 'x', 'var', v4
    v6 <- LoadInteger '0'
    v7 <- CreateNamedVariable 'y', 'var', v6
    v8 <- LoadInteger '0'
    v9 <- CreateNamedVariable 'z', 'var', v8
    BeginForLoopInitializer
        v10 <- LoadInteger '0'
    BeginForLoopCondition -> v11
        v12 <- LoadInteger '2'
        v13 <- Compare v11, '<', v12
    BeginForLoopAfterthought v13 -> v14
        v15 <- UnaryOperation v14, '++'
    BeginForLoopBody -> v16
        BeginForLoopInitializer
            v17 <- LoadInteger '0'
        BeginForLoopCondition -> v18
            v19 <- LoadInteger '2'
            v20 <- Compare v18, '<', v19
        BeginForLoopAfterthought v20 -> v21
            v22 <- UnaryOperation v21, '++'
        BeginForLoopBody -> v23
            BeginWhileLoopHeader
                v24 <- LoadInteger '0'
                v25 <- Compare v1, '>', v24
            BeginWhileLoopBody v25
                v26 <- LoadInteger '19'
                Update v5, '+', v26
                v27 <- UnaryOperation v1, '--'
            EndWhileLoop
            BeginWhileLoopHeader
                v28 <- LoadInteger '0'
                v29 <- Compare v2, '>', v28
            BeginWhileLoopBody v29
                v30 <- LoadInteger '23'
                Update v7, '+', v30
                v31 <- UnaryOperation v2, '--'
            EndWhileLoop
            BeginWhileLoopHeader
                v32 <- LoadInteger '0'
                v33 <- Compare v3, '>', v32
            BeginWhileLoopBody v33
                v34 <- LoadInteger '29'
                Update v9, '+', v34
                v35 <- UnaryOperation v3, '--'
            EndWhileLoop
        EndForLoop
    EndForLoop
    v36 <- BinaryOperation v5, '+', v7
    v37 <- BinaryOperation v36, '+', v9
    Return v37
EndPlainFunction
v38 <- BeginPlainFunction -> v39, v40, v41
    v42 <- LoadInteger '0'
    v43 <- CreateNamedVariable 'x', 'var', v42
    v44 <- LoadInteger '0'
    v45 <- CreateNamedVariable 'y', 'var', v44
    v46 <- LoadInteger '0'
    v47 <- CreateNamedVariable 'z', 'var', v46
    BeginForLoopInitializer
        v48 <- LoadInteger '0'
    BeginForLoopCondition -> v49
        v50 <- LoadInteger '2'
        v51 <- Compare v49, '<', v50
    BeginForLoopAfterthought v51 -> v52
        v53 <- UnaryOperation v52, '++'
    BeginForLoopBody -> v54
        BeginForLoopInitializer
            v55 <- LoadInteger '0'
        BeginForLoopCondition -> v56
            v57 <- LoadInteger '2'
            v58 <- Compare v56, '<', v57
        BeginForLoopAfterthought v58 -> v59
            v60 <- UnaryOperation v59, '++'
        BeginForLoopBody -> v61
            BeginWhileLoopHeader
                v62 <- LoadInteger '0'
                v63 <- Compare v39, '>', v62
            BeginWhileLoopBody v63
                v64 <- LoadInteger '19'
                Update v43, '+', v64
                v65 <- UnaryOperation v39, '--'
            EndWhileLoop
            BeginWhileLoopHeader
                v66 <- LoadInteger '0'
                v67 <- Compare v40, '>', v66
            BeginWhileLoopBody v67
                v68 <- LoadInteger '23'
                Update v45, '+', v68
                v69 <- UnaryOperation v40, '--'
            EndWhileLoop
            BeginWhileLoopHeader
                v70 <- LoadInteger '0'
                v71 <- Compare v41, '>', v70
            BeginWhileLoopBody v71
                v72 <- LoadInteger '29'
                Update v47, '+', v72
                v73 <- UnaryOperation v41, '--'
            EndWhileLoop
        EndForLoop
    EndForLoop
    v74 <- BinaryOperation v43, '+', v45
    v75 <- BinaryOperation v74, '+', v47
    Return v75
EndPlainFunction
v76 <- BeginPlainFunction -> v77, v78, v79
    v80 <- LoadInteger '0'
    v81 <- CreateNamedVariable 'x', 'var', v80
    v82 <- LoadInteger '0'
    v83 <- CreateNamedVariable 'y', 'var', v82
    v84 <- LoadInteger '0'
    v85 <- CreateNamedVariable 'z', 'var', v84
    BeginForLoopInitializer
        v86 <- LoadInteger '0'
    BeginForLoopCondition -> v87
        v88 <- LoadInteger '2'
        v89 <- Compare v87, '<', v88
    BeginForLoopAfterthought v89 -> v90
        v91 <- UnaryOperation v90, '++'
    BeginForLoopBody -> v92
        BeginForLoopInitializer
            v93 <- LoadInteger '0'
        BeginForLoopCondition -> v94
            v95 <- LoadInteger '2'
            v96 <- Compare v94, '<', v95
        BeginForLoopAfterthought v96 -> v97
            v98 <- UnaryOperation v97, '++'
        BeginForLoopBody -> v99
            BeginWhileLoopHeader
                v100 <- LoadInteger '0'
                v101 <- Compare v77, '>', v100
            BeginWhileLoopBody v101
                v102 <- LoadInteger '19'
                Update v81, '+', v102
                v103 <- UnaryOperation v77, '--'
            EndWhileLoop
            BeginWhileLoopHeader
                v104 <- LoadInteger '0'
                v105 <- Compare v78, '>', v104
            BeginWhileLoopBody v105
                v106 <- LoadInteger '23'
                Update v83, '+', v106
                v107 <- UnaryOperation v78, '--'
            EndWhileLoop
            BeginWhileLoopHeader
                v108 <- LoadInteger '0'
                v109 <- Compare v79, '>', v108
            BeginWhileLoopBody v109
                v110 <- LoadInteger '29'
                Update v85, '+', v110
                v111 <- UnaryOperation v79, '--'
            EndWhileLoop
        EndForLoop
    EndForLoop
    v112 <- BinaryOperation v81, '+', v83
    v113 <- BinaryOperation v112, '+', v85
    Return v113
EndPlainFunction
v114 <- BeginPlainFunction -> v115, v116, v117, v118
    v119 <- LoadInteger '19'
    v120 <- BinaryOperation v116, '*', v119
    v121 <- LoadInteger '23'
    v122 <- BinaryOperation v117, '*', v121
    v123 <- BinaryOperation v120, '+', v122
    v124 <- LoadInteger '29'
    v125 <- BinaryOperation v118, '*', v124
    v126 <- BinaryOperation v123, '+', v125
    v127 <- CallFunction v115, [v116, v117, v118]
EndPlainFunction
v128 <- LoadInteger '50000'
v129 <- LoadInteger '5'
v130 <- LoadInteger '6'
v131 <- CallFunction v114, [v0, v128, v129, v130]
v132 <- LoadInteger '4'
v133 <- LoadInteger '50000'
v134 <- LoadInteger '6'
v135 <- CallFunction v114, [v38, v132, v133, v134]
v136 <- LoadInteger '11'
v137 <- LoadInteger '12'
v138 <- LoadInteger '50000'
v139 <- CallFunction v114, [v76, v136, v137, v138]


function f1(a1, a2, a3) {
    var x = 0;
    var y = 0;
    var z = 0;
    for (let i11 = 0; i11 < 2; i11++) {
        for (let i18 = 0; i18 < 2; i18++) {
            while (a1 > 0) {
                x += 19;
                a1--;
            }
            while (a2 > 0) {
                y += 23;
                a2--;
            }
            while (a3 > 0) {
                z += 29;
                a3--;
            }
        }
    }
    return (x + y) + z;
}
function f2(a39, a40, a41) {
    var x = 0;
    var y = 0;
    var z = 0;
    for (let i49 = 0; i49 < 2; i49++) {
        for (let i56 = 0; i56 < 2; i56++) {
            while (a39 > 0) {
                x += 19;
                a39--;
            }
            while (a40 > 0) {
                y += 23;
                a40--;
            }
            while (a41 > 0) {
                z += 29;
                a41--;
            }
        }
    }
    return (x + y) + z;
}
function f3(a77, a78, a79) {
    var x = 0;
    var y = 0;
    var z = 0;
    for (let i87 = 0; i87 < 2; i87++) {
        for (let i94 = 0; i94 < 2; i94++) {
            while (a77 > 0) {
                x += 19;
                a77--;
            }
            while (a78 > 0) {
                y += 23;
                a78--;
            }
            while (a79 > 0) {
                z += 29;
                a79--;
            }
        }
    }
    return (x + y) + z;
}
function check(a115, a116, a117, a118) {
    ((a116 * 19) + (a117 * 23)) + (a118 * 29);
    a115(a116, a117, a118);
}
check(f1, 50000, 5, 6);
check(f2, 4, 50000, 6);
check(f3, 11, 12, 50000);

FuzzIL program written to corpus/osr-multiple3.fzil
