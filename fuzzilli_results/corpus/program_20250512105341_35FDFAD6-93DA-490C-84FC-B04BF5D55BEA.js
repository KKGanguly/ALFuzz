const v1 = [-1.0,5.005967506352411,2.0,-3.0];
const v2 = [1.4680630342120967e+308,0.12125401713985995,1000000.0,890.5711738748998,-5.0,5.0,-2.220446049250313e-16];
v2[5];
const v4 = [2.2250738585072014e-308,-1000000000000.0,0.46424515369686326,4.191890394613459,-2.2250738585072014e-308];
v4[4];
function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    a9[3] = a9;
    a10 >> a10;
    try { a11.slice(a11); } catch (e) {}
    a10 % a10;
    try { a11.findLast(-1000000000.0); } catch (e) {}
}
new F6(F6, v1);
new F6(v2, v4, -1000000000.0, v1);
[-12,128,9007199254740992,1073741823,127,268435456,0,9223372036854775807,-11];
for (let i21 = 0;
    (() => {
        const v22 = ("invalid").length;
        v22 - v22;
        return i21 < v22;
    })();
    i21 != i21, i21++) {
    i21++;
    const v31 = Error.captureStackTrace;
    try { new v31(); } catch (e) {}
}
