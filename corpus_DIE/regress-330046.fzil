v0 <- LoadInteger '10'
BeginObjectLiteral
    ObjectLiteralAddProperty `a`, v0
v1 <- EndObjectLiteral
v2 <- CreateNamedVariable 'o1', 'var', v1
BeginObjectLiteral
v3 <- EndObjectLiteral
v4 <- CreateNamedVariable 'o2', 'var', v3
SetProperty v4, '__proto__', v2
BeginObjectLiteral
v5 <- EndObjectLiteral
v6 <- CreateNamedVariable 'o3', 'var', v5
SetProperty v6, '__proto__', v4
v7 <- BeginPlainFunction -> v8, v9, v10
    v11 <- GetProperty v9, 'a'
    v12 <- CreateNamedVariable 'sum', 'var', v11
    BeginForLoopInitializer
        v13 <- LoadInteger '0'
    BeginForLoopCondition -> v14
        v15 <- Compare v14, '<', v8
    BeginForLoopAfterthought v15 -> v16
        v17 <- UnaryOperation v16, '++'
    BeginForLoopBody -> v18
        v19 <- LoadInteger '1'
        v20 <- BinaryOperation v19, '/', v18
        Reassign v12, v20
    EndForLoop
    Return v12
EndPlainFunction
v21 <- LoadInteger '10'
v22 <- CallFunction v7, [v21, v6]
v23 <- LoadInteger '20'
v24 <- CallFunction v7, [v23, v6]
v25 <- LoadInteger '30'
v26 <- CallFunction v7, [v25, v6]
v27 <- LoadInteger '100000'
v28 <- CallFunction v7, [v27, v6]
v29 <- LoadInteger '5'
SetProperty v4, 'a', v29
v30 <- LoadInteger '10'
v31 <- CallFunction v7, [v30, v6]


var o1 = { a: 10 };
var o2 = {};
o2.__proto__ = o1;
var o3 = {};
o3.__proto__ = o2;
function f(a8, a9, a10) {
    var sum = a9.a;
    for (let i14 = 0; i14 < a8; i14++) {
        sum = 1 / i14;
    }
    return sum;
}
f(10, o3);
f(20, o3);
f(30, o3);
f(100000, o3);
o2.a = 5;
f(10, o3);

FuzzIL program written to corpus/regress-330046.fzil
