v0 <- BeginPlainFunction -> 
    v1 <- LoadInteger '0'
    v2 <- CreateNamedVariable 'result', 'var', v1
    v3 <- BeginPlainFunction -> v4, v5
        BeginIf v5
            v6 <- LoadInteger '1'
            SetElement v4, '0', v6
        EndIf
    EndPlainFunction
    v7 <- CreateNamedVariable 'proto_set_func', 'var', v3
    v8 <- BeginPlainFunction -> v9
        v10 <- LoadUndefined
        v11 <- CreateArray [v10, v10]
        v12 <- CreateNamedVariable 'b', 'var', v11
        v13 <- LoadInteger '0'
        SetElement v12, '1', v13
        v14 <- LoadInteger '2'
        SetElement v12, '2', v14
        v15 <- BeginPlainFunction -> v16, v17, v18
            v19 <- LoadInteger '1'
            v20 <- Compare v17, '==', v19
            BeginIf v20
                v21 <- GetProperty v12, '__proto__'
                v22 <- CallFunction v7, [v21, v9]
            EndIf
            Update v2, '+', v16
        EndPlainFunction
        v23 <- CreateNamedVariable 'sum', 'var', v15
        v24 <- CallMethod v12, 'forEach', [v23]
    EndPlainFunction
    v25 <- CreateNamedVariable 'f', 'var', v8
    v26 <- CallFunction v25, []
    v27 <- CallFunction v25, []
    v28 <- CallFunction v25, []
    v29 <- LoadBoolean 'true'
    v30 <- CallFunction v25, [v29]
    v31 <- CallFunction v25, []
    v32 <- LoadInteger '11'
EndPlainFunction
v33 <- CallFunction v0, []


function f0() {
    var result = 0;
    function f3(a4, a5) {
        if (a5) {
            a4[0] = 1;
        }
    }
    var proto_set_func = f3;
    function f8(a9) {
        var b = [,,];
        b[1] = 0;
        b[2] = 2;
        function f15(a16, a17, a18) {
            if (a17 == 1) {
                proto_set_func(b.__proto__, a9);
            }
            result += a16;
        }
        var sum = f15;
        b.forEach(sum);
    }
    var f = f8;
    f();
    f();
    f();
    f(true);
    f();
}
f0();

FuzzIL program written to corpus/optimized-foreach-holey-3.fzil
