v0 <- BeginPlainFunction -> v1, v2, v3
    SetElement v1, '0', v3
    SetComputedProperty v1, v2, v3
EndPlainFunction
v4 <- BeginPlainFunction -> v5, v6, v7
    SetElement v5, '0', v7
    SetComputedProperty v5, v6, v7
EndPlainFunction
v8 <- BeginPlainFunction -> v9, v10, v11
    SetElement v9, '0', v11
    SetComputedProperty v9, v10, v11
EndPlainFunction
v12 <- BeginPlainFunction -> v13, v14, v15
    SetElement v13, '0', v15
    SetComputedProperty v13, v14, v15
EndPlainFunction
v16 <- BeginPlainFunction -> v17, v18, v19
    SetElement v17, '0', v19
    SetComputedProperty v17, v18, v19
EndPlainFunction
v20 <- CreateNamedVariable 'Uint8ClampedArray', 'none'
v21 <- LoadInteger '2'
v22 <- Construct v20, [v21]
v23 <- CreateNamedVariable 'A1_pixel', 'var', v22
v24 <- LoadInteger '2'
v25 <- Construct v20, [v24]
v26 <- CreateNamedVariable 'A2_pixel', 'var', v25
v27 <- LoadInteger '2'
v28 <- Construct v20, [v27]
v29 <- CreateNamedVariable 'A3_pixel', 'var', v28
v30 <- CreateNamedVariable 'Uint16Array', 'none'
v31 <- LoadInteger '2'
v32 <- Construct v30, [v31]
v33 <- CreateNamedVariable 'A1_uint16', 'var', v32
v34 <- LoadInteger '2'
v35 <- Construct v30, [v34]
v36 <- CreateNamedVariable 'A2_uint16', 'var', v35
v37 <- LoadInteger '2'
v38 <- Construct v30, [v37]
v39 <- CreateNamedVariable 'A3_uint16', 'var', v38
v40 <- CreateNamedVariable 'Uint32Array', 'none'
v41 <- LoadInteger '2'
v42 <- Construct v40, [v41]
v43 <- CreateNamedVariable 'A1_uint32', 'var', v42
v44 <- LoadInteger '2'
v45 <- Construct v40, [v44]
v46 <- CreateNamedVariable 'A2_uint32', 'var', v45
v47 <- LoadInteger '2'
v48 <- Construct v40, [v47]
v49 <- CreateNamedVariable 'A3_uint32', 'var', v48
v50 <- CreateNamedVariable 'Float32Array', 'none'
v51 <- LoadInteger '2'
v52 <- Construct v50, [v51]
v53 <- CreateNamedVariable 'A1_float', 'var', v52
v54 <- LoadInteger '2'
v55 <- Construct v50, [v54]
v56 <- CreateNamedVariable 'A2_float', 'var', v55
v57 <- LoadInteger '2'
v58 <- Construct v50, [v57]
v59 <- CreateNamedVariable 'A3_float', 'var', v58
v60 <- CreateNamedVariable 'Float64Array', 'none'
v61 <- LoadInteger '2'
v62 <- Construct v60, [v61]
v63 <- CreateNamedVariable 'A1_double', 'var', v62
v64 <- LoadInteger '2'
v65 <- Construct v60, [v64]
v66 <- CreateNamedVariable 'A2_double', 'var', v65
v67 <- LoadInteger '2'
v68 <- Construct v60, [v67]
v69 <- CreateNamedVariable 'A3_double', 'var', v68
v70 <- LoadInteger '1'
v71 <- LoadInteger '34'
v72 <- CallFunction v0, [v23, v70, v71]
v73 <- LoadInteger '1'
v74 <- LoadInteger '34'
v75 <- CallFunction v0, [v26, v73, v74]
v76 <- LoadInteger '1'
v77 <- LoadInteger '34'
v78 <- CallFunction v0, [v29, v76, v77]
v79 <- LoadInteger '1'
v80 <- LoadFloat '3.4'
v81 <- CallFunction v4, [v33, v79, v80]
v82 <- LoadInteger '1'
v83 <- LoadFloat '3.4'
v84 <- CallFunction v4, [v36, v82, v83]
v85 <- LoadInteger '1'
v86 <- LoadFloat '3.4'
v87 <- CallFunction v4, [v39, v85, v86]
v88 <- LoadInteger '1'
v89 <- LoadFloat '3.4'
v90 <- CallFunction v8, [v43, v88, v89]
v91 <- LoadInteger '1'
v92 <- LoadFloat '3.4'
v93 <- CallFunction v8, [v46, v91, v92]
v94 <- LoadInteger '1'
v95 <- LoadFloat '3.4'
v96 <- CallFunction v8, [v49, v94, v95]
v97 <- LoadInteger '1'
v98 <- LoadFloat '3.4'
v99 <- CallFunction v12, [v53, v97, v98]
v100 <- LoadInteger '1'
v101 <- LoadFloat '3.4'
v102 <- CallFunction v12, [v56, v100, v101]
v103 <- LoadInteger '1'
v104 <- LoadFloat '3.4'
v105 <- CallFunction v12, [v59, v103, v104]
v106 <- LoadInteger '1'
v107 <- LoadFloat '3.4'
v108 <- CallFunction v16, [v63, v106, v107]
v109 <- LoadInteger '1'
v110 <- LoadFloat '3.4'
v111 <- CallFunction v16, [v66, v109, v110]
v112 <- LoadInteger '1'
v113 <- LoadFloat '3.4'
v114 <- CallFunction v16, [v69, v112, v113]
v115 <- GetElement v23, '0'
v116 <- GetElement v29, '0'
v117 <- GetElement v23, '1'
v118 <- GetElement v29, '1'
v119 <- GetElement v33, '0'
v120 <- GetElement v39, '0'
v121 <- GetElement v33, '1'
v122 <- GetElement v39, '1'
v123 <- GetElement v43, '0'
v124 <- GetElement v49, '0'
v125 <- GetElement v43, '1'
v126 <- GetElement v49, '1'
v127 <- GetElement v53, '0'
v128 <- GetElement v59, '0'
v129 <- GetElement v53, '1'
v130 <- GetElement v59, '1'
v131 <- GetElement v63, '0'
v132 <- GetElement v69, '0'
v133 <- GetElement v63, '1'
v134 <- GetElement v69, '1'


function foo_pixel(a1, a2, a3) {
    a1[0] = a3;
    a1[a2] = a3;
}
function foo_uint16(a5, a6, a7) {
    a5[0] = a7;
    a5[a6] = a7;
}
function foo_uint32(a9, a10, a11) {
    a9[0] = a11;
    a9[a10] = a11;
}
function foo_float(a13, a14, a15) {
    a13[0] = a15;
    a13[a14] = a15;
}
function foo_double(a17, a18, a19) {
    a17[0] = a19;
    a17[a18] = a19;
}
const v22 = new Uint8ClampedArray(2);
var A1_pixel = v22;
const v25 = new Uint8ClampedArray(2);
var A2_pixel = v25;
const v28 = new Uint8ClampedArray(2);
var A3_pixel = v28;
const v32 = new Uint16Array(2);
var A1_uint16 = v32;
const v35 = new Uint16Array(2);
var A2_uint16 = v35;
const v38 = new Uint16Array(2);
var A3_uint16 = v38;
const v42 = new Uint32Array(2);
var A1_uint32 = v42;
const v45 = new Uint32Array(2);
var A2_uint32 = v45;
const v48 = new Uint32Array(2);
var A3_uint32 = v48;
const v52 = new Float32Array(2);
var A1_float = v52;
const v55 = new Float32Array(2);
var A2_float = v55;
const v58 = new Float32Array(2);
var A3_float = v58;
const v62 = new Float64Array(2);
var A1_double = v62;
const v65 = new Float64Array(2);
var A2_double = v65;
const v68 = new Float64Array(2);
var A3_double = v68;
foo_pixel(A1_pixel, 1, 34);
foo_pixel(A2_pixel, 1, 34);
foo_pixel(A3_pixel, 1, 34);
foo_uint16(A1_uint16, 1, 3.4);
foo_uint16(A2_uint16, 1, 3.4);
foo_uint16(A3_uint16, 1, 3.4);
foo_uint32(A1_uint32, 1, 3.4);
foo_uint32(A2_uint32, 1, 3.4);
foo_uint32(A3_uint32, 1, 3.4);
foo_float(A1_float, 1, 3.4);
foo_float(A2_float, 1, 3.4);
foo_float(A3_float, 1, 3.4);
foo_double(A1_double, 1, 3.4);
foo_double(A2_double, 1, 3.4);
foo_double(A3_double, 1, 3.4);
A1_pixel[0];
A3_pixel[0];
A1_pixel[1];
A3_pixel[1];
A1_uint16[0];
A3_uint16[0];
A1_uint16[1];
A3_uint16[1];
A1_uint32[0];
A3_uint32[0];
A1_uint32[1];
A3_uint32[1];
A1_float[0];
A3_float[0];
A1_float[1];
A3_float[1];
A1_double[0];
A3_double[0];
A1_double[1];
A3_double[1];

FuzzIL program written to corpus/StoreKeyedExternal.fzil
