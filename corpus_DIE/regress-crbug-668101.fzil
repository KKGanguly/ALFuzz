v0 <- BeginPlainFunction -> v1, v2, v3
    SetComputedProperty v1, v2, v3
EndPlainFunction
v4 <- LoadString 'make it generic'
v5 <- LoadInteger '0'
v6 <- LoadInteger '0'
v7 <- CallFunction v0, [v4, v5, v6]
v8 <- CreateNamedVariable 'Array', 'none'
v9 <- LoadInteger '3'
v10 <- Construct v8, [v9]
v11 <- CreateNamedVariable 'a', 'var', v10
v12 <- LoadString 'length'
v13 <- LoadInteger '2'
v14 <- CallFunction v0, [v11, v12, v13]
v15 <- LoadInteger '2'
v16 <- GetProperty v11, 'length'
v17 <- LoadString 'length'
v18 <- LoadInteger '1'
v19 <- CallFunction v0, [v11, v17, v18]
v20 <- LoadInteger '1'
v21 <- GetProperty v11, 'length'


function f(a1, a2, a3) {
    a1[a2] = a3;
}
f("make it generic", 0, 0);
const v10 = new Array(3);
var a = v10;
f(a, "length", 2);
a.length;
f(a, "length", 1);
a.length;

FuzzIL program written to corpus/regress-crbug-668101.fzil
