v0 <- BeginPlainFunction -> v1
    v2 <- CallFunction v1, []
    v3 <- CallFunction v1, []
    v4 <- CallFunction v1, []
EndPlainFunction
v5 <- BeginPlainFunction -> 
    v6 <- CreateNamedVariable 'Set', 'none'
    v7 <- Construct v6, []
    v8 <- CreateNamedVariable 's', 'var', v7
    v9 <- CallMethod v8, 'values', []
    v10 <- CreateNamedVariable 'iter', 'var', v9
    v11 <- GetProperty v10, '__proto__'
    v12 <- CreateNamedVariable 'SetIteratorPrototype', 'var', v11
    v13 <- LoadString 'constructor'
    v14 <- CallMethod v12, 'hasOwnProperty', [v13]
    v15 <- GetProperty v12, '__proto__'
    v16 <- CreateNamedVariable 'Object', 'none'
    v17 <- GetProperty v16, 'prototype'
    v18 <- CallMethod v16, 'getOwnPropertyNames', [v12]
    v19 <- CreateNamedVariable 'propertyNames', 'var', v18
    v20 <- LoadString 'next'
    v21 <- CreateArray [v20]
    v22 <- Construct v6, []
    v23 <- CallMethod v22, 'values', []
    v24 <- GetProperty v23, '__proto__'
    v25 <- Construct v6, []
    v26 <- CallMethod v25, 'entries', []
    v27 <- GetProperty v26, '__proto__'
    v28 <- LoadString '[object Set Iterator]'
    v29 <- GetProperty v16, 'prototype'
    v30 <- GetProperty v29, 'toString'
    v31 <- CallMethod v30, 'call', [v10]
    v32 <- LoadString 'Set Iterator'
    v33 <- CreateNamedVariable 'Symbol', 'none'
    v34 <- GetProperty v33, 'toStringTag'
    v35 <- GetComputedProperty v12, v34
    v36 <- GetProperty v33, 'toStringTag'
    v37 <- CallMethod v16, 'getOwnPropertyDescriptor', [v12, v36]
    v38 <- CreateNamedVariable 'desc', 'var', v37
    v39 <- GetProperty v38, 'configurable'
    v40 <- GetProperty v38, 'writable'
    v41 <- LoadString 'Set Iterator'
    v42 <- GetProperty v38, 'value'
EndPlainFunction
v43 <- CallFunction v0, [v5]
v44 <- BeginPlainFunction -> 
    v45 <- CreateNamedVariable 'Set', 'none'
    v46 <- Construct v45, []
    v47 <- CreateNamedVariable 's', 'var', v46
    v48 <- LoadInteger '1'
    v49 <- CallMethod v47, 'add', [v48]
    v50 <- LoadInteger '2'
    v51 <- CallMethod v47, 'add', [v50]
    v52 <- LoadInteger '3'
    v53 <- CallMethod v47, 'add', [v52]
    v54 <- CallMethod v47, 'values', []
    v55 <- CreateNamedVariable 'iter', 'var', v54
    v56 <- LoadInteger '1'
    v57 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v56
        ObjectLiteralAddProperty `done`, v57
    v58 <- EndObjectLiteral
    v59 <- CallMethod v55, 'next', []
    v60 <- LoadInteger '2'
    v61 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v60
        ObjectLiteralAddProperty `done`, v61
    v62 <- EndObjectLiteral
    v63 <- CallMethod v55, 'next', []
    v64 <- LoadInteger '3'
    v65 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v64
        ObjectLiteralAddProperty `done`, v65
    v66 <- EndObjectLiteral
    v67 <- CallMethod v55, 'next', []
    v68 <- LoadUndefined
    v69 <- LoadBoolean 'true'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v68
        ObjectLiteralAddProperty `done`, v69
    v70 <- EndObjectLiteral
    v71 <- CallMethod v55, 'next', []
    v72 <- LoadUndefined
    v73 <- LoadBoolean 'true'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v72
        ObjectLiteralAddProperty `done`, v73
    v74 <- EndObjectLiteral
    v75 <- CallMethod v55, 'next', []
EndPlainFunction
v76 <- CallFunction v0, [v44]
v77 <- BeginPlainFunction -> 
    v78 <- CreateNamedVariable 'Set', 'none'
    v79 <- GetProperty v78, 'prototype'
    v80 <- CallMethod v79, 'keys', []
    v81 <- GetProperty v78, 'prototype'
    v82 <- CallMethod v81, 'values', []
EndPlainFunction
v83 <- CallFunction v0, [v77]
v84 <- BeginPlainFunction -> 
    v85 <- CreateNamedVariable 'Set', 'none'
    v86 <- Construct v85, []
    v87 <- CreateNamedVariable 's', 'var', v86
    v88 <- LoadInteger '1'
    v89 <- CallMethod v87, 'add', [v88]
    v90 <- LoadInteger '2'
    v91 <- CallMethod v87, 'add', [v90]
    v92 <- LoadInteger '3'
    v93 <- CallMethod v87, 'add', [v92]
    v94 <- CallMethod v87, 'entries', []
    v95 <- CreateNamedVariable 'iter', 'var', v94
    v96 <- LoadInteger '1'
    v97 <- LoadInteger '1'
    v98 <- CreateArray [v96, v97]
    v99 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v98
        ObjectLiteralAddProperty `done`, v99
    v100 <- EndObjectLiteral
    v101 <- CallMethod v95, 'next', []
    v102 <- LoadInteger '2'
    v103 <- LoadInteger '2'
    v104 <- CreateArray [v102, v103]
    v105 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v104
        ObjectLiteralAddProperty `done`, v105
    v106 <- EndObjectLiteral
    v107 <- CallMethod v95, 'next', []
    v108 <- LoadInteger '3'
    v109 <- LoadInteger '3'
    v110 <- CreateArray [v108, v109]
    v111 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v110
        ObjectLiteralAddProperty `done`, v111
    v112 <- EndObjectLiteral
    v113 <- CallMethod v95, 'next', []
    v114 <- LoadUndefined
    v115 <- LoadBoolean 'true'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v114
        ObjectLiteralAddProperty `done`, v115
    v116 <- EndObjectLiteral
    v117 <- CallMethod v95, 'next', []
    v118 <- LoadUndefined
    v119 <- LoadBoolean 'true'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v118
        ObjectLiteralAddProperty `done`, v119
    v120 <- EndObjectLiteral
    v121 <- CallMethod v95, 'next', []
EndPlainFunction
v122 <- CallFunction v0, [v84]
v123 <- BeginPlainFunction -> 
    v124 <- CreateNamedVariable 'Set', 'none'
    v125 <- Construct v124, []
    v126 <- CreateNamedVariable 's', 'var', v125
    v127 <- LoadInteger '1'
    v128 <- CallMethod v126, 'add', [v127]
    v129 <- CallMethod v126, 'values', []
    v130 <- CreateNamedVariable 'iter', 'var', v129
    v131 <- LoadInteger '1'
    v132 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v131
        ObjectLiteralAddProperty `done`, v132
    v133 <- EndObjectLiteral
    v134 <- CallMethod v130, 'next', []
    v135 <- LoadInteger '2'
    v136 <- CallMethod v126, 'add', [v135]
    v137 <- LoadInteger '3'
    v138 <- CallMethod v126, 'add', [v137]
    v139 <- LoadInteger '4'
    v140 <- CallMethod v126, 'add', [v139]
    v141 <- LoadInteger '5'
    v142 <- CallMethod v126, 'add', [v141]
    v143 <- LoadInteger '2'
    v144 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v143
        ObjectLiteralAddProperty `done`, v144
    v145 <- EndObjectLiteral
    v146 <- CallMethod v130, 'next', []
    v147 <- LoadInteger '3'
    v148 <- CallMethod v126, 'delete', [v147]
    v149 <- LoadInteger '4'
    v150 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v149
        ObjectLiteralAddProperty `done`, v150
    v151 <- EndObjectLiteral
    v152 <- CallMethod v130, 'next', []
    v153 <- LoadInteger '5'
    v154 <- CallMethod v126, 'delete', [v153]
    v155 <- LoadUndefined
    v156 <- LoadBoolean 'true'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v155
        ObjectLiteralAddProperty `done`, v156
    v157 <- EndObjectLiteral
    v158 <- CallMethod v130, 'next', []
    v159 <- LoadInteger '4'
    v160 <- CallMethod v126, 'add', [v159]
    v161 <- LoadUndefined
    v162 <- LoadBoolean 'true'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v161
        ObjectLiteralAddProperty `done`, v162
    v163 <- EndObjectLiteral
    v164 <- CallMethod v130, 'next', []
EndPlainFunction
v165 <- CallFunction v0, [v123]
v166 <- BeginPlainFunction -> 
    v167 <- CreateNamedVariable 'Set', 'none'
    v168 <- Construct v167, []
    v169 <- CreateNamedVariable 's', 'var', v168
    v170 <- LoadInteger '1'
    v171 <- CallMethod v169, 'add', [v170]
    v172 <- LoadInteger '2'
    v173 <- CallMethod v169, 'add', [v172]
    v174 <- CallMethod v169, 'values', []
    v175 <- CreateNamedVariable 'i', 'var', v174
    v176 <- LoadInteger '1'
    v177 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v176
        ObjectLiteralAddProperty `done`, v177
    v178 <- EndObjectLiteral
    v179 <- CallMethod v175, 'next', []
    v180 <- LoadInteger '2'
    v181 <- CallMethod v169, 'delete', [v180]
    v182 <- LoadInteger '1'
    v183 <- CallMethod v169, 'delete', [v182]
    v184 <- LoadInteger '2'
    v185 <- CallMethod v169, 'add', [v184]
    v186 <- LoadInteger '2'
    v187 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v186
        ObjectLiteralAddProperty `done`, v187
    v188 <- EndObjectLiteral
    v189 <- CallMethod v175, 'next', []
    v190 <- LoadUndefined
    v191 <- LoadBoolean 'true'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v190
        ObjectLiteralAddProperty `done`, v191
    v192 <- EndObjectLiteral
    v193 <- CallMethod v175, 'next', []
EndPlainFunction
v194 <- CallFunction v0, [v166]
v195 <- BeginPlainFunction -> 
    v196 <- CreateNamedVariable 'Set', 'none'
    v197 <- Construct v196, []
    v198 <- CreateNamedVariable 's', 'var', v197
    v199 <- LoadInteger '1'
    v200 <- CallMethod v198, 'add', [v199]
    v201 <- LoadInteger '2'
    v202 <- CallMethod v198, 'add', [v201]
    v203 <- CallMethod v198, 'values', []
    v204 <- CreateNamedVariable 'i', 'var', v203
    v205 <- LoadInteger '1'
    v206 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v205
        ObjectLiteralAddProperty `done`, v206
    v207 <- EndObjectLiteral
    v208 <- CallMethod v204, 'next', []
    v209 <- LoadInteger '2'
    v210 <- CallMethod v198, 'delete', [v209]
    v211 <- LoadInteger '1'
    v212 <- CallMethod v198, 'delete', [v211]
    BeginForLoopInitializer
        v213 <- LoadInteger '2'
    BeginForLoopCondition -> v214
        v215 <- LoadInteger '500'
        v216 <- Compare v214, '<', v215
    BeginForLoopAfterthought v216 -> v217
        v218 <- UnaryOperation '++', v217
    BeginForLoopBody -> v219
        v220 <- CallMethod v198, 'add', [v219]
    EndForLoop
    BeginForLoopInitializer
        v221 <- LoadInteger '2'
    BeginForLoopCondition -> v222
        v223 <- LoadInteger '500'
        v224 <- Compare v222, '<', v223
    BeginForLoopAfterthought v224 -> v225
        v226 <- UnaryOperation '++', v225
    BeginForLoopBody -> v227
        v228 <- CallMethod v198, 'delete', [v227]
    EndForLoop
    BeginForLoopInitializer
        v229 <- LoadInteger '2'
    BeginForLoopCondition -> v230
        v231 <- LoadInteger '1000'
        v232 <- Compare v230, '<', v231
    BeginForLoopAfterthought v232 -> v233
        v234 <- UnaryOperation '++', v233
    BeginForLoopBody -> v235
        v236 <- CallMethod v198, 'add', [v235]
    EndForLoop
    v237 <- LoadInteger '2'
    v238 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v237
        ObjectLiteralAddProperty `done`, v238
    v239 <- EndObjectLiteral
    v240 <- CallMethod v204, 'next', []
    BeginForLoopInitializer
        v241 <- LoadInteger '1001'
    BeginForLoopCondition -> v242
        v243 <- LoadInteger '2000'
        v244 <- Compare v242, '<', v243
    BeginForLoopAfterthought v244 -> v245
        v246 <- UnaryOperation '++', v245
    BeginForLoopBody -> v247
        v248 <- CallMethod v198, 'add', [v247]
    EndForLoop
    v249 <- LoadInteger '3'
    v250 <- CallMethod v198, 'delete', [v249]
    BeginForLoopInitializer
        v251 <- LoadInteger '6'
    BeginForLoopCondition -> v252
        v253 <- LoadInteger '2000'
        v254 <- Compare v252, '<', v253
    BeginForLoopAfterthought v254 -> v255
        v256 <- UnaryOperation '++', v255
    BeginForLoopBody -> v257
        v258 <- CallMethod v198, 'delete', [v257]
    EndForLoop
    v259 <- LoadInteger '4'
    v260 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v259
        ObjectLiteralAddProperty `done`, v260
    v261 <- EndObjectLiteral
    v262 <- CallMethod v204, 'next', []
    v263 <- LoadInteger '5'
    v264 <- CallMethod v198, 'delete', [v263]
    v265 <- LoadUndefined
    v266 <- LoadBoolean 'true'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v265
        ObjectLiteralAddProperty `done`, v266
    v267 <- EndObjectLiteral
    v268 <- CallMethod v204, 'next', []
    v269 <- LoadInteger '4'
    v270 <- CallMethod v198, 'add', [v269]
    v271 <- LoadUndefined
    v272 <- LoadBoolean 'true'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v271
        ObjectLiteralAddProperty `done`, v272
    v273 <- EndObjectLiteral
    v274 <- CallMethod v204, 'next', []
EndPlainFunction
v275 <- CallFunction v0, [v195]
v276 <- BeginPlainFunction -> 
    v277 <- BeginPlainFunction -> 
        BeginObjectLiteral
        v278 <- EndObjectLiteral
        v279 <- CreateNamedVariable 'Set', 'none'
        v280 <- GetProperty v279, 'prototype'
        v281 <- GetProperty v280, 'values'
        v282 <- CallMethod v281, 'call', [v278]
    EndPlainFunction
    v283 <- CallFunction v277, []
    v284 <- CreateNamedVariable 'TypeError', 'none'
    v285 <- BeginPlainFunction -> 
        BeginObjectLiteral
        v286 <- EndObjectLiteral
        v287 <- CreateNamedVariable 'Set', 'none'
        v288 <- GetProperty v287, 'prototype'
        v289 <- GetProperty v288, 'entries'
        v290 <- CallMethod v289, 'call', [v286]
    EndPlainFunction
    v291 <- CallFunction v285, []
EndPlainFunction
v292 <- CallFunction v0, [v276]
v293 <- BeginPlainFunction -> 
    v294 <- CreateNamedVariable 'Set', 'none'
    v295 <- Construct v294, []
    v296 <- CallMethod v295, 'values', []
    v297 <- CreateNamedVariable 'iter', 'var', v296
    v298 <- BeginPlainFunction -> 
        BeginObjectLiteral
        v299 <- EndObjectLiteral
        v300 <- GetProperty v297, 'next'
        v301 <- CallMethod v300, 'call', [v299]
    EndPlainFunction
    v302 <- CallFunction v298, []
EndPlainFunction
v303 <- CallFunction v0, [v293]
v304 <- BeginPlainFunction -> 
    v305 <- CreateNamedVariable 'Set', 'none'
    v306 <- GetProperty v305, 'prototype'
    v307 <- CreateNamedVariable 'Symbol', 'none'
    v308 <- GetProperty v307, 'iterator'
    v309 <- GetComputedProperty v306, v308
    v310 <- GetProperty v305, 'prototype'
    v311 <- CallMethod v310, 'values', []
    v312 <- GetProperty v307, 'iterator'
    v313 <- GetProperty v305, 'prototype'
    v314 <- CallMethod v313, 'hasOwnProperty', [v312]
    v315 <- GetProperty v307, 'iterator'
    v316 <- GetProperty v305, 'prototype'
    v317 <- CallMethod v316, 'propertyIsEnumerable', [v315]
    v318 <- Construct v305, []
    v319 <- CallMethod v318, 'values', []
    v320 <- CreateNamedVariable 'iter', 'var', v319
    v321 <- GetProperty v307, 'iterator'
    v322 <- CallComputedMethod v320, v321, []
    v323 <- GetProperty v307, 'iterator'
    v324 <- GetComputedProperty v320, v323
    v325 <- GetProperty v324, 'name'
    v326 <- LoadString '[Symbol.iterator]'
EndPlainFunction
v327 <- CallFunction v0, [v304]
v328 <- BeginPlainFunction -> 
    v329 <- CreateNamedVariable 'Map', 'none'
    v330 <- Construct v329, []
    v331 <- CreateNamedVariable 'm', 'var', v330
    v332 <- CallMethod v331, 'values', []
    v333 <- CreateNamedVariable 'iter', 'var', v332
    v334 <- GetProperty v333, '__proto__'
    v335 <- CreateNamedVariable 'MapIteratorPrototype', 'var', v334
    v336 <- LoadString 'constructor'
    v337 <- CallMethod v335, 'hasOwnProperty', [v336]
    v338 <- GetProperty v335, '__proto__'
    v339 <- CreateNamedVariable 'Object', 'none'
    v340 <- GetProperty v339, 'prototype'
    v341 <- CallMethod v339, 'getOwnPropertyNames', [v335]
    v342 <- CreateNamedVariable 'propertyNames', 'var', v341
    v343 <- LoadString 'next'
    v344 <- CreateArray [v343]
    v345 <- Construct v329, []
    v346 <- CallMethod v345, 'values', []
    v347 <- GetProperty v346, '__proto__'
    v348 <- Construct v329, []
    v349 <- CallMethod v348, 'keys', []
    v350 <- GetProperty v349, '__proto__'
    v351 <- Construct v329, []
    v352 <- CallMethod v351, 'entries', []
    v353 <- GetProperty v352, '__proto__'
    v354 <- LoadString '[object Map Iterator]'
    v355 <- GetProperty v339, 'prototype'
    v356 <- GetProperty v355, 'toString'
    v357 <- CallMethod v356, 'call', [v333]
    v358 <- LoadString 'Map Iterator'
    v359 <- CreateNamedVariable 'Symbol', 'none'
    v360 <- GetProperty v359, 'toStringTag'
    v361 <- GetComputedProperty v335, v360
    v362 <- GetProperty v359, 'toStringTag'
    v363 <- CallMethod v339, 'getOwnPropertyDescriptor', [v335, v362]
    v364 <- CreateNamedVariable 'desc', 'var', v363
    v365 <- GetProperty v364, 'configurable'
    v366 <- GetProperty v364, 'writable'
    v367 <- LoadString 'Map Iterator'
    v368 <- GetProperty v364, 'value'
EndPlainFunction
v369 <- CallFunction v0, [v328]
v370 <- BeginPlainFunction -> 
    v371 <- CreateNamedVariable 'Map', 'none'
    v372 <- Construct v371, []
    v373 <- CreateNamedVariable 'm', 'var', v372
    v374 <- LoadInteger '1'
    v375 <- LoadInteger '11'
    v376 <- CallMethod v373, 'set', [v374, v375]
    v377 <- LoadInteger '2'
    v378 <- LoadInteger '22'
    v379 <- CallMethod v373, 'set', [v377, v378]
    v380 <- LoadInteger '3'
    v381 <- LoadInteger '33'
    v382 <- CallMethod v373, 'set', [v380, v381]
    v383 <- CallMethod v373, 'values', []
    v384 <- CreateNamedVariable 'iter', 'var', v383
    v385 <- LoadInteger '11'
    v386 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v385
        ObjectLiteralAddProperty `done`, v386
    v387 <- EndObjectLiteral
    v388 <- CallMethod v384, 'next', []
    v389 <- LoadInteger '22'
    v390 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v389
        ObjectLiteralAddProperty `done`, v390
    v391 <- EndObjectLiteral
    v392 <- CallMethod v384, 'next', []
    v393 <- LoadInteger '33'
    v394 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v393
        ObjectLiteralAddProperty `done`, v394
    v395 <- EndObjectLiteral
    v396 <- CallMethod v384, 'next', []
    v397 <- LoadUndefined
    v398 <- LoadBoolean 'true'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v397
        ObjectLiteralAddProperty `done`, v398
    v399 <- EndObjectLiteral
    v400 <- CallMethod v384, 'next', []
    v401 <- LoadUndefined
    v402 <- LoadBoolean 'true'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v401
        ObjectLiteralAddProperty `done`, v402
    v403 <- EndObjectLiteral
    v404 <- CallMethod v384, 'next', []
EndPlainFunction
v405 <- CallFunction v0, [v370]
v406 <- BeginPlainFunction -> 
    v407 <- CreateNamedVariable 'Map', 'none'
    v408 <- Construct v407, []
    v409 <- CreateNamedVariable 'm', 'var', v408
    v410 <- LoadInteger '1'
    v411 <- LoadInteger '11'
    v412 <- CallMethod v409, 'set', [v410, v411]
    v413 <- LoadInteger '2'
    v414 <- LoadInteger '22'
    v415 <- CallMethod v409, 'set', [v413, v414]
    v416 <- LoadInteger '3'
    v417 <- LoadInteger '33'
    v418 <- CallMethod v409, 'set', [v416, v417]
    v419 <- CallMethod v409, 'keys', []
    v420 <- CreateNamedVariable 'iter', 'var', v419
    v421 <- LoadInteger '1'
    v422 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v421
        ObjectLiteralAddProperty `done`, v422
    v423 <- EndObjectLiteral
    v424 <- CallMethod v420, 'next', []
    v425 <- LoadInteger '2'
    v426 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v425
        ObjectLiteralAddProperty `done`, v426
    v427 <- EndObjectLiteral
    v428 <- CallMethod v420, 'next', []
    v429 <- LoadInteger '3'
    v430 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v429
        ObjectLiteralAddProperty `done`, v430
    v431 <- EndObjectLiteral
    v432 <- CallMethod v420, 'next', []
    v433 <- LoadUndefined
    v434 <- LoadBoolean 'true'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v433
        ObjectLiteralAddProperty `done`, v434
    v435 <- EndObjectLiteral
    v436 <- CallMethod v420, 'next', []
    v437 <- LoadUndefined
    v438 <- LoadBoolean 'true'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v437
        ObjectLiteralAddProperty `done`, v438
    v439 <- EndObjectLiteral
    v440 <- CallMethod v420, 'next', []
EndPlainFunction
v441 <- CallFunction v0, [v406]
v442 <- BeginPlainFunction -> 
    v443 <- CreateNamedVariable 'Map', 'none'
    v444 <- Construct v443, []
    v445 <- CreateNamedVariable 'm', 'var', v444
    v446 <- LoadInteger '1'
    v447 <- LoadInteger '11'
    v448 <- CallMethod v445, 'set', [v446, v447]
    v449 <- LoadInteger '2'
    v450 <- LoadInteger '22'
    v451 <- CallMethod v445, 'set', [v449, v450]
    v452 <- LoadInteger '3'
    v453 <- LoadInteger '33'
    v454 <- CallMethod v445, 'set', [v452, v453]
    v455 <- CallMethod v445, 'entries', []
    v456 <- CreateNamedVariable 'iter', 'var', v455
    v457 <- LoadInteger '1'
    v458 <- LoadInteger '11'
    v459 <- CreateArray [v457, v458]
    v460 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v459
        ObjectLiteralAddProperty `done`, v460
    v461 <- EndObjectLiteral
    v462 <- CallMethod v456, 'next', []
    v463 <- LoadInteger '2'
    v464 <- LoadInteger '22'
    v465 <- CreateArray [v463, v464]
    v466 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v465
        ObjectLiteralAddProperty `done`, v466
    v467 <- EndObjectLiteral
    v468 <- CallMethod v456, 'next', []
    v469 <- LoadInteger '3'
    v470 <- LoadInteger '33'
    v471 <- CreateArray [v469, v470]
    v472 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v471
        ObjectLiteralAddProperty `done`, v472
    v473 <- EndObjectLiteral
    v474 <- CallMethod v456, 'next', []
    v475 <- LoadUndefined
    v476 <- LoadBoolean 'true'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v475
        ObjectLiteralAddProperty `done`, v476
    v477 <- EndObjectLiteral
    v478 <- CallMethod v456, 'next', []
    v479 <- LoadUndefined
    v480 <- LoadBoolean 'true'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v479
        ObjectLiteralAddProperty `done`, v480
    v481 <- EndObjectLiteral
    v482 <- CallMethod v456, 'next', []
EndPlainFunction
v483 <- CallFunction v0, [v442]
v484 <- BeginPlainFunction -> 
    v485 <- BeginPlainFunction -> 
        BeginObjectLiteral
        v486 <- EndObjectLiteral
        v487 <- CreateNamedVariable 'Map', 'none'
        v488 <- GetProperty v487, 'prototype'
        v489 <- GetProperty v488, 'values'
        v490 <- CallMethod v489, 'call', [v486]
    EndPlainFunction
    v491 <- CallFunction v485, []
    v492 <- CreateNamedVariable 'TypeError', 'none'
    v493 <- BeginPlainFunction -> 
        BeginObjectLiteral
        v494 <- EndObjectLiteral
        v495 <- CreateNamedVariable 'Map', 'none'
        v496 <- GetProperty v495, 'prototype'
        v497 <- GetProperty v496, 'keys'
        v498 <- CallMethod v497, 'call', [v494]
    EndPlainFunction
    v499 <- CallFunction v493, []
    v500 <- BeginPlainFunction -> 
        BeginObjectLiteral
        v501 <- EndObjectLiteral
        v502 <- CreateNamedVariable 'Map', 'none'
        v503 <- GetProperty v502, 'prototype'
        v504 <- GetProperty v503, 'entries'
        v505 <- CallMethod v504, 'call', [v501]
    EndPlainFunction
    v506 <- CallFunction v500, []
EndPlainFunction
v507 <- CallFunction v0, [v484]
v508 <- BeginPlainFunction -> 
    v509 <- CreateNamedVariable 'Map', 'none'
    v510 <- Construct v509, []
    v511 <- CallMethod v510, 'values', []
    v512 <- CreateNamedVariable 'iter', 'var', v511
    v513 <- BeginPlainFunction -> 
        BeginObjectLiteral
        v514 <- EndObjectLiteral
        v515 <- GetProperty v512, 'next'
        v516 <- CallMethod v515, 'call', [v514]
    EndPlainFunction
    v517 <- CallFunction v513, []
    v518 <- CreateNamedVariable 'TypeError', 'none'
EndPlainFunction
v519 <- CallFunction v0, [v508]
v520 <- BeginPlainFunction -> 
    v521 <- CreateNamedVariable 'Map', 'none'
    v522 <- GetProperty v521, 'prototype'
    v523 <- CreateNamedVariable 'Symbol', 'none'
    v524 <- GetProperty v523, 'iterator'
    v525 <- GetComputedProperty v522, v524
    v526 <- GetProperty v521, 'prototype'
    v527 <- CallMethod v526, 'entries', []
    v528 <- GetProperty v523, 'iterator'
    v529 <- GetProperty v521, 'prototype'
    v530 <- CallMethod v529, 'hasOwnProperty', [v528]
    v531 <- GetProperty v523, 'iterator'
    v532 <- GetProperty v521, 'prototype'
    v533 <- CallMethod v532, 'propertyIsEnumerable', [v531]
    v534 <- Construct v521, []
    v535 <- CallMethod v534, 'values', []
    v536 <- CreateNamedVariable 'iter', 'var', v535
    v537 <- GetProperty v523, 'iterator'
    v538 <- CallComputedMethod v536, v537, []
    v539 <- GetProperty v523, 'iterator'
    v540 <- GetComputedProperty v536, v539
    v541 <- GetProperty v540, 'name'
    v542 <- LoadString '[Symbol.iterator]'
EndPlainFunction
v543 <- CallFunction v0, [v520]


function test(a1) {
    a1();
    a1();
    a1();
}
function TestSetIterator() {
    const v7 = new Set();
    var s = v7;
    var iter = s.values();
    var SetIteratorPrototype = iter.__proto__;
    SetIteratorPrototype.hasOwnProperty("constructor");
    SetIteratorPrototype.__proto__;
    Object.prototype;
    var propertyNames = Object.getOwnPropertyNames(SetIteratorPrototype);
    ["next"];
    const v22 = new Set();
    v22.values().__proto__;
    const v25 = new Set();
    v25.entries().__proto__;
    Object.prototype.toString.call(iter);
    SetIteratorPrototype[Symbol.toStringTag];
    var desc = Object.getOwnPropertyDescriptor(SetIteratorPrototype, Symbol.toStringTag);
    desc.configurable;
    desc.writable;
    desc.value;
}
test(TestSetIterator);
function TestSetIteratorValues() {
    const v46 = new Set();
    var s = v46;
    s.add(1);
    s.add(2);
    s.add(3);
    var iter = s.values();
    const v58 = { value: 1, done: false };
    iter.next();
    const v62 = { value: 2, done: false };
    iter.next();
    const v66 = { value: 3, done: false };
    iter.next();
    const v70 = { value: undefined, done: true };
    iter.next();
    const v74 = { value: undefined, done: true };
    iter.next();
}
test(TestSetIteratorValues);
function TestSetIteratorKeys() {
    Set.prototype.keys();
    Set.prototype.values();
}
test(TestSetIteratorKeys);
function TestSetIteratorEntries() {
    const v86 = new Set();
    var s = v86;
    s.add(1);
    s.add(2);
    s.add(3);
    var iter = s.entries();
    const v98 = [1,1];
    const v100 = { value: v98, done: false };
    iter.next();
    const v104 = [2,2];
    const v106 = { value: v104, done: false };
    iter.next();
    const v110 = [3,3];
    const v112 = { value: v110, done: false };
    iter.next();
    const v116 = { value: undefined, done: true };
    iter.next();
    const v120 = { value: undefined, done: true };
    iter.next();
}
test(TestSetIteratorEntries);
function TestSetIteratorMutations() {
    const v125 = new Set();
    var s = v125;
    s.add(1);
    var iter = s.values();
    const v133 = { value: 1, done: false };
    iter.next();
    s.add(2);
    s.add(3);
    s.add(4);
    s.add(5);
    const v145 = { value: 2, done: false };
    iter.next();
    s.delete(3);
    const v151 = { value: 4, done: false };
    iter.next();
    s.delete(5);
    const v157 = { value: undefined, done: true };
    iter.next();
    s.add(4);
    const v163 = { value: undefined, done: true };
    iter.next();
}
test(TestSetIteratorMutations);
function TestSetIteratorMutations2() {
    const v168 = new Set();
    var s = v168;
    s.add(1);
    s.add(2);
    var i = s.values();
    const v178 = { value: 1, done: false };
    i.next();
    s.delete(2);
    s.delete(1);
    s.add(2);
    const v188 = { value: 2, done: false };
    i.next();
    const v192 = { value: undefined, done: true };
    i.next();
}
test(TestSetIteratorMutations2);
function TestSetIteratorMutations3() {
    const v197 = new Set();
    var s = v197;
    s.add(1);
    s.add(2);
    var i = s.values();
    const v207 = { value: 1, done: false };
    i.next();
    s.delete(2);
    s.delete(1);
    for (let i214 = 2; i214 < 500; ++i214) {
        s.add(i214);
    }
    for (let i222 = 2; i222 < 500; ++i222) {
        s.delete(i222);
    }
    for (let i230 = 2; i230 < 1000; ++i230) {
        s.add(i230);
    }
    const v239 = { value: 2, done: false };
    i.next();
    for (let i242 = 1001; i242 < 2000; ++i242) {
        s.add(i242);
    }
    s.delete(3);
    for (let i252 = 6; i252 < 2000; ++i252) {
        s.delete(i252);
    }
    const v261 = { value: 4, done: false };
    i.next();
    s.delete(5);
    const v267 = { value: undefined, done: true };
    i.next();
    s.add(4);
    const v273 = { value: undefined, done: true };
    i.next();
}
test(TestSetIteratorMutations3);
function TestSetInvalidReceiver() {
    function f277() {
        const v278 = {};
        Set.prototype.values.call(v278);
    }
    f277();
    function f285() {
        const v286 = {};
        Set.prototype.entries.call(v286);
    }
    f285();
}
test(TestSetInvalidReceiver);
function TestSetIteratorInvalidReceiver() {
    const v295 = new Set();
    var iter = v295.values();
    function f298() {
        const v299 = {};
        iter.next.call(v299);
    }
    f298();
}
test(TestSetIteratorInvalidReceiver);
function TestSetIteratorSymbol() {
    Set.prototype[Symbol.iterator];
    Set.prototype.values();
    const v312 = Symbol.iterator;
    Set.prototype.hasOwnProperty(v312);
    const v315 = Symbol.iterator;
    Set.prototype.propertyIsEnumerable(v315);
    const v318 = new Set();
    var iter = v318.values();
    iter[Symbol.iterator]();
    iter[Symbol.iterator].name;
}
test(TestSetIteratorSymbol);
function TestMapIterator() {
    const v330 = new Map();
    var m = v330;
    var iter = m.values();
    var MapIteratorPrototype = iter.__proto__;
    MapIteratorPrototype.hasOwnProperty("constructor");
    MapIteratorPrototype.__proto__;
    Object.prototype;
    var propertyNames = Object.getOwnPropertyNames(MapIteratorPrototype);
    ["next"];
    const v345 = new Map();
    v345.values().__proto__;
    const v348 = new Map();
    v348.keys().__proto__;
    const v351 = new Map();
    v351.entries().__proto__;
    Object.prototype.toString.call(iter);
    MapIteratorPrototype[Symbol.toStringTag];
    var desc = Object.getOwnPropertyDescriptor(MapIteratorPrototype, Symbol.toStringTag);
    desc.configurable;
    desc.writable;
    desc.value;
}
test(TestMapIterator);
function TestMapIteratorValues() {
    const v372 = new Map();
    var m = v372;
    m.set(1, 11);
    m.set(2, 22);
    m.set(3, 33);
    var iter = m.values();
    const v387 = { value: 11, done: false };
    iter.next();
    const v391 = { value: 22, done: false };
    iter.next();
    const v395 = { value: 33, done: false };
    iter.next();
    const v399 = { value: undefined, done: true };
    iter.next();
    const v403 = { value: undefined, done: true };
    iter.next();
}
test(TestMapIteratorValues);
function TestMapIteratorKeys() {
    const v408 = new Map();
    var m = v408;
    m.set(1, 11);
    m.set(2, 22);
    m.set(3, 33);
    var iter = m.keys();
    const v423 = { value: 1, done: false };
    iter.next();
    const v427 = { value: 2, done: false };
    iter.next();
    const v431 = { value: 3, done: false };
    iter.next();
    const v435 = { value: undefined, done: true };
    iter.next();
    const v439 = { value: undefined, done: true };
    iter.next();
}
test(TestMapIteratorKeys);
function TestMapIteratorEntries() {
    const v444 = new Map();
    var m = v444;
    m.set(1, 11);
    m.set(2, 22);
    m.set(3, 33);
    var iter = m.entries();
    const v459 = [1,11];
    const v461 = { value: v459, done: false };
    iter.next();
    const v465 = [2,22];
    const v467 = { value: v465, done: false };
    iter.next();
    const v471 = [3,33];
    const v473 = { value: v471, done: false };
    iter.next();
    const v477 = { value: undefined, done: true };
    iter.next();
    const v481 = { value: undefined, done: true };
    iter.next();
}
test(TestMapIteratorEntries);
function TestMapInvalidReceiver() {
    function f485() {
        const v486 = {};
        Map.prototype.values.call(v486);
    }
    f485();
    function f493() {
        const v494 = {};
        Map.prototype.keys.call(v494);
    }
    f493();
    function f500() {
        const v501 = {};
        Map.prototype.entries.call(v501);
    }
    f500();
}
test(TestMapInvalidReceiver);
function TestMapIteratorInvalidReceiver() {
    const v510 = new Map();
    var iter = v510.values();
    function f513() {
        const v514 = {};
        iter.next.call(v514);
    }
    f513();
}
test(TestMapIteratorInvalidReceiver);
function TestMapIteratorSymbol() {
    Map.prototype[Symbol.iterator];
    Map.prototype.entries();
    const v528 = Symbol.iterator;
    Map.prototype.hasOwnProperty(v528);
    const v531 = Symbol.iterator;
    Map.prototype.propertyIsEnumerable(v531);
    const v534 = new Map();
    var iter = v534.values();
    iter[Symbol.iterator]();
    iter[Symbol.iterator].name;
}
test(TestMapIteratorSymbol);

FuzzIL program written to corpus/collection-iterator.fzil
