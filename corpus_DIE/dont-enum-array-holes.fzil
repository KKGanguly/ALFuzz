v0 <- LoadInteger '0'
v1 <- CreateNamedVariable 'count', 'var', v0
v2 <- LoadUndefined
v3 <- LoadInteger '1'
v4 <- LoadInteger '3'
v5 <- CreateArray [v2, v3, v2, v4]
BeginForInLoop v5 -> v6
    v7 <- UnaryOperation v1, '++'
EndForInLoop
v8 <- LoadInteger '2'
v9 <- LoadInteger '0'
Reassign v1, v9
v10 <- CreateNamedVariable 'Array', 'none'
v11 <- LoadInteger '10'
v12 <- Construct v10, [v11]
BeginForInLoop v12 -> v13
    v14 <- UnaryOperation v1, '++'
EndForInLoop
v15 <- LoadInteger '0'


var count = 0;
for (const v6 in [,1,,3]) {
    count++;
}
count = 0;
const v12 = new Array(10);
for (const v13 in v12) {
    count++;
}

FuzzIL program written to corpus/dont-enum-array-holes.fzil
