v0 <- BeginPlainFunction -> v1, v2
    v3 <- BinaryOperation v1, '%', v2
    Return v3
EndPlainFunction
v4 <- LoadInteger '2'
v5 <- LoadInteger '1'
v6 <- CallFunction v0, [v4, v5]
v7 <- LoadInteger '2'
v8 <- LoadInteger '1'
v9 <- CallFunction v0, [v7, v8]
v10 <- LoadInteger '0'
v11 <- UnaryOperation '-', v10
v12 <- LoadInteger '2'
v13 <- UnaryOperation '-', v12
v14 <- LoadInteger '1'
v15 <- CallFunction v0, [v13, v14]


function foo(a1, a2) {
    return a1 % a2;
}
foo(2, 1);
foo(2, 1);
-0;
foo(-2, 1);

FuzzIL program written to corpus/regress-5278.fzil
