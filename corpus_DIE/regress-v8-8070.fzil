v0 <- BeginPlainFunction -> v1
    BeginForOfLoop v1 -> v2
    EndForOfLoop
EndPlainFunction
v3 <- BeginPlainFunction -> v4
    v5 <- CallMethod v4, 'values', []
    v6 <- CreateNamedVariable 'iterator', 'const', v5
    v7 <- CallFunction v0, [v6]
    v8 <- CallMethod v6, 'next', []
    v9 <- GetProperty v8, 'done'
    Return v9
EndPlainFunction
v10 <- LoadInteger '1'
v11 <- LoadInteger '2'
v12 <- LoadInteger '3'
v13 <- CreateArray [v10, v11, v12]
v14 <- CreateNamedVariable 'a', 'const', v13
v15 <- CallFunction v3, [v14]
v16 <- CallFunction v3, [v14]
v17 <- CallFunction v3, [v14]


function bar(a1) {
    for (const v2 of a1) {
    }
}
function foo(a4) {
    const iterator = a4.values();
    bar(iterator);
    return iterator.next().done;
}
const a = [1,2,3];
foo(a);
foo(a);
foo(a);

FuzzIL program written to corpus/regress-v8-8070.fzil
