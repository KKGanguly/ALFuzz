v0 <- BeginPlainFunction -> v1
    Directive 'use strict'
    BeginIf v1
        v2 <- LoadArguments
        v3 <- GetElement v2, '1'
        Return v3
    EndIf
EndPlainFunction
v4 <- LoadBoolean 'false'
v5 <- CallFunction v0, [v4]
v6 <- LoadBoolean 'false'
v7 <- CallFunction v0, [v6]
v8 <- LoadBoolean 'true'
v9 <- LoadInteger '1'
v10 <- CallFunction v0, [v8, v9]
v11 <- LoadBoolean 'true'
v12 <- LoadInteger '1'
v13 <- CallFunction v0, [v11, v12]
v14 <- LoadBoolean 'false'
v15 <- CallFunction v0, [v14]
v16 <- LoadBoolean 'true'
v17 <- LoadInteger '1'
v18 <- CallFunction v0, [v16, v17]
v19 <- CallFunction v0, []


function foo(a1) {
    'use strict';
    if (a1) {
        return arguments[1];
    }
}
foo(false);
foo(false);
foo(true, 1);
foo(true, 1);
foo(false);
foo(true, 1);
foo();

FuzzIL program written to corpus/regress-5790.fzil
