v0 <- BeginPlainFunction -> v1, v2
    v3 <- GetComputedProperty v1, v2
    Return v3
EndPlainFunction
v4 <- LoadString 'one'
v5 <- LoadUndefined
v6 <- LoadString 'three'
v7 <- CreateArray [v4, v5, v6]
v8 <- CreateNamedVariable 'a', 'var', v7
v9 <- LoadInteger '0'
v10 <- CallFunction v0, [v8, v9]
v11 <- LoadInteger '0'
v12 <- CallFunction v0, [v8, v11]
v13 <- LoadInteger '0'
v14 <- CallFunction v0, [v8, v13]
v15 <- LoadUndefined
v16 <- LoadInteger '1'
v17 <- CallFunction v0, [v8, v16]
v18 <- CallFunction v0, []
v19 <- LoadString 'cow'
v20 <- CreateNamedVariable 'Array', 'none'
v21 <- GetProperty v20, 'prototype'
SetElement v21, '1', v19
v22 <- LoadString 'cow'
v23 <- LoadInteger '1'
v24 <- CallFunction v0, [v8, v23]
v25 <- CallFunction v0, []


function foo(a1, a2) {
    return a1[a2];
}
var a = ["one",,"three"];
foo(a, 0);
foo(a, 0);
foo(a, 0);
foo(a, 1);
foo();
const t4 = Array.prototype;
t4[1] = "cow";
foo(a, 1);
foo();

FuzzIL program written to corpus/keyed-load-hole-to-undefined.fzil
