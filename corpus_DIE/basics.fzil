v0 <- LoadInteger '1'
v1 <- UnaryOperation '-', v0
v2 <- CreateNamedVariable 'BigInt', 'none'
v3 <- CallFunction v2, [v1]
v4 <- CreateNamedVariable 'minus_one', 'const', v3
v5 <- LoadInteger '0'
v6 <- CallFunction v2, [v5]
v7 <- CreateNamedVariable 'zero', 'const', v6
v8 <- LoadInteger '0'
v9 <- CallFunction v2, [v8]
v10 <- CreateNamedVariable 'another_zero', 'const', v9
v11 <- LoadInteger '1'
v12 <- CallFunction v2, [v11]
v13 <- CreateNamedVariable 'one', 'const', v12
v14 <- LoadInteger '1'
v15 <- CallFunction v2, [v14]
v16 <- CreateNamedVariable 'another_one', 'const', v15
v17 <- LoadInteger '2'
v18 <- CallFunction v2, [v17]
v19 <- CreateNamedVariable 'two', 'const', v18
v20 <- LoadInteger '3'
v21 <- CallFunction v2, [v20]
v22 <- CreateNamedVariable 'three', 'const', v21
v23 <- LoadInteger '6'
v24 <- CallFunction v2, [v23]
v25 <- CreateNamedVariable 'six', 'const', v24
BeginBlockStatement
    v26 <- GetProperty v2, 'prototype'
    v27 <- GetProperty v26, 'constructor'
EndBlockStatement
BeginBlockStatement
    v28 <- BeginArrowFunction -> 
        v29 <- Construct v2, []
        Return v29
    EndArrowFunction
    v30 <- CallFunction v28, []
    v31 <- CreateNamedVariable 'TypeError', 'none'
    v32 <- BeginArrowFunction -> 
        v33 <- Construct v2, []
        Return v33
    EndArrowFunction
    v34 <- CallFunction v32, []
    v35 <- BeginArrowFunction -> 
        v36 <- LoadInteger '0'
        v37 <- Construct v2, [v36]
        Return v37
    EndArrowFunction
    v38 <- CallFunction v35, []
    v39 <- BeginArrowFunction -> 
        v40 <- LoadInteger '0'
        v41 <- Construct v2, [v40]
        Return v41
    EndArrowFunction
    v42 <- CallFunction v39, []
    v43 <- BeginArrowFunction -> 
        v44 <- LoadString '0'
        v45 <- Construct v2, [v44]
        Return v45
    EndArrowFunction
    v46 <- CallFunction v43, []
EndBlockStatement
BeginBlockStatement
    v47 <- BeginClassDefinition v2
        BeginClassConstructor -> v48
            v49 <- LoadInteger '42'
            ThrowException v49
        EndClassConstructor
    EndClassDefinition
    v50 <- BeginArrowFunction -> 
        v51 <- Construct v47, []
        Return v51
    EndArrowFunction
    v52 <- CallFunction v50, []
    v53 <- LoadInteger '42'
EndBlockStatement
BeginBlockStatement
    v54 <- BeginArrowFunction -> 
        v55 <- LoadUndefined
        v56 <- CallFunction v2, [v55]
        Return v56
    EndArrowFunction
    v57 <- CallFunction v54, []
    v58 <- CreateNamedVariable 'TypeError', 'none'
    v59 <- BeginArrowFunction -> 
        v60 <- LoadNull
        v61 <- CallFunction v2, [v60]
        Return v61
    EndArrowFunction
    v62 <- CallFunction v59, []
    v63 <- BeginArrowFunction -> 
        BeginObjectLiteral
        v64 <- EndObjectLiteral
        v65 <- CallFunction v2, [v64]
        Return v65
    EndArrowFunction
    v66 <- CallFunction v63, []
    v67 <- CreateNamedVariable 'SyntaxError', 'none'
    v68 <- BeginArrowFunction -> 
        v69 <- LoadString 'foo'
        v70 <- CallFunction v2, [v69]
        Return v70
    EndArrowFunction
    v71 <- CallFunction v68, []
    v72 <- BeginArrowFunction -> 
        v73 <- LoadString '1j'
        v74 <- CallFunction v2, [v73]
        Return v74
    EndArrowFunction
    v75 <- CallFunction v72, []
    v76 <- BeginArrowFunction -> 
        v77 <- LoadString '0b1ju'
        v78 <- CallFunction v2, [v77]
        Return v78
    EndArrowFunction
    v79 <- CallFunction v76, []
    v80 <- BeginArrowFunction -> 
        v81 <- LoadString '0o1jun'
        v82 <- CallFunction v2, [v81]
        Return v82
    EndArrowFunction
    v83 <- CallFunction v80, []
    v84 <- BeginArrowFunction -> 
        v85 <- LoadString '0x1junk'
        v86 <- CallFunction v2, [v85]
        Return v86
    EndArrowFunction
    v87 <- CallFunction v84, []
EndBlockStatement
BeginBlockStatement
    v88 <- LoadBoolean 'true'
    v89 <- CallFunction v2, [v88]
    v90 <- LoadInteger '0'
    v91 <- LoadBoolean 'false'
    v92 <- CallFunction v2, [v91]
    v93 <- LoadInteger '0'
    v94 <- LoadString ''
    v95 <- CallFunction v2, [v94]
    v96 <- LoadInteger '0'
    v97 <- LoadString ' 42'
    v98 <- CallFunction v2, [v97]
    v99 <- LoadInteger '40'
    v100 <- LoadString '0b101010'
    v101 <- CallFunction v2, [v100]
    v102 <- LoadInteger '40'
    v103 <- LoadString '  0b101011'
    v104 <- CallFunction v2, [v103]
    v105 <- LoadInteger '40'
    v106 <- LoadString '0x2a  '
    v107 <- CallFunction v2, [v106]
    v108 <- LoadInteger '40'
    v109 <- LoadString '    0x2b'
    v110 <- CallFunction v2, [v109]
    v111 <- LoadInteger '40'
    v112 <- LoadString '0o52'
    v113 <- CallFunction v2, [v112]
    v114 <- LoadInteger '40'
    v115 <- LoadString '     0o53\n'
    v116 <- CallFunction v2, [v115]
    v117 <- LoadInteger '40'
    v118 <- LoadInteger '0'
    v119 <- UnaryOperation '-', v118
    v120 <- CallFunction v2, [v119]
    v121 <- LoadInteger '0'
    v122 <- LoadInteger '42'
    v123 <- CallFunction v2, [v122]
    v124 <- LoadInteger '40'
    v125 <- LoadInteger '40'
    v126 <- CallFunction v2, [v125]
    v127 <- LoadInteger '40'
    v128 <- LoadInteger '40'
    v129 <- CreateNamedVariable 'Object', 'none'
    v130 <- CallFunction v129, [v128]
    v131 <- CallFunction v2, [v130]
    v132 <- LoadInteger '40'
    v133 <- LoadInteger '2'
    v134 <- LoadInteger '53'
    v135 <- BinaryOperation v133, '**', v134
    v136 <- LoadInteger '1'
    v137 <- BinaryOperation v135, '-', v136
    v138 <- CallFunction v2, [v137]
    v139 <- LoadInteger '9007199254740990'
    v140 <- LoadInteger '2'
    v141 <- LoadInteger '53'
    v142 <- BinaryOperation v140, '**', v141
    v143 <- CallFunction v2, [v142]
    v144 <- LoadInteger '9007199254740990'
    v145 <- LoadInteger '2'
    v146 <- LoadInteger '1000'
    v147 <- BinaryOperation v145, '**', v146
    v148 <- CallFunction v2, [v147]
    v149 <- LoadInteger '0'
    v150 <- LoadInteger '1000'
    v151 <- BinaryOperation v149, '**', v150
    v152 <- LoadFloat '3.0755851989071915e+29'
    v153 <- CallFunction v2, [v152]
    v154 <- LoadFloat '3.0755851989071915e+29'
    v155 <- LoadFloat '1e+50'
    v156 <- UnaryOperation '-', v155
    v157 <- CallFunction v2, [v156]
    v158 <- LoadFloat '1e+50'
    v159 <- UnaryOperation '-', v158
    v160 <- LoadInteger '2'
    v161 <- LoadInteger '53'
    v162 <- BinaryOperation v160, '**', v161
    v163 <- LoadInteger '1'
    v164 <- BinaryOperation v162, '-', v163
    v165 <- CallFunction v129, [v164]
    v166 <- CallFunction v2, [v165]
    v167 <- LoadInteger '9007199254740990'
    v168 <- CreateArray []
    v169 <- CallFunction v2, [v168]
    v170 <- LoadInteger '0'
EndBlockStatement
BeginBlockStatement
    v171 <- BeginArrowFunction -> 
        v172 <- CreateNamedVariable 'NaN', 'none'
        v173 <- CallFunction v2, [v172]
        Return v173
    EndArrowFunction
    v174 <- CallFunction v171, []
    v175 <- CreateNamedVariable 'RangeError', 'none'
    v176 <- BeginArrowFunction -> 
        v177 <- CreateNamedVariable 'Infinity', 'none'
        v178 <- UnaryOperation '-', v177
        v179 <- CallFunction v2, [v178]
        Return v179
    EndArrowFunction
    v180 <- CallFunction v176, []
    v181 <- BeginArrowFunction -> 
        v182 <- CreateNamedVariable 'Infinity', 'none'
        v183 <- UnaryOperation '+', v182
        v184 <- CallFunction v2, [v183]
        Return v184
    EndArrowFunction
    v185 <- CallFunction v181, []
    v186 <- BeginArrowFunction -> 
        v187 <- LoadFloat '4.00000001'
        v188 <- CallFunction v2, [v187]
        Return v188
    EndArrowFunction
    v189 <- CallFunction v186, []
    v190 <- BeginArrowFunction -> 
        v191 <- LoadFloat '4.00000001'
        v192 <- CreateNamedVariable 'Object', 'none'
        v193 <- CallFunction v192, [v191]
        v194 <- CallFunction v2, [v193]
        Return v194
    EndArrowFunction
    v195 <- CallFunction v190, []
EndBlockStatement
BeginBlockStatement
    v196 <- GetProperty v2, 'prototype'
    v197 <- CreateNamedVariable 'Symbol', 'none'
    v198 <- GetProperty v197, 'toStringTag'
    v199 <- CreateNamedVariable 'Object', 'none'
    v200 <- CallMethod v199, 'getOwnPropertyDescriptor', [v196, v198]
    v201 <- CreateNamedVariable 'toStringTag', 'const', v200
    v202 <- GetProperty v201, 'configurable'
    v203 <- GetProperty v201, 'enumerable'
    v204 <- GetProperty v201, 'writable'
    v205 <- LoadString 'BigInt'
    v206 <- GetProperty v201, 'value'
EndBlockStatement
BeginBlockStatement
    v207 <- CreateNamedVariable 'Object', 'none'
    v208 <- GetProperty v207, 'prototype'
    v209 <- GetProperty v208, 'toString'
    v210 <- CreateNamedVariable 'toString', 'const', v209
    v211 <- LoadString '[object BigInt]'
    v212 <- LoadInteger '40'
    v213 <- CallMethod v210, 'call', [v212]
    v214 <- LoadString '[object BigInt]'
    v215 <- LoadInteger '40'
    v216 <- CallFunction v207, [v215]
    v217 <- CallMethod v210, 'call', [v216]
    v218 <- GetProperty v2, 'prototype'
    v219 <- CreateNamedVariable 'Symbol', 'none'
    v220 <- GetProperty v219, 'toStringTag'
    v221 <- DeleteComputedProperty v218, v220
    v222 <- LoadString '[object Object]'
    v223 <- LoadInteger '40'
    v224 <- CallMethod v210, 'call', [v223]
    v225 <- LoadString '[object Object]'
    v226 <- LoadInteger '40'
    v227 <- CallFunction v207, [v226]
    v228 <- CallMethod v210, 'call', [v227]
    v229 <- LoadString 'foo'
    v230 <- GetProperty v2, 'prototype'
    v231 <- GetProperty v219, 'toStringTag'
    SetComputedProperty v230, v231, v229
    v232 <- LoadString '[object foo]'
    v233 <- LoadInteger '40'
    v234 <- CallMethod v210, 'call', [v233]
    v235 <- LoadString '[object foo]'
    v236 <- LoadInteger '40'
    v237 <- CallFunction v207, [v236]
    v238 <- CallMethod v210, 'call', [v237]
EndBlockStatement
BeginBlockStatement
    v239 <- TypeOf v7
    v240 <- LoadString 'bigint'
    v241 <- TypeOf v13
    v242 <- LoadString 'bigint'
EndBlockStatement
BeginBlockStatement
EndBlockStatement
BeginBlockStatement
    v243 <- LoadInteger '0'
    v244 <- TypeOf v243
    v245 <- LoadString 'bigint'
    v246 <- Compare v244, '===', v245
    v247 <- LoadInteger '0'
    v248 <- TypeOf v247
    v249 <- LoadString 'BigInt'
    v250 <- Compare v248, '===', v249
    v251 <- LoadInteger '1'
    v252 <- TypeOf v251
    v253 <- LoadString 'bigint'
    v254 <- Compare v252, '===', v253
EndBlockStatement
BeginBlockStatement
    v255 <- CreateNamedVariable 'String', 'none'
    v256 <- CallFunction v255, [v7]
    v257 <- LoadString '0'
    v258 <- CallFunction v255, [v13]
    v259 <- LoadString '1'
EndBlockStatement
BeginBlockStatement
    v260 <- LoadString '10100110000100101000011100101'
    v261 <- LoadInteger '2'
    v262 <- LoadInteger '348279013'
    v263 <- CallFunction v2, [v262]
    v264 <- CallMethod v263, 'toString', [v261]
    v265 <- LoadString '-110110100010011111001011111'
    v266 <- LoadInteger '2'
    v267 <- LoadInteger '114376287'
    v268 <- UnaryOperation '-', v267
    v269 <- CallFunction v2, [v268]
    v270 <- CallMethod v269, 'toString', [v266]
    v271 <- LoadString '1001222020000100000'
    v272 <- LoadInteger '3'
    v273 <- LoadInteger '415705203'
    v274 <- CallFunction v2, [v273]
    v275 <- CallMethod v274, 'toString', [v272]
    v276 <- LoadString '-1212101122110102020'
    v277 <- LoadInteger '3'
    v278 <- LoadInteger '723103422'
    v279 <- UnaryOperation '-', v278
    v280 <- CallFunction v2, [v279]
    v281 <- CallMethod v280, 'toString', [v277]
    v282 <- LoadString '120303133110120'
    v283 <- LoadInteger '4'
    v284 <- LoadInteger '416150808'
    v285 <- CallFunction v2, [v284]
    v286 <- CallMethod v285, 'toString', [v283]
    v287 <- LoadString '-113203101020122'
    v288 <- LoadInteger '4'
    v289 <- LoadInteger '395121178'
    v290 <- UnaryOperation '-', v289
    v291 <- CallFunction v2, [v290]
    v292 <- CallMethod v291, 'toString', [v288]
    v293 <- LoadString '1323302233400'
    v294 <- LoadInteger '5'
    v295 <- LoadInteger '417227350'
    v296 <- CallFunction v2, [v295]
    v297 <- CallMethod v296, 'toString', [v294]
    v298 <- LoadString '-2301033210212'
    v299 <- LoadInteger '5'
    v300 <- LoadInteger '637006932'
    v301 <- UnaryOperation '-', v300
    v302 <- CallFunction v2, [v301]
    v303 <- CallMethod v302, 'toString', [v299]
    v304 <- LoadString '131050115130'
    v305 <- LoadInteger '6'
    v306 <- LoadInteger '555683166'
    v307 <- CallFunction v2, [v306]
    v308 <- CallMethod v307, 'toString', [v305]
    v309 <- LoadString '-104353333321'
    v310 <- LoadInteger '6'
    v311 <- LoadInteger '409714321'
    v312 <- UnaryOperation '-', v311
    v313 <- CallFunction v2, [v312]
    v314 <- CallMethod v313, 'toString', [v310]
    v315 <- LoadString '25466260221'
    v316 <- LoadInteger '7'
    v317 <- LoadInteger '795473022'
    v318 <- CallFunction v2, [v317]
    v319 <- CallMethod v318, 'toString', [v316]
    v320 <- LoadString '-31051540346'
    v321 <- LoadInteger '7'
    v322 <- LoadInteger '892108538'
    v323 <- UnaryOperation '-', v322
    v324 <- CallFunction v2, [v323]
    v325 <- CallMethod v324, 'toString', [v321]
    v326 <- LoadString '5004630525'
    v327 <- LoadInteger '8'
    v328 <- LoadInteger '672346453'
    v329 <- CallFunction v2, [v328]
    v330 <- CallMethod v329, 'toString', [v327]
    v331 <- LoadString '-7633240703'
    v332 <- LoadInteger '8'
    v333 <- LoadInteger '1047347651'
    v334 <- UnaryOperation '-', v333
    v335 <- CallFunction v2, [v334]
    v336 <- CallMethod v335, 'toString', [v332]
    v337 <- LoadString '705082365'
    v338 <- LoadInteger '9'
    v339 <- LoadInteger '304038500'
    v340 <- CallFunction v2, [v339]
    v341 <- CallMethod v340, 'toString', [v338]
    v342 <- LoadString '-780654431'
    v343 <- LoadInteger '9'
    v344 <- LoadInteger '339981166'
    v345 <- UnaryOperation '-', v344
    v346 <- CallFunction v2, [v345]
    v347 <- CallMethod v346, 'toString', [v343]
    v348 <- LoadString '297019028'
    v349 <- LoadInteger '10'
    v350 <- LoadInteger '297019028'
    v351 <- CallFunction v2, [v350]
    v352 <- CallMethod v351, 'toString', [v349]
    v353 <- LoadString '-721151126'
    v354 <- LoadInteger '10'
    v355 <- LoadInteger '721151126'
    v356 <- UnaryOperation '-', v355
    v357 <- CallFunction v2, [v356]
    v358 <- CallMethod v357, 'toString', [v354]
    v359 <- LoadString '312914074'
    v360 <- LoadInteger '11'
    v361 <- LoadInteger '667576441'
    v362 <- CallFunction v2, [v361]
    v363 <- CallMethod v362, 'toString', [v360]
    v364 <- LoadString '-198025592'
    v365 <- LoadInteger '11'
    v366 <- LoadInteger '403952551'
    v367 <- UnaryOperation '-', v366
    v368 <- CallFunction v2, [v367]
    v369 <- CallMethod v368, 'toString', [v365]
    v370 <- LoadString '191370997'
    v371 <- LoadInteger '12'
    v372 <- LoadInteger '756347011'
    v373 <- CallFunction v2, [v372]
    v374 <- CallMethod v373, 'toString', [v371]
    v375 <- LoadString '-1b8aab4a2'
    v376 <- LoadInteger '12'
    v377 <- LoadInteger '850734842'
    v378 <- UnaryOperation '-', v377
    v379 <- CallFunction v2, [v378]
    v380 <- CallMethod v379, 'toString', [v376]
    v381 <- LoadString '7818062c'
    v382 <- LoadInteger '13'
    v383 <- LoadInteger '478454924'
    v384 <- CallFunction v2, [v383]
    v385 <- CallMethod v384, 'toString', [v382]
    v386 <- LoadString '-7529695b'
    v387 <- LoadInteger '13'
    v388 <- LoadInteger '464388078'
    v389 <- UnaryOperation '-', v388
    v390 <- CallFunction v2, [v389]
    v391 <- CallMethod v390, 'toString', [v387]
    v392 <- LoadString '6bc929c4'
    v393 <- LoadInteger '14'
    v394 <- LoadInteger '722112976'
    v395 <- CallFunction v2, [v394]
    v396 <- CallMethod v395, 'toString', [v393]
    v397 <- LoadString '-63042008'
    v398 <- LoadInteger '14'
    v399 <- LoadInteger '655228792'
    v400 <- UnaryOperation '-', v399
    v401 <- CallFunction v2, [v400]
    v402 <- CallMethod v401, 'toString', [v398]
    v403 <- LoadString '5e8b8dec'
    v404 <- LoadInteger '15'
    v405 <- LoadInteger '1020427647'
    v406 <- CallFunction v2, [v405]
    v407 <- CallMethod v406, 'toString', [v404]
    v408 <- LoadString '-4005433d'
    v409 <- LoadInteger '15'
    v410 <- LoadInteger '683704858'
    v411 <- UnaryOperation '-', v410
    v412 <- CallFunction v2, [v411]
    v413 <- CallMethod v412, 'toString', [v409]
    v414 <- LoadString '10b35ca3'
    v415 <- LoadInteger '16'
    v416 <- LoadInteger '280190115'
    v417 <- CallFunction v2, [v416]
    v418 <- CallMethod v417, 'toString', [v415]
    v419 <- LoadString '-23d4d9d6'
    v420 <- LoadInteger '16'
    v421 <- LoadInteger '601151958'
    v422 <- UnaryOperation '-', v421
    v423 <- CallFunction v2, [v422]
    v424 <- CallMethod v423, 'toString', [v420]
    v425 <- LoadString '28c3d5e3'
    v426 <- LoadInteger '17'
    v427 <- LoadInteger '1031132300'
    v428 <- CallFunction v2, [v427]
    v429 <- CallMethod v428, 'toString', [v426]
    v430 <- LoadString '-10c06328'
    v431 <- LoadInteger '17'
    v432 <- LoadInteger '427407344'
    v433 <- UnaryOperation '-', v432
    v434 <- CallFunction v2, [v433]
    v435 <- CallMethod v434, 'toString', [v431]
    v436 <- LoadString 'eb8d349'
    v437 <- LoadInteger '18'
    v438 <- LoadInteger '497873061'
    v439 <- CallFunction v2, [v438]
    v440 <- CallMethod v439, 'toString', [v437]
    v441 <- LoadString '-1217015h'
    v442 <- LoadInteger '18'
    v443 <- LoadInteger '682869311'
    v444 <- UnaryOperation '-', v443
    v445 <- CallFunction v2, [v444]
    v446 <- CallMethod v445, 'toString', [v442]
    v447 <- LoadString '1018520b'
    v448 <- LoadInteger '19'
    v449 <- LoadInteger '897425434'
    v450 <- CallFunction v2, [v449]
    v451 <- CallMethod v450, 'toString', [v448]
    v452 <- LoadString '-9c64e33'
    v453 <- LoadInteger '19'
    v454 <- LoadInteger '453940593'
    v455 <- UnaryOperation '-', v454
    v456 <- CallFunction v2, [v455]
    v457 <- CallMethod v456, 'toString', [v453]
    v458 <- LoadString 'd7bf9ab'
    v459 <- LoadInteger '20'
    v460 <- LoadInteger '856283811'
    v461 <- CallFunction v2, [v460]
    v462 <- CallMethod v461, 'toString', [v459]
    v463 <- LoadString '-58h0h9h'
    v464 <- LoadInteger '20'
    v465 <- LoadInteger '348326997'
    v466 <- UnaryOperation '-', v465
    v467 <- CallFunction v2, [v466]
    v468 <- CallMethod v467, 'toString', [v464]
    v469 <- LoadString '64igi9h'
    v470 <- LoadInteger '21'
    v471 <- LoadInteger '534590108'
    v472 <- CallFunction v2, [v471]
    v473 <- CallMethod v472, 'toString', [v470]
    v474 <- LoadString '-45cbc4a'
    v475 <- LoadInteger '21'
    v476 <- LoadInteger '365926018'
    v477 <- UnaryOperation '-', v476
    v478 <- CallFunction v2, [v477]
    v479 <- CallMethod v478, 'toString', [v475]
    v480 <- LoadString '7bi7d1h'
    v481 <- LoadInteger '22'
    v482 <- LoadInteger '854646755'
    v483 <- CallFunction v2, [v482]
    v484 <- CallMethod v483, 'toString', [v481]
    v485 <- LoadString '-61j743l'
    v486 <- LoadInteger '22'
    v487 <- LoadInteger '689960479'
    v488 <- UnaryOperation '-', v487
    v489 <- CallFunction v2, [v488]
    v490 <- CallMethod v489, 'toString', [v486]
    v491 <- LoadString '5g5gg25'
    v492 <- LoadInteger '23'
    v493 <- LoadInteger '844763325'
    v494 <- CallFunction v2, [v493]
    v495 <- CallMethod v494, 'toString', [v492]
    v496 <- LoadString '-3359flb'
    v497 <- LoadInteger '23'
    v498 <- LoadInteger '464933833'
    v499 <- UnaryOperation '-', v498
    v500 <- CallFunction v2, [v499]
    v501 <- CallMethod v500, 'toString', [v497]
    v502 <- LoadString '392f5ec'
    v503 <- LoadInteger '24'
    v504 <- LoadInteger '645846684'
    v505 <- CallFunction v2, [v504]
    v506 <- CallMethod v505, 'toString', [v503]
    v507 <- LoadString '-2ab3icb'
    v508 <- LoadInteger '24'
    v509 <- LoadInteger '465533867'
    v510 <- UnaryOperation '-', v509
    v511 <- CallFunction v2, [v510]
    v512 <- CallMethod v511, 'toString', [v508]
    v513 <- LoadString '3jb2afo'
    v514 <- LoadInteger '25'
    v515 <- LoadInteger '922303524'
    v516 <- CallFunction v2, [v515]
    v517 <- CallMethod v516, 'toString', [v514]
    v518 <- LoadString '-30bcheh'
    v519 <- LoadInteger '25'
    v520 <- LoadInteger '736917242'
    v521 <- UnaryOperation '-', v520
    v522 <- CallFunction v2, [v521]
    v523 <- CallMethod v522, 'toString', [v519]
    v524 <- LoadString '3845agk'
    v525 <- LoadInteger '26'
    v526 <- LoadInteger '1023721316'
    v527 <- CallFunction v2, [v526]
    v528 <- CallMethod v527, 'toString', [v525]
    v529 <- LoadString '-1gpjl3g'
    v530 <- LoadInteger '26'
    v531 <- LoadInteger '510790426'
    v532 <- UnaryOperation '-', v531
    v533 <- CallFunction v2, [v532]
    v534 <- CallMethod v533, 'toString', [v530]
    v535 <- LoadString '20bpaf0'
    v536 <- LoadInteger '27'
    v537 <- LoadInteger '781186599'
    v538 <- CallFunction v2, [v537]
    v539 <- CallMethod v538, 'toString', [v536]
    v540 <- LoadString '-292i3c2'
    v541 <- LoadInteger '27'
    v542 <- LoadInteger '905400830'
    v543 <- UnaryOperation '-', v542
    v544 <- CallFunction v2, [v543]
    v545 <- CallMethod v544, 'toString', [v541]
    v546 <- LoadString '266113k'
    v547 <- LoadInteger '28'
    v548 <- LoadInteger '1070753592'
    v549 <- CallFunction v2, [v548]
    v550 <- CallMethod v549, 'toString', [v547]
    v551 <- LoadString '-1eh16bo'
    v552 <- LoadInteger '28'
    v553 <- LoadInteger '733311596'
    v554 <- UnaryOperation '-', v553
    v555 <- CallFunction v2, [v554]
    v556 <- CallMethod v555, 'toString', [v552]
    v557 <- LoadString '19gj7qa'
    v558 <- LoadInteger '29'
    v559 <- LoadInteger '791210200'
    v560 <- CallFunction v2, [v559]
    v561 <- CallMethod v560, 'toString', [v558]
    v562 <- LoadString '-13a0apf'
    v563 <- LoadInteger '29'
    v564 <- LoadInteger '663438728'
    v565 <- UnaryOperation '-', v564
    v566 <- CallFunction v2, [v565]
    v567 <- CallMethod v566, 'toString', [v563]
    v568 <- LoadString 'iasrb8'
    v569 <- LoadInteger '30'
    v570 <- LoadInteger '446280638'
    v571 <- CallFunction v2, [v570]
    v572 <- CallMethod v571, 'toString', [v569]
    v573 <- LoadString '-frlhoc'
    v574 <- LoadInteger '30'
    v575 <- LoadInteger '386953032'
    v576 <- UnaryOperation '-', v575
    v577 <- CallFunction v2, [v576]
    v578 <- CallMethod v577, 'toString', [v574]
    v579 <- LoadString 'bfe4p2'
    v580 <- LoadInteger '31'
    v581 <- LoadInteger '329195171'
    v582 <- CallFunction v2, [v581]
    v583 <- CallMethod v582, 'toString', [v580]
    v584 <- LoadString '-ioal1a'
    v585 <- LoadInteger '31'
    v586 <- LoadInteger '537807354'
    v587 <- UnaryOperation '-', v586
    v588 <- CallFunction v2, [v587]
    v589 <- CallMethod v588, 'toString', [v585]
    v590 <- LoadString 'm0v0kf'
    v591 <- LoadInteger '32'
    v592 <- LoadInteger '739213967'
    v593 <- CallFunction v2, [v592]
    v594 <- CallMethod v593, 'toString', [v591]
    v595 <- LoadString '-g4bab5'
    v596 <- LoadInteger '32'
    v597 <- LoadInteger '541436261'
    v598 <- UnaryOperation '-', v597
    v599 <- CallFunction v2, [v598]
    v600 <- CallMethod v599, 'toString', [v596]
    v601 <- LoadString '9i1kit'
    v602 <- LoadInteger '33'
    v603 <- LoadInteger '373623455'
    v604 <- CallFunction v2, [v603]
    v605 <- CallMethod v604, 'toString', [v602]
    v606 <- LoadString '-fqb0e7'
    v607 <- LoadInteger '33'
    v608 <- LoadInteger '618260617'
    v609 <- UnaryOperation '-', v608
    v610 <- CallFunction v2, [v609]
    v611 <- CallMethod v610, 'toString', [v607]
    v612 <- LoadString 'gb9r6m'
    v613 <- LoadInteger '34'
    v614 <- LoadInteger '742051654'
    v615 <- CallFunction v2, [v614]
    v616 <- CallMethod v615, 'toString', [v613]
    v617 <- LoadString '-jcaemv'
    v618 <- LoadInteger '34'
    v619 <- LoadInteger '879719091'
    v620 <- UnaryOperation '-', v619
    v621 <- CallFunction v2, [v620]
    v622 <- CallMethod v621, 'toString', [v618]
    v623 <- LoadString 'cw4mbk'
    v624 <- LoadInteger '35'
    v625 <- LoadInteger '678481355'
    v626 <- CallFunction v2, [v625]
    v627 <- CallMethod v626, 'toString', [v624]
    v628 <- LoadString '-hw4eki'
    v629 <- LoadInteger '35'
    v630 <- LoadInteger '941081243'
    v631 <- UnaryOperation '-', v630
    v632 <- CallFunction v2, [v631]
    v633 <- CallMethod v632, 'toString', [v629]
    v634 <- LoadString 'alzwgj'
    v635 <- LoadInteger '36'
    v636 <- LoadInteger '641608723'
    v637 <- CallFunction v2, [v636]
    v638 <- CallMethod v637, 'toString', [v635]
    v639 <- LoadString '-bo4ukz'
    v640 <- LoadInteger '36'
    v641 <- LoadInteger '705664979'
    v642 <- UnaryOperation '-', v641
    v643 <- CallFunction v2, [v642]
    v644 <- CallMethod v643, 'toString', [v640]
    v645 <- BeginPlainFunction -> v646, v647
        v648 <- LoadString '0123456789abcdefghijklmnopqrstuvwxyz'
        v649 <- CreateNamedVariable 'alphabet', 'const', v648
        v650 <- LoadInteger '0'
        v651 <- CreateNamedVariable 'result', 'var', v650
        v652 <- CallFunction v2, [v647]
        v653 <- CreateNamedVariable 'base', 'var', v652
        v654 <- LoadInteger '0'
        v655 <- CreateNamedVariable 'index', 'var', v654
        v656 <- LoadBoolean 'false'
        v657 <- CreateNamedVariable 'negative', 'var', v656
        v658 <- GetElement v646, '0'
        v659 <- LoadString '-'
        v660 <- Compare v658, '===', v659
        BeginIf v660
            v661 <- LoadBoolean 'true'
            Reassign v657, v661
            v662 <- UnaryOperation v655, '++'
        EndIf
        BeginForLoopInitializer
        BeginForLoopCondition
            v663 <- GetProperty v646, 'length'
            v664 <- Compare v655, '<', v663
        BeginForLoopAfterthought v664
            v665 <- UnaryOperation v655, '++'
        BeginForLoopBody
            v666 <- GetComputedProperty v646, v655
            v667 <- CallMethod v649, 'indexOf', [v666]
            v668 <- CreateNamedVariable 'digit', 'var', v667
            v669 <- LoadInteger '0'
            v670 <- Compare v668, '>=', v669
            v671 <- Compare v668, '<', v647
            v672 <- BinaryOperation v670, '&&', v671
            v673 <- BinaryOperation v651, '*', v653
            v674 <- CallFunction v2, [v668]
            v675 <- BinaryOperation v673, '+', v674
            Reassign v651, v675
        EndForLoop
        BeginIf v657
            v676 <- UnaryOperation '-', v651
            Reassign v651, v676
        EndIf
        Return v651
    EndPlainFunction
    v677 <- LoadInteger '0'
    v678 <- LoadInteger '0'
    v679 <- LoadString '1100110001100010110011110110010010001011100111100101111000111101100001000'
    v680 <- LoadString '1001200022210010220101120212021002011002201122200002211102120120021011020'
    v681 <- LoadString '1111113020012203332320220022231110130001001320122012131311333110012023232'
    v682 <- LoadString '4214313040222110434114402342013144321401424143322013320403411012033300312'
    v683 <- LoadString '5025302003542512450341430541203424555035430434034243510233043041501130015'
    v684 <- LoadString '6231052230016515343200525230300322104013130605414211331345043144525012021'
    v685 <- LoadString '1146340505617030644211355340006353546230356336306352536433054143503442135'
    v686 <- LoadString '7262360724624787621528668212168232276348417717770383567066203032200270570'
    v687 <- LoadString '7573792356581293501680046955899735043496925151216904903504319328753434194'
    v688 <- LoadString '4a627927557579898720a42647639128174a8689889766a219342133671449069a2235011'
    v689 <- LoadString '1a574a5848289924996342a32893380690322330393633b587ba5a15b7b82080222400464'
    v690 <- LoadString '5163304c74c387b7a443c92466688595b671a3329b42083b1499b0c10a74a9298a06c3a5a'
    v691 <- LoadString '4b63c834356a03c80946133284a709cbbc2a75022757207dc31c14abd4c160dc122327c17'
    v692 <- LoadString 'd8d59cbb4ca2860de7c002eee4ab3c215b90069200d20dbdc0111cb1e1bab97e8c7609670'
    v693 <- LoadString '22d4b69398a7f848e6ae36798811cd1a63d90f340d8607f3ce5566c97c18468787eb2b9fd'
    v694 <- LoadString '1176gf69afd32cc105fa70c705927a384dbdb1g8d952f28028g31ebdc9e32a89f16e825ee'
    v695 <- LoadString '5d64b74f4d70632h4ee07h7c1e2da9125c42g2727f4b6d95e5cec6ga49566hh731ab5f544'
    v696 <- LoadString '7ff8cg7f05dd72916a09a4761ii7b0ibcg68ba39b10436f14efg76ge817317badcbi4gffc'
    v697 <- LoadString '6d7c4hci6cd72e4ja26j354i12i71gb0cbj12gi145j91h02hde3b72c65geb7ff9bi9d0c2b'
    v698 <- LoadString 'c96997f50abe425d13a53kk4af631kg7db208ka5j5bfg8ca5f9c0bjf69j5kgg4jb5h7hi86'
    v699 <- LoadString '3g5fd800d9ib9j0i8all5jgb23dh9483ab6le5ad9g4kja8a0b3j5jbjfge7k5fffg2kbheee'
    v700 <- LoadString '9j1119d1cd61kmdm7kma105cki313f678fc3h25f4664281bbmg3fk97kfbh7d48j89j178ch'
    v701 <- LoadString 'd2933cdc9jfe4hl3794kb3e13dg2lihad968ib9jg19dgf1fi482b27ji0d10c6kfkdge5764'
    v702 <- LoadString 'bf6o0jkm1ij5in0h7h94584bd80el02b07el5ojk9k9g0gn906do70gbbnckl048c0kdmao'
    v703 <- LoadString '8gb7jnge9p9cdgigo394oa33gfaenc3gnb53eceg4b8511gkkm88b0dod85e5bggpc861d7d5'
    v704 <- LoadString 'qbbnqhkpleb4o0daddpc34h5b2iljn3jgnjdn5k57bi09i09hjle9hqgqdpgbnk499mak56'
    v705 <- LoadString 'akg7e2976arn8i2m53gif0dp59bmfd7mk9erlg2qm3fc76da9glf397eh4ooij9il0fl9gac'
    v706 <- LoadString 'mehpbfrj5ah2ef3p2hl637gjp1pm5grqn4037pm1qfgfpr9cfljfc145hljehjjb48bb06en'
    v707 <- LoadString 'rg6ik3agnb3p6t2rtja9h4il76i8fkqlt6gplap3fq6pfr7bbcfcp5ffncf0m4kamap39hse'
    v708 <- LoadString 'bk8rp9r9r8pltdqpb7euc6s9rcm33969pcq6uk3mtfoktt86di8589oacbam5tn29b9b6dq3j'
    v709 <- LoadString 'npth8juld44rss3e57iigjg65po3d1h02heo4r103jmg3ocv89buqtgiov35k39rdf8j9t4ca'
    v710 <- LoadString 'vrmqlwrrrd0uml1womae49jpa9tadh44fw7mucgk06l0uk4uqwuo37t6kwn7wwrm3a6oq081s'
    v711 <- LoadString 'n5cft6gvufqd8iksquu2amghokk17gbtpguidc290af634p7k7rhmfu7bf1s62ej4megoa1j4'
    v712 <- LoadString '3v3gcrmlfc2tl0tefgkiogj41f6y2tmj9w5bxke8y03xqf49ox8gh9wbrhycrkluicqajtnur'
    v713 <- LoadString 'z2m7b0sy2tzergtkqts5yj0dkrlfkxls81ijgxgfequizpntcwggv2d4rdzcncd0kj9mrmnrb'
    v714 <- CreateArray [v677, v678, v679, v680, v681, v682, v683, v684, v685, v686, v687, v688, v689, v690, v691, v692, v693, v694, v695, v696, v697, v698, v699, v700, v701, v702, v703, v704, v705, v706, v707, v708, v709, v710, v711, v712, v713]
    v715 <- CreateNamedVariable 'positive', 'var', v714
    v716 <- LoadInteger '0'
    v717 <- LoadInteger '0'
    v718 <- LoadString '-100010011110111010111111110001100100111010101000001011010010101100101000'
    v719 <- LoadString '-110012122000122102021210112200001000122011010120101201001122000002022102'
    v720 <- LoadString '-203210320111001002200122200001312300221100221321010300023323201113122333'
    v721 <- LoadString '-133042441230110320040323303341320302144241224443231311022240124413104131'
    v722 <- LoadString '-311325230504055004330150145105331121322231155401110315251422505233103112'
    v723 <- LoadString '-643153641664240231336166403516403454646560261062114326443664602606315326'
    v724 <- LoadString '-200057252627665476551635525303641543165622340301637556323453513664337277'
    v725 <- LoadString '-826688166214270516331644053744613530235020517172322840763172114078364165'
    v726 <- LoadString '-743042397390679269240157150971957535458122650450558451124173993544604852'
    v727 <- LoadString '-73528688500003573942a56a504a2996a1384129563098512a63196697975038692aaa63'
    v728 <- LoadString '-616576a2948a9029316290168b71137b027851639a0283150b125b664b74b767a3597805'
    v729 <- LoadString '-b875467540719b371b7a36047a7886872a5399c4c630c37149bc3182917a7a7c124475bb'
    v730 <- LoadString '-3860411b61d35977721bc81bd715c386c9b70a752940913d265505d8c7c5dd2624b591d7'
    v731 <- LoadString '-bad5dd79b083ee0da9a6296664e72c246d827762357116ae7076a22bb369acbc3a201d03'
    v732 <- LoadString '-f9b37352aff265124303942a463917a252ff1a2ff4a33777f490b4c103bdcd1a655dbe2c'
    v733 <- LoadString '-805fg8c74125214g383a8d8g573c49fa7c4035fbc6db61g5gb5g6beb8f90dae4a9a5g7cc'
    v734 <- LoadString '-70aae113459d3h5084b1gg209g3695d20e78d01gcbb71bh1bd4gdge31haf5hc02dghf14e'
    v735 <- LoadString '-c55a57haf47b7ih2gh6ea93098ig02b42icga6ead254e0aeeic7g53h5fd6637ge03b2e20'
    v736 <- LoadString '-e32f7204624ie596j731g72136cejc25ebbgb0140i4997fcdf477f021d86ci4e10db543a'
    v737 <- LoadString '-i7f32c817i3cac1c24c7786k6ig185f47cj1471ki6bb7agiae838027gjge9g59if9f88g6'
    v738 <- LoadString '-i30aha2030a9605c270h92e1ca3i02j996hl918gh52fbhb7i16ik1i919ieak3cj384kb61'
    v739 <- LoadString '-58jmem8e59li67aellid2083dabh4kh51ci1jg7c6a3k4l1hdgfkdha0fglfm4805kida5b9'
    v740 <- LoadString '-cl9iecjg9ak087cad4151lll44296heae2349g70fbjj37998m2ddn6427fgcl2aknhgn1a1'
    v741 <- LoadString '-alfjfhho4gf8bi4j2bi3743mhg2aache4c6jcinkmf5ddm7kf9gg350hlja16ealbdlk201j'
    v742 <- LoadString '-bhh1146ho3o2m3b839c565hbgjnhjh96oofbmdl7gn8h4f94kli94hkk180o79pc4d2l0721'
    v743 <- LoadString '-p00gknh7e05k6a3apg6i9lb46f4a9qeeiq1778ak8il5dcponk5gl2fiednb4pmo1agmoqph'
    v744 <- LoadString '-4j8lo4d4p508fnd2hkfb76e8ri81k6hq0op3pr14ca096pccplk7rbahc9cdkdce1q16dn'
    v745 <- LoadString '-ednlo3ogf2i8annrel9rm323bpf00meed3oi400qrdgnd03il4bnsc9s2jd7loh44im8ra'
    v746 <- LoadString '-bjjg6fsbpcc2tc1o09m9r6fd6eoq5480har62a5offn9thcfahbno9kf9magl2akl0jgncj9'
    v747 <- LoadString '-sonuhat2h60glpbpej9jjado2s5l86122d26tudoc1d6aic2oitu793gk0mlac3dk1dufp1q'
    v748 <- LoadString '-i9pbvm53ubh8jqifuarauch8cbgk9cjsl6rlioka1phs1lskg1oosll23hjoli2subgr1rto'
    v749 <- LoadString '-w05t60b5dv669ekwnvk02g7djrsl8cdkwun8o3m5divc3jhnkp2381rhj70gc71a6wff'
    v750 <- LoadString '-buiq8v33p5ex44ps4s45enj6lrluivm19lcowkvntu72u0xguw13bxgxxe7mdlwt1a4qksae'
    v751 <- LoadString '-woiycfmea6i12r2yai49mf4lbd7w2jdoebiogfhnh1i4rwgox57obci8qbsfpb4w00u19m5'
    v752 <- LoadString '-tbttuip1r6ioca6g6dw354o4m78qep9yh00ojx47yq29fqime6zstwllb74501qct8eskxn'
    v753 <- CreateArray [v716, v717, v718, v719, v720, v721, v722, v723, v724, v725, v726, v727, v728, v729, v730, v731, v732, v733, v734, v735, v736, v737, v738, v739, v740, v741, v742, v743, v744, v745, v746, v747, v748, v749, v750, v751, v752]
    v754 <- CreateNamedVariable 'negative', 'var', v753
    BeginForLoopInitializer
        v755 <- LoadInteger '2'
    BeginForLoopCondition -> v756
        v757 <- LoadInteger '36'
        v758 <- Compare v756, '<=', v757
    BeginForLoopAfterthought v758 -> v759
        v760 <- UnaryOperation v759, '++'
    BeginForLoopBody -> v761
        v762 <- GetComputedProperty v715, v761
        v763 <- CreateNamedVariable 'input', 'var', v762
        v764 <- CallFunction v645, [v763, v761]
        v765 <- CallMethod v764, 'toString', [v761]
        v766 <- GetComputedProperty v754, v761
        Reassign v763, v766
        v767 <- CallFunction v645, [v763, v761]
        v768 <- CallMethod v767, 'toString', [v761]
    EndForLoop
EndBlockStatement
BeginBlockStatement
    v769 <- CreateNamedVariable 'Object', 'none'
    v770 <- CallFunction v769, [v7]
    v771 <- CallMethod v770, 'valueOf', []
    v772 <- BeginArrowFunction -> 
        v773 <- LoadString 'string'
        v774 <- GetProperty v2, 'prototype'
        v775 <- GetProperty v774, 'valueOf'
        v776 <- CallMethod v775, 'call', [v773]
        Return v776
    EndArrowFunction
    v777 <- CallFunction v772, []
    v778 <- CreateNamedVariable 'TypeError', 'none'
    v779 <- LoadInteger '40'
    v780 <- UnaryOperation '-', v779
    v781 <- LoadInteger '40'
    v782 <- UnaryOperation '-', v781
    v783 <- CallFunction v769, [v782]
    v784 <- CallMethod v783, 'valueOf', []
EndBlockStatement
BeginBlockStatement
    v785 <- UnaryOperation '!', v7
    v786 <- UnaryOperation '!', v7
    v787 <- UnaryOperation '!', v786
    v788 <- UnaryOperation '!', v7
    v789 <- UnaryOperation '!', v788
    v790 <- UnaryOperation '!', v789
    v791 <- UnaryOperation '!', v13
    v792 <- UnaryOperation '!', v13
    v793 <- UnaryOperation '!', v792
    v794 <- UnaryOperation '!', v13
    v795 <- UnaryOperation '!', v794
    v796 <- UnaryOperation '!', v795
EndBlockStatement
BeginBlockStatement
    v797 <- BeginArrowFunction -> 
        v798 <- CreateNamedVariable 'isNaN', 'none'
        v799 <- CallFunction v798, [v7]
        Return v799
    EndArrowFunction
    v800 <- CallFunction v797, []
    v801 <- CreateNamedVariable 'TypeError', 'none'
    v802 <- BeginArrowFunction -> 
        v803 <- CreateNamedVariable 'isNaN', 'none'
        v804 <- CallFunction v803, [v13]
        Return v804
    EndArrowFunction
    v805 <- CallFunction v802, []
    v806 <- BeginArrowFunction -> 
        v807 <- UnaryOperation '+', v7
        Return v807
    EndArrowFunction
    v808 <- CallFunction v806, []
    v809 <- BeginArrowFunction -> 
        v810 <- UnaryOperation '+', v13
        Return v810
    EndArrowFunction
    v811 <- CallFunction v809, []
EndBlockStatement
BeginBlockStatement
    BeginObjectLiteral
        BeginObjectLiteralMethod `valueOf` -> v812
            Return v7
        EndObjectLiteralMethod
    v813 <- EndObjectLiteral
    v814 <- CreateNamedVariable 'Zero', 'let', v813
    BeginObjectLiteral
        BeginObjectLiteralMethod `valueOf` -> v815
            Return v13
        EndObjectLiteralMethod
    v816 <- EndObjectLiteral
    v817 <- CreateNamedVariable 'One', 'let', v816
    v818 <- BeginArrowFunction -> 
        v819 <- CreateNamedVariable 'isNaN', 'none'
        v820 <- CallFunction v819, [v814]
        Return v820
    EndArrowFunction
    v821 <- CallFunction v818, []
    v822 <- CreateNamedVariable 'TypeError', 'none'
    v823 <- BeginArrowFunction -> 
        v824 <- CreateNamedVariable 'isNaN', 'none'
        v825 <- CallFunction v824, [v817]
        Return v825
    EndArrowFunction
    v826 <- CallFunction v823, []
    v827 <- BeginArrowFunction -> 
        v828 <- UnaryOperation '+', v814
        Return v828
    EndArrowFunction
    v829 <- CallFunction v827, []
    v830 <- BeginArrowFunction -> 
        v831 <- UnaryOperation '+', v817
        Return v831
    EndArrowFunction
    v832 <- CallFunction v830, []
EndBlockStatement
BeginBlockStatement
    BeginObjectLiteral
        BeginObjectLiteralMethod `valueOf` -> v833
            v834 <- CreateNamedVariable 'NaN', 'none'
            v835 <- CreateNamedVariable 'Object', 'none'
            v836 <- CallFunction v835, [v834]
            Return v836
        EndObjectLiteralMethod
        BeginObjectLiteralMethod `toString` -> v837
            Return v7
        EndObjectLiteralMethod
    v838 <- EndObjectLiteral
    v839 <- CreateNamedVariable 'Zero', 'let', v838
    BeginObjectLiteral
        BeginObjectLiteralMethod `valueOf` -> v840
            Return v13
        EndObjectLiteralMethod
        BeginObjectLiteralMethod `toString` -> v841
            v842 <- CreateNamedVariable 'NaN', 'none'
            Return v842
        EndObjectLiteralMethod
    v843 <- EndObjectLiteral
    v844 <- CreateNamedVariable 'One', 'let', v843
    v845 <- BeginArrowFunction -> 
        v846 <- CreateNamedVariable 'isNaN', 'none'
        v847 <- CallFunction v846, [v839]
        Return v847
    EndArrowFunction
    v848 <- CallFunction v845, []
    v849 <- CreateNamedVariable 'TypeError', 'none'
    v850 <- BeginArrowFunction -> 
        v851 <- CreateNamedVariable 'isNaN', 'none'
        v852 <- CallFunction v851, [v844]
        Return v852
    EndArrowFunction
    v853 <- CallFunction v850, []
    v854 <- BeginArrowFunction -> 
        v855 <- UnaryOperation '+', v839
        Return v855
    EndArrowFunction
    v856 <- CallFunction v854, []
    v857 <- BeginArrowFunction -> 
        v858 <- UnaryOperation '+', v844
        Return v858
    EndArrowFunction
    v859 <- CallFunction v857, []
EndBlockStatement
BeginBlockStatement
    v860 <- BeginArrowFunction -> v861
        v862 <- CreateNamedVariable 'Function', 'none'
        v863 <- LoadString ''
        v864 <- LoadString 'return this'
        v865 <- Construct v862, [v863, v864]
        v866 <- CallMethod v865, 'call', [v861]
        Return v866
    EndArrowFunction
    v867 <- CreateNamedVariable 'ToObject', 'const', v860
    v868 <- BeginPlainFunction -> v869
        v870 <- CallFunction v867, [v869]
        v871 <- CreateNamedVariable 'X', 'const', v870
        v872 <- TypeOf v869
        v873 <- LoadString 'bigint'
        v874 <- TypeOf v871
        v875 <- LoadString 'object'
        v876 <- GetProperty v871, 'constructor'
        v877 <- Compare v871, '==', v869
    EndPlainFunction
    v878 <- LoadInteger '0'
    v879 <- CallFunction v868, [v878]
    v880 <- LoadInteger '0'
    v881 <- UnaryOperation '-', v880
    v882 <- CallFunction v868, [v881]
    v883 <- LoadInteger '0'
    v884 <- CallFunction v868, [v883]
    v885 <- LoadFloat '2.3434234234234233e+69'
    v886 <- CallFunction v868, [v885]
EndBlockStatement
BeginBlockStatement
    v887 <- BeginPlainFunction -> v888
        v889 <- CreateNamedVariable 'Object', 'none'
        v890 <- CallFunction v889, [v888]
        v891 <- CreateNamedVariable 'X', 'const', v890
        v892 <- TypeOf v888
        v893 <- LoadString 'bigint'
        v894 <- TypeOf v891
        v895 <- LoadString 'object'
        v896 <- GetProperty v891, 'constructor'
        v897 <- Compare v891, '==', v888
    EndPlainFunction
    v898 <- LoadInteger '0'
    v899 <- CallFunction v887, [v898]
    v900 <- LoadInteger '0'
    v901 <- UnaryOperation '-', v900
    v902 <- CallFunction v887, [v901]
    v903 <- LoadInteger '0'
    v904 <- CallFunction v887, [v903]
    v905 <- LoadFloat '2.3434234234234233e+69'
    v906 <- CallFunction v887, [v905]
EndBlockStatement
BeginBlockStatement
    v907 <- LoadString '00'
    v908 <- CreateNamedVariable 'SyntaxError', 'none'
    v909 <- LoadString '00'
    v910 <- LoadString '0'
    v911 <- LoadString '0on'
    v912 <- LoadString '0xn'
    v913 <- LoadString '1.n'
    v914 <- LoadString '1.0'
    v915 <- LoadString '1e20'
    v916 <- LoadInteger '12340'
    v917 <- LoadInteger '12345'
    v918 <- CallFunction v2, [v917]
    v919 <- Compare v916, '===', v918
    v920 <- LoadInteger '0'
    v921 <- LoadInteger '703710'
    v922 <- CallFunction v2, [v921]
    v923 <- Compare v920, '===', v922
    v924 <- LoadInteger '703710'
    v925 <- LoadInteger '703710'
    v926 <- CallFunction v2, [v925]
    v927 <- Compare v924, '===', v926
    v928 <- LoadInteger '22736'
    v929 <- LoadInteger '22737'
    v930 <- CallFunction v2, [v929]
    v931 <- Compare v928, '===', v930
    v932 <- LoadInteger '84'
    v933 <- LoadInteger '85'
    v934 <- CallFunction v2, [v933]
    v935 <- Compare v932, '===', v934
EndBlockStatement
BeginBlockStatement
    BeginObjectLiteral
        BeginObjectLiteralMethod `valueOf` -> v936
            Return v13
        EndObjectLiteralMethod
    v937 <- EndObjectLiteral
    v938 <- CreateNamedVariable 'One', 'let', v937
    v939 <- BinaryOperation v13, '+', v19
    v940 <- Compare v939, '===', v22
    v941 <- BinaryOperation v938, '+', v19
    v942 <- Compare v941, '===', v22
    v943 <- BinaryOperation v19, '+', v938
    v944 <- Compare v943, '===', v22
    v945 <- LoadString 'hello1'
    v946 <- LoadString 'hello'
    v947 <- BinaryOperation v946, '+', v13
    v948 <- LoadString '2hello'
    v949 <- LoadString 'hello'
    v950 <- BinaryOperation v19, '+', v949
    v951 <- LoadString 'one + 2'
    v952 <- CreateNamedVariable 'TypeError', 'none'
    v953 <- LoadString '2 + one'
    v954 <- LoadString 'one + 0.5'
    v955 <- LoadString '0.5 + one'
    v956 <- LoadString 'one + null'
    v957 <- LoadString 'null + one'
    v958 <- BinaryOperation v22, '-', v19
    v959 <- Compare v958, '===', v13
    v960 <- LoadString 'two - 1'
    v961 <- LoadString '2 - one'
    v962 <- LoadString 'two - 0.5'
    v963 <- LoadString '2.5 - one'
    v964 <- BinaryOperation v19, '*', v22
    v965 <- Compare v964, '===', v25
    v966 <- BinaryOperation v19, '*', v938
    v967 <- Compare v966, '===', v19
    v968 <- BinaryOperation v938, '*', v19
    v969 <- Compare v968, '===', v19
    v970 <- LoadString 'two * 1'
    v971 <- LoadString '1 * two'
    v972 <- LoadString 'two * 1.5'
    v973 <- LoadString '1.5 * two'
    v974 <- BinaryOperation v25, '/', v22
    v975 <- Compare v974, '===', v19
    v976 <- LoadString 'six / 3'
    v977 <- LoadString '3 / three'
    v978 <- LoadString 'six / 0.5'
    v979 <- LoadString '0.5 / six'
    v980 <- LoadString 'zero / zero'
    v981 <- CreateNamedVariable 'RangeError', 'none'
    v982 <- LoadString 'zero / 0'
    v983 <- BinaryOperation v22, '%', v19
    v984 <- Compare v983, '===', v13
    v985 <- LoadString 'three % 2'
    v986 <- LoadString '3 % two'
    v987 <- LoadString 'three % 2.5'
    v988 <- LoadString '3.5 % two'
    v989 <- LoadString 'three % zero'
    v990 <- LoadString 'three % 0'
EndBlockStatement
BeginBlockStatement
    BeginObjectLiteral
        BeginObjectLiteralMethod `valueOf` -> v991
            Return v13
        EndObjectLiteralMethod
    v992 <- EndObjectLiteral
    v993 <- CreateNamedVariable 'One', 'let', v992
    v994 <- BinaryOperation v22, '&', v13
    v995 <- Compare v994, '===', v13
    v996 <- LoadInteger '2'
    v997 <- UnaryOperation '-', v996
    v998 <- CallFunction v2, [v997]
    v999 <- BinaryOperation v998, '&', v7
    v1000 <- Compare v999, '===', v7
    v1001 <- BinaryOperation v22, '&', v993
    v1002 <- Compare v1001, '===', v13
    v1003 <- BinaryOperation v993, '&', v22
    v1004 <- Compare v1003, '===', v13
    v1005 <- LoadString 'three & 1'
    v1006 <- CreateNamedVariable 'TypeError', 'none'
    v1007 <- LoadString '1 & three'
    v1008 <- LoadString 'three & true'
    v1009 <- LoadString 'true & three'
    v1010 <- LoadString 'three & {valueOf: function() { return 1; }}'
    v1011 <- LoadString '({valueOf: function() { return 1; }}) & three'
    v1012 <- BinaryOperation v19, '|', v13
    v1013 <- Compare v1012, '===', v22
    v1014 <- LoadString 'two | 0'
    v1015 <- LoadString '0 | two'
    v1016 <- LoadString 'two | undefined'
    v1017 <- LoadString 'undefined | two'
    v1018 <- BinaryOperation v22, '^', v13
    v1019 <- Compare v1018, '===', v19
    v1020 <- LoadString 'three ^ 1'
    v1021 <- LoadString '1 ^ three'
    v1022 <- LoadString 'three ^ 2.5'
    v1023 <- LoadString '2.5 ^ three'
EndBlockStatement
BeginBlockStatement
    v1024 <- BinaryOperation v13, '<<', v13
    v1025 <- Compare v1024, '===', v19
    v1026 <- LoadString 'one << 1'
    v1027 <- CreateNamedVariable 'TypeError', 'none'
    v1028 <- LoadString '1 << one'
    v1029 <- LoadString 'one << true'
    v1030 <- LoadString 'true << one'
    v1031 <- BinaryOperation v22, '>>', v13
    v1032 <- Compare v1031, '===', v13
    v1033 <- LoadString 'three >> 1'
    v1034 <- LoadString '0xbeef >> one'
    v1035 <- LoadString 'three >> 1.5'
    v1036 <- LoadString '23.45 >> three'
    v1037 <- LoadString 'three >>> one'
    v1038 <- LoadString 'three >>> 1'
    v1039 <- LoadString '0xbeef >>> one'
    v1040 <- LoadString 'three >>> {valueOf: function() { return 1; }}'
    v1041 <- LoadString '({valueOf: function() { return 1; }}) >>> one'
EndBlockStatement
BeginBlockStatement
    BeginObjectLiteral
        BeginObjectLiteralMethod `valueOf` -> v1042
            Return v13
        EndObjectLiteralMethod
    v1043 <- EndObjectLiteral
    v1044 <- CreateNamedVariable 'One', 'let', v1043
    v1045 <- UnaryOperation '~', v4
    v1046 <- Compare v1045, '===', v7
    v1047 <- UnaryOperation '-', v4
    v1048 <- Compare v1047, '===', v13
    v1049 <- UnaryOperation '-', v1044
    v1050 <- Compare v1049, '===', v4
    v1051 <- UnaryOperation '~', v19
    v1052 <- UnaryOperation '~', v1051
    v1053 <- Compare v1052, '===', v19
    v1054 <- UnaryOperation '-', v19
    v1055 <- UnaryOperation '-', v1054
    v1056 <- Compare v1055, '===', v19
    v1057 <- UnaryOperation '~', v1044
    v1058 <- LoadInteger '2'
    v1059 <- UnaryOperation '-', v1058
    v1060 <- CallFunction v2, [v1059]
    v1061 <- Compare v1057, '===', v1060
    v1062 <- CreateNamedVariable 'a', 'let', v4
    v1063 <- UnaryOperation v1062, '++'
    v1064 <- Compare v1063, '===', v4
    v1065 <- Compare v1062, '===', v7
    v1066 <- UnaryOperation v1062, '++'
    v1067 <- Compare v1066, '===', v7
    v1068 <- Compare v1062, '===', v13
    v1069 <- UnaryOperation '++', v1062
    v1070 <- Compare v1069, '===', v19
    v1071 <- Compare v1062, '===', v19
    v1072 <- UnaryOperation '--', v1062
    v1073 <- Compare v1072, '===', v13
    v1074 <- Compare v1062, '===', v13
    v1075 <- UnaryOperation v1062, '--'
    v1076 <- Compare v1075, '===', v13
    v1077 <- Compare v1062, '===', v7
    v1078 <- UnaryOperation v1062, '--'
    v1079 <- Compare v1078, '===', v7
    v1080 <- Compare v1062, '===', v4
    BeginObjectLiteral
        BeginObjectLiteralMethod `valueOf` -> v1081
            Return v4
        EndObjectLiteralMethod
    v1082 <- EndObjectLiteral
    Reassign v1062, v1082
    v1083 <- UnaryOperation v1062, '++'
    v1084 <- Compare v1083, '===', v4
    v1085 <- UnaryOperation v1062, '++'
    v1086 <- Compare v1085, '===', v7
    v1087 <- Compare v1062, '===', v13
    BeginObjectLiteral
        BeginObjectLiteralMethod `valueOf` -> v1088
            Return v13
        EndObjectLiteralMethod
    v1089 <- EndObjectLiteral
    Reassign v1062, v1089
    v1090 <- UnaryOperation v1062, '--'
    v1091 <- Compare v1090, '===', v13
    v1092 <- UnaryOperation v1062, '--'
    v1093 <- Compare v1092, '===', v7
    v1094 <- Compare v1062, '===', v4
EndBlockStatement
BeginBlockStatement
    BeginObjectLiteral
    v1095 <- EndObjectLiteral
    v1096 <- CreateNamedVariable 'obj', 'let', v1095
    v1097 <- GetElement v1096, '0'
    v1098 <- LoadUndefined
    v1099 <- LoadInteger '42'
    SetElement v1096, '0', v1099
    v1100 <- LoadInteger '42'
    v1101 <- GetElement v1096, '0'
    v1102 <- LoadInteger '42'
    v1103 <- GetElement v1096, '0'
    v1104 <- LoadInteger '42'
    v1105 <- GetElement v1096, '0'
    v1106 <- UnaryOperation v1105, '++'
    v1107 <- LoadInteger '0'
    v1108 <- LoadInteger '0'
    v1109 <- BinaryOperation v1107, '-', v1108
    v1110 <- GetComputedProperty v1096, v1109
    v1111 <- LoadInteger '43'
    v1112 <- LoadInteger '0'
    v1113 <- UnaryOperation '-', v1112
    v1114 <- CreateNamedVariable 'Reflect', 'none'
    v1115 <- CallMethod v1114, 'get', [v1096, v1113]
    v1116 <- LoadInteger '43'
    BeginObjectLiteral
        BeginObjectLiteralMethod `toString` -> v1117
            v1118 <- LoadInteger '0'
            Return v1118
        EndObjectLiteralMethod
    v1119 <- EndObjectLiteral
    v1120 <- GetComputedProperty v1096, v1119
    v1121 <- LoadInteger '43'
    v1122 <- CallMethod v1114, 'ownKeys', [v1096]
    v1123 <- LoadString '0'
    v1124 <- CreateArray [v1123]
EndBlockStatement
BeginBlockStatement
    BeginObjectLiteral
    v1125 <- EndObjectLiteral
    v1126 <- CreateNamedVariable 'obj', 'let', v1125
    v1127 <- LoadInteger '9007199254740990'
    v1128 <- CreateNamedVariable 'unsafe', 'const', v1127
    v1129 <- LoadInteger '23'
    SetComputedProperty v1126, v1128, v1129
    v1130 <- LoadInteger '23'
    v1131 <- GetComputedProperty v1126, v1128
    v1132 <- LoadInteger '23'
    v1133 <- CreateNamedVariable 'Reflect', 'none'
    v1134 <- CallMethod v1133, 'ownKeys', [v1126]
    v1135 <- LoadString '9007199254740993'
    v1136 <- CreateArray [v1135]
    v1137 <- GetElement v1126, '9007199254740992'
    v1138 <- LoadUndefined
    v1139 <- DeleteComputedProperty v1126, v1128
    v1140 <- CallMethod v1133, 'ownKeys', [v1126]
    v1141 <- CreateArray []
EndBlockStatement
BeginBlockStatement
    v1142 <- CreateArray []
    v1143 <- CreateNamedVariable 'arr', 'let', v1142
    v1144 <- LoadInteger '0'
    v1145 <- TestIn v1144, v1143
    v1146 <- LoadInteger '42'
    SetElement v1143, '0', v1146
    v1147 <- LoadInteger '0'
    v1148 <- TestIn v1147, v1143
    v1149 <- LoadInteger '0'
    v1150 <- CreateNamedVariable 'enumkeys', 'let', v1149
    BeginForInLoop v1143 -> v1151
        v1152 <- UnaryOperation v1150, '++'
        v1153 <- LoadString '4'
    EndForInLoop
    v1154 <- LoadInteger '1'
EndBlockStatement
BeginBlockStatement
    v1155 <- LoadString 'blubb'
    v1156 <- CreateNamedVariable 'str', 'let', v1155
    v1157 <- GetElement v1156, '0'
    v1158 <- LoadString 'u'
    v1159 <- BeginArrowFunction -> 
        v1160 <- LoadInteger '0'
        v1161 <- CallMethod v1156, 'slice', [v1160]
        Return v1161
    EndArrowFunction
    v1162 <- CallFunction v1159, []
    v1163 <- CreateNamedVariable 'TypeError', 'none'
EndBlockStatement
BeginBlockStatement
    BeginObjectLiteral
    v1164 <- EndObjectLiteral
    v1165 <- CreateNamedVariable 'obj', 'let', v1164
    v1166 <- LoadInteger '0'
    v1167 <- CreateNamedVariable 'key', 'let', v1166
    v1168 <- BeginPlainFunction -> v1169
        SetComputedProperty v1165, v1167, v1169
    EndPlainFunction
    v1170 <- LoadString 'aaa'
    v1171 <- CallFunction v1168, [v1170]
    v1172 <- LoadString 'bbb'
    v1173 <- CallFunction v1168, [v1172]
    v1174 <- LoadInteger '0'
    Reassign v1167, v1174
    v1175 <- LoadString 'ccc'
    v1176 <- CallFunction v1168, [v1175]
    v1177 <- GetComputedProperty v1165, v1167
    v1178 <- LoadString 'ccc'
    v1179 <- BeginPlainFunction -> 
        v1180 <- GetComputedProperty v1165, v1167
        Return v1180
    EndPlainFunction
    v1181 <- CallFunction v1179, []
    v1182 <- LoadString 'ccc'
    v1183 <- CallFunction v1179, []
    v1184 <- LoadString 'ccc'
    v1185 <- LoadInteger '0'
    Reassign v1167, v1185
    v1186 <- CallFunction v1179, []
    v1187 <- LoadString 'ccc'
EndBlockStatement
BeginBlockStatement
    v1188 <- LoadInteger '9007199254740990'
    v1189 <- CreateNamedVariable 'unsafe', 'const', v1188
EndBlockStatement


const minus_one = BigInt(-1);
const zero = BigInt(0);
const another_zero = BigInt(0);
const one = BigInt(1);
const another_one = BigInt(1);
const two = BigInt(2);
const three = BigInt(3);
const six = BigInt(6);
{
    BigInt.prototype.constructor;
}
{
    const v28 = () => {
        const v29 = new BigInt();
        return v29;
    };
    v28();
    const v32 = () => {
        const v33 = new BigInt();
        return v33;
    };
    v32();
    const v35 = () => {
        const v37 = new BigInt(0);
        return v37;
    };
    v35();
    const v39 = () => {
        const v41 = new BigInt(0);
        return v41;
    };
    v39();
    const v43 = () => {
        const v45 = new BigInt("0");
        return v45;
    };
    v43();
}
{
    class C47 extends BigInt {
        constructor() {
            throw 42;
        }
    }
    const v50 = () => {
        const v51 = new C47();
        return v51;
    };
    v50();
}
{
    const v54 = () => {
        return BigInt(undefined);
    };
    v54();
    const v59 = () => {
        return BigInt(null);
    };
    v59();
    const v63 = () => {
        return BigInt({});
    };
    v63();
    const v68 = () => {
        return BigInt("foo");
    };
    v68();
    const v72 = () => {
        return BigInt("1j");
    };
    v72();
    const v76 = () => {
        return BigInt("0b1ju");
    };
    v76();
    const v80 = () => {
        return BigInt("0o1jun");
    };
    v80();
    const v84 = () => {
        return BigInt("0x1junk");
    };
    v84();
}
{
    BigInt(true);
    BigInt(false);
    BigInt("");
    BigInt(" 42");
    BigInt("0b101010");
    BigInt("  0b101011");
    BigInt("0x2a  ");
    BigInt("    0x2b");
    BigInt("0o52");
    BigInt("     0o53\n");
    BigInt(-0);
    BigInt(42);
    BigInt(40);
    BigInt(Object(40));
    BigInt((2 ** 53) - 1);
    BigInt(2 ** 53);
    BigInt(2 ** 1000);
    0 ** 1000;
    BigInt(3.0755851989071915e+29);
    BigInt(-1e+50);
    -1e+50;
    BigInt(Object((2 ** 53) - 1));
    BigInt([]);
}
{
    const v171 = () => {
        return BigInt(NaN);
    };
    v171();
    const v176 = () => {
        return BigInt(-Infinity);
    };
    v176();
    const v181 = () => {
        return BigInt(+Infinity);
    };
    v181();
    const v186 = () => {
        return BigInt(4.00000001);
    };
    v186();
    const v190 = () => {
        return BigInt(Object(4.00000001));
    };
    v190();
}
{
    const toStringTag = Object.getOwnPropertyDescriptor(BigInt.prototype, Symbol.toStringTag);
    toStringTag.configurable;
    toStringTag.enumerable;
    toStringTag.writable;
    toStringTag.value;
}
{
    const toString = Object.prototype.toString;
    toString.call(40);
    toString.call(Object(40));
    const t140 = BigInt.prototype;
    delete t140[Symbol.toStringTag];
    toString.call(40);
    toString.call(Object(40));
    const t143 = BigInt.prototype;
    t143[Symbol.toStringTag] = "foo";
    toString.call(40);
    toString.call(Object(40));
}
{
    typeof zero;
    typeof one;
}
{
}
{
    typeof 0 === "bigint";
    typeof 0 === "BigInt";
    typeof 1 === "bigint";
}
{
    String(zero);
    String(one);
}
{
    BigInt(348279013).toString(2);
    BigInt(-114376287).toString(2);
    BigInt(415705203).toString(3);
    BigInt(-723103422).toString(3);
    BigInt(416150808).toString(4);
    BigInt(-395121178).toString(4);
    BigInt(417227350).toString(5);
    BigInt(-637006932).toString(5);
    BigInt(555683166).toString(6);
    BigInt(-409714321).toString(6);
    BigInt(795473022).toString(7);
    BigInt(-892108538).toString(7);
    BigInt(672346453).toString(8);
    BigInt(-1047347651).toString(8);
    BigInt(304038500).toString(9);
    BigInt(-339981166).toString(9);
    BigInt(297019028).toString(10);
    BigInt(-721151126).toString(10);
    BigInt(667576441).toString(11);
    BigInt(-403952551).toString(11);
    BigInt(756347011).toString(12);
    BigInt(-850734842).toString(12);
    BigInt(478454924).toString(13);
    BigInt(-464388078).toString(13);
    BigInt(722112976).toString(14);
    BigInt(-655228792).toString(14);
    BigInt(1020427647).toString(15);
    BigInt(-683704858).toString(15);
    BigInt(280190115).toString(16);
    BigInt(-601151958).toString(16);
    BigInt(1031132300).toString(17);
    BigInt(-427407344).toString(17);
    BigInt(497873061).toString(18);
    BigInt(-682869311).toString(18);
    BigInt(897425434).toString(19);
    BigInt(-453940593).toString(19);
    BigInt(856283811).toString(20);
    BigInt(-348326997).toString(20);
    BigInt(534590108).toString(21);
    BigInt(-365926018).toString(21);
    BigInt(854646755).toString(22);
    BigInt(-689960479).toString(22);
    BigInt(844763325).toString(23);
    BigInt(-464933833).toString(23);
    BigInt(645846684).toString(24);
    BigInt(-465533867).toString(24);
    BigInt(922303524).toString(25);
    BigInt(-736917242).toString(25);
    BigInt(1023721316).toString(26);
    BigInt(-510790426).toString(26);
    BigInt(781186599).toString(27);
    BigInt(-905400830).toString(27);
    BigInt(1070753592).toString(28);
    BigInt(-733311596).toString(28);
    BigInt(791210200).toString(29);
    BigInt(-663438728).toString(29);
    BigInt(446280638).toString(30);
    BigInt(-386953032).toString(30);
    BigInt(329195171).toString(31);
    BigInt(-537807354).toString(31);
    BigInt(739213967).toString(32);
    BigInt(-541436261).toString(32);
    BigInt(373623455).toString(33);
    BigInt(-618260617).toString(33);
    BigInt(742051654).toString(34);
    BigInt(-879719091).toString(34);
    BigInt(678481355).toString(35);
    BigInt(-941081243).toString(35);
    BigInt(641608723).toString(36);
    BigInt(-705664979).toString(36);
    function ParseBigInt(a646, a647) {
        const alphabet = "0123456789abcdefghijklmnopqrstuvwxyz";
        var result = 0;
        var base = BigInt(a647);
        var index = 0;
        var negative = false;
        if (a646[0] === "-") {
            negative = true;
            index++;
        }
        for (; index < a646.length; index++) {
            var digit = alphabet.indexOf(a646[index]);
            (digit >= 0) && (digit < a647);
            result = (result * base) + BigInt(digit);
        }
        if (negative) {
            result = -result;
        }
        return result;
    }
    var positive = [0,0,"1100110001100010110011110110010010001011100111100101111000111101100001000","1001200022210010220101120212021002011002201122200002211102120120021011020","1111113020012203332320220022231110130001001320122012131311333110012023232","4214313040222110434114402342013144321401424143322013320403411012033300312","5025302003542512450341430541203424555035430434034243510233043041501130015","6231052230016515343200525230300322104013130605414211331345043144525012021","1146340505617030644211355340006353546230356336306352536433054143503442135","7262360724624787621528668212168232276348417717770383567066203032200270570","7573792356581293501680046955899735043496925151216904903504319328753434194","4a627927557579898720a42647639128174a8689889766a219342133671449069a2235011","1a574a5848289924996342a32893380690322330393633b587ba5a15b7b82080222400464","5163304c74c387b7a443c92466688595b671a3329b42083b1499b0c10a74a9298a06c3a5a","4b63c834356a03c80946133284a709cbbc2a75022757207dc31c14abd4c160dc122327c17","d8d59cbb4ca2860de7c002eee4ab3c215b90069200d20dbdc0111cb1e1bab97e8c7609670","22d4b69398a7f848e6ae36798811cd1a63d90f340d8607f3ce5566c97c18468787eb2b9fd","1176gf69afd32cc105fa70c705927a384dbdb1g8d952f28028g31ebdc9e32a89f16e825ee","5d64b74f4d70632h4ee07h7c1e2da9125c42g2727f4b6d95e5cec6ga49566hh731ab5f544","7ff8cg7f05dd72916a09a4761ii7b0ibcg68ba39b10436f14efg76ge817317badcbi4gffc","6d7c4hci6cd72e4ja26j354i12i71gb0cbj12gi145j91h02hde3b72c65geb7ff9bi9d0c2b","c96997f50abe425d13a53kk4af631kg7db208ka5j5bfg8ca5f9c0bjf69j5kgg4jb5h7hi86","3g5fd800d9ib9j0i8all5jgb23dh9483ab6le5ad9g4kja8a0b3j5jbjfge7k5fffg2kbheee","9j1119d1cd61kmdm7kma105cki313f678fc3h25f4664281bbmg3fk97kfbh7d48j89j178ch","d2933cdc9jfe4hl3794kb3e13dg2lihad968ib9jg19dgf1fi482b27ji0d10c6kfkdge5764","bf6o0jkm1ij5in0h7h94584bd80el02b07el5ojk9k9g0gn906do70gbbnckl048c0kdmao","8gb7jnge9p9cdgigo394oa33gfaenc3gnb53eceg4b8511gkkm88b0dod85e5bggpc861d7d5","qbbnqhkpleb4o0daddpc34h5b2iljn3jgnjdn5k57bi09i09hjle9hqgqdpgbnk499mak56","akg7e2976arn8i2m53gif0dp59bmfd7mk9erlg2qm3fc76da9glf397eh4ooij9il0fl9gac","mehpbfrj5ah2ef3p2hl637gjp1pm5grqn4037pm1qfgfpr9cfljfc145hljehjjb48bb06en","rg6ik3agnb3p6t2rtja9h4il76i8fkqlt6gplap3fq6pfr7bbcfcp5ffncf0m4kamap39hse","bk8rp9r9r8pltdqpb7euc6s9rcm33969pcq6uk3mtfoktt86di8589oacbam5tn29b9b6dq3j","npth8juld44rss3e57iigjg65po3d1h02heo4r103jmg3ocv89buqtgiov35k39rdf8j9t4ca","vrmqlwrrrd0uml1womae49jpa9tadh44fw7mucgk06l0uk4uqwuo37t6kwn7wwrm3a6oq081s","n5cft6gvufqd8iksquu2amghokk17gbtpguidc290af634p7k7rhmfu7bf1s62ej4megoa1j4","3v3gcrmlfc2tl0tefgkiogj41f6y2tmj9w5bxke8y03xqf49ox8gh9wbrhycrkluicqajtnur","z2m7b0sy2tzergtkqts5yj0dkrlfkxls81ijgxgfequizpntcwggv2d4rdzcncd0kj9mrmnrb"];
    var negative = [0,0,"-100010011110111010111111110001100100111010101000001011010010101100101000","-110012122000122102021210112200001000122011010120101201001122000002022102","-203210320111001002200122200001312300221100221321010300023323201113122333","-133042441230110320040323303341320302144241224443231311022240124413104131","-311325230504055004330150145105331121322231155401110315251422505233103112","-643153641664240231336166403516403454646560261062114326443664602606315326","-200057252627665476551635525303641543165622340301637556323453513664337277","-826688166214270516331644053744613530235020517172322840763172114078364165","-743042397390679269240157150971957535458122650450558451124173993544604852","-73528688500003573942a56a504a2996a1384129563098512a63196697975038692aaa63","-616576a2948a9029316290168b71137b027851639a0283150b125b664b74b767a3597805","-b875467540719b371b7a36047a7886872a5399c4c630c37149bc3182917a7a7c124475bb","-3860411b61d35977721bc81bd715c386c9b70a752940913d265505d8c7c5dd2624b591d7","-bad5dd79b083ee0da9a6296664e72c246d827762357116ae7076a22bb369acbc3a201d03","-f9b37352aff265124303942a463917a252ff1a2ff4a33777f490b4c103bdcd1a655dbe2c","-805fg8c74125214g383a8d8g573c49fa7c4035fbc6db61g5gb5g6beb8f90dae4a9a5g7cc","-70aae113459d3h5084b1gg209g3695d20e78d01gcbb71bh1bd4gdge31haf5hc02dghf14e","-c55a57haf47b7ih2gh6ea93098ig02b42icga6ead254e0aeeic7g53h5fd6637ge03b2e20","-e32f7204624ie596j731g72136cejc25ebbgb0140i4997fcdf477f021d86ci4e10db543a","-i7f32c817i3cac1c24c7786k6ig185f47cj1471ki6bb7agiae838027gjge9g59if9f88g6","-i30aha2030a9605c270h92e1ca3i02j996hl918gh52fbhb7i16ik1i919ieak3cj384kb61","-58jmem8e59li67aellid2083dabh4kh51ci1jg7c6a3k4l1hdgfkdha0fglfm4805kida5b9","-cl9iecjg9ak087cad4151lll44296heae2349g70fbjj37998m2ddn6427fgcl2aknhgn1a1","-alfjfhho4gf8bi4j2bi3743mhg2aache4c6jcinkmf5ddm7kf9gg350hlja16ealbdlk201j","-bhh1146ho3o2m3b839c565hbgjnhjh96oofbmdl7gn8h4f94kli94hkk180o79pc4d2l0721","-p00gknh7e05k6a3apg6i9lb46f4a9qeeiq1778ak8il5dcponk5gl2fiednb4pmo1agmoqph","-4j8lo4d4p508fnd2hkfb76e8ri81k6hq0op3pr14ca096pccplk7rbahc9cdkdce1q16dn","-ednlo3ogf2i8annrel9rm323bpf00meed3oi400qrdgnd03il4bnsc9s2jd7loh44im8ra","-bjjg6fsbpcc2tc1o09m9r6fd6eoq5480har62a5offn9thcfahbno9kf9magl2akl0jgncj9","-sonuhat2h60glpbpej9jjado2s5l86122d26tudoc1d6aic2oitu793gk0mlac3dk1dufp1q","-i9pbvm53ubh8jqifuarauch8cbgk9cjsl6rlioka1phs1lskg1oosll23hjoli2subgr1rto","-w05t60b5dv669ekwnvk02g7djrsl8cdkwun8o3m5divc3jhnkp2381rhj70gc71a6wff","-buiq8v33p5ex44ps4s45enj6lrluivm19lcowkvntu72u0xguw13bxgxxe7mdlwt1a4qksae","-woiycfmea6i12r2yai49mf4lbd7w2jdoebiogfhnh1i4rwgox57obci8qbsfpb4w00u19m5","-tbttuip1r6ioca6g6dw354o4m78qep9yh00ojx47yq29fqime6zstwllb74501qct8eskxn"];
    for (let i756 = 2; i756 <= 36; i756++) {
        var input = positive[i756];
        ParseBigInt(input, i756).toString(i756);
        ParseBigInt(input = negative[i756], i756).toString(i756);
    }
}
{
    Object(zero).valueOf();
    const v772 = () => {
        return BigInt.prototype.valueOf.call("string");
    };
    v772();
    -40;
    Object(-40).valueOf();
}
{
    !zero;
    !(!zero);
    !(!(!zero));
    !one;
    !(!one);
    !(!(!one));
}
{
    const v797 = () => {
        return isNaN(zero);
    };
    v797();
    const v802 = () => {
        return isNaN(one);
    };
    v802();
    const v806 = () => {
        return +zero;
    };
    v806();
    const v809 = () => {
        return +one;
    };
    v809();
}
{
    const v813 = {
        valueOf() {
            return zero;
        },
    };
    let Zero = v813;
    const v816 = {
        valueOf() {
            return one;
        },
    };
    let One = v816;
    const v818 = () => {
        return isNaN(Zero);
    };
    v818();
    const v823 = () => {
        return isNaN(One);
    };
    v823();
    const v827 = () => {
        return +Zero;
    };
    v827();
    const v830 = () => {
        return +One;
    };
    v830();
}
{
    const v838 = {
        valueOf() {
            return Object(NaN);
        },
        toString() {
            return zero;
        },
    };
    let Zero = v838;
    const v843 = {
        valueOf() {
            return one;
        },
        toString() {
            return NaN;
        },
    };
    let One = v843;
    const v845 = () => {
        return isNaN(Zero);
    };
    v845();
    const v850 = () => {
        return isNaN(One);
    };
    v850();
    const v854 = () => {
        return +Zero;
    };
    v854();
    const v857 = () => {
        return +One;
    };
    v857();
}
{
    const v860 = (a861) => {
        const v865 = new Function("", "return this");
        return v865.call(a861);
    };
    const ToObject = v860;
    function test(a869) {
        const X = ToObject(a869);
        typeof a869;
        typeof X;
        X.constructor;
        X == a869;
    }
    test(0);
    test(-0);
    test(0);
    test(2.3434234234234233e+69);
}
{
    function test(a888) {
        const X = Object(a888);
        typeof a888;
        typeof X;
        X.constructor;
        X == a888;
    }
    test(0);
    test(-0);
    test(0);
    test(2.3434234234234233e+69);
}
{
    12340 === BigInt(12345);
    0 === BigInt(703710);
    703710 === BigInt(703710);
    22736 === BigInt(22737);
    84 === BigInt(85);
}
{
    const v937 = {
        valueOf() {
            return one;
        },
    };
    let One = v937;
    (one + two) === three;
    (One + two) === three;
    (two + One) === three;
    "hello" + one;
    two + "hello";
    (three - two) === one;
    (two * three) === six;
    (two * One) === two;
    (One * two) === two;
    (six / three) === two;
    (three % two) === one;
}
{
    const v992 = {
        valueOf() {
            return one;
        },
    };
    let One = v992;
    (three & one) === one;
    (BigInt(-2) & zero) === zero;
    (three & One) === one;
    (One & three) === one;
    (two | one) === three;
    (three ^ one) === two;
}
{
    (one << one) === two;
    (three >> one) === one;
}
{
    const v1043 = {
        valueOf() {
            return one;
        },
    };
    let One = v1043;
    ~minus_one === zero;
    -minus_one === one;
    -One === minus_one;
    ~(~two) === two;
    -(-two) === two;
    ~One === BigInt(-2);
    let a = minus_one;
    a++ === minus_one;
    a === zero;
    a++ === zero;
    a === one;
    ++a === two;
    a === two;
    --a === one;
    a === one;
    a-- === one;
    a === zero;
    a-- === zero;
    a === minus_one;
    const v1082 = {
        valueOf() {
            return minus_one;
        },
    };
    a = v1082;
    a++ === minus_one;
    a++ === zero;
    a === one;
    const v1089 = {
        valueOf() {
            return one;
        },
    };
    a = v1089;
    a-- === one;
    a-- === zero;
    a === minus_one;
}
{
    let obj = {};
    obj[0];
    obj[0] = 42;
    obj[0];
    obj[0];
    let v1105 = obj[0];
    v1105++;
    obj[0 - 0];
    Reflect.get(obj, -0);
    const v1119 = {
        toString() {
            return 0;
        },
    };
    obj[v1119];
    Reflect.ownKeys(obj);
    ["0"];
}
{
    let obj = {};
    const unsafe = 9007199254740990;
    obj[unsafe] = 23;
    obj[unsafe];
    Reflect.ownKeys(obj);
    ["9007199254740993"];
    obj[9007199254740992];
    delete obj[unsafe];
    Reflect.ownKeys(obj);
    [];
}
{
    let arr = [];
    0 in arr;
    arr[0] = 42;
    0 in arr;
    let enumkeys = 0;
    for (const v1151 in arr) {
        enumkeys++;
    }
}
{
    let str = "blubb";
    str[0];
    const v1159 = () => {
        return str.slice(0);
    };
    v1159();
}
{
    let obj = {};
    let key = 0;
    function set_key(a1169) {
        obj[key] = a1169;
    }
    set_key("aaa");
    set_key("bbb");
    key = 0;
    set_key("ccc");
    obj[key];
    function get_key() {
        return obj[key];
    }
    get_key();
    get_key();
    key = 0;
    get_key();
}
{
    const unsafe = 9007199254740990;
}

FuzzIL program written to corpus/basics.fzil
