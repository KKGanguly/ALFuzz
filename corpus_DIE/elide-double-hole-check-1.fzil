v0 <- BeginPlainFunction -> v1, v2
    v3 <- GetComputedProperty v1, v2
    Return v3
EndPlainFunction
v4 <- LoadUndefined
v5 <- LoadFloat '0.5'
v6 <- CreateArray [v4, v4, v4, v4, v4, v4, v4, v4, v4, v4, v4, v4, v4, v4, v4, v4, v4, v4, v5]
v7 <- CreateNamedVariable 'a1', 'var', v6
v8 <- LoadUndefined
v9 <- LoadInteger '1'
v10 <- CallFunction v0, [v7, v9]
v11 <- LoadUndefined
v12 <- LoadInteger '1'
v13 <- CallFunction v0, [v7, v12]
v14 <- LoadUndefined
v15 <- LoadInteger '1'
v16 <- CallFunction v0, [v7, v15]
v17 <- LoadUndefined
v18 <- LoadInteger '1'
v19 <- CallFunction v0, [v7, v18]
v20 <- BeginPlainFunction -> v21, v22
    v23 <- GetComputedProperty v21, v22
    v24 <- LoadFloat '0.5'
    v25 <- BinaryOperation v23, '+', v24
    Return v25
EndPlainFunction
v26 <- LoadInteger '0'
v27 <- LoadUndefined
v28 <- CreateArray [v26, v27]
v29 <- CreateNamedVariable 'a2_b', 'var', v28
v30 <- LoadFloat '0.5'
v31 <- LoadInteger '0'
v32 <- CallFunction v20, [v29, v31]
v33 <- LoadFloat '0.5'
v34 <- LoadInteger '0'
v35 <- CallFunction v20, [v29, v34]
v36 <- LoadFloat '0.5'
v37 <- LoadInteger '0'
v38 <- CallFunction v20, [v29, v37]
v39 <- CreateNamedVariable 'NaN', 'none'
v40 <- LoadInteger '1'
v41 <- CallFunction v20, [v29, v40]
v42 <- LoadFloat '1.5'
v43 <- LoadFloat '1.5'
v44 <- LoadFloat '1.5'
v45 <- CreateArray [v42, v43, v44]
SetProperty v29, '__proto__', v45
v46 <- LoadInteger '2'
v47 <- LoadInteger '1'
v48 <- CallFunction v20, [v29, v47]
v49 <- LoadFloat '0.5'
v50 <- LoadInteger '0'
v51 <- CallFunction v20, [v29, v50]


function f1(a1, a2) {
    return a1[a2];
}
var a1 = [,,,,,,,,,,,,,,,,,,0.5];
f1(a1, 1);
f1(a1, 1);
f1(a1, 1);
f1(a1, 1);
function f2(a21, a22) {
    return a21[a22] + 0.5;
}
var a2_b = [0,,];
f2(a2_b, 0);
f2(a2_b, 0);
f2(a2_b, 0);
f2(a2_b, 1);
a2_b.__proto__ = [1.5,1.5,1.5];
f2(a2_b, 1);
f2(a2_b, 0);

FuzzIL program written to corpus/elide-double-hole-check-1.fzil
