v0 <- LoadString 'string'
v1 <- CreateArray [v0]
v2 <- CreateNamedVariable 'a', 'var', v1
v3 <- BeginPlainFunction -> v4
    v5 <- LoadInteger '1'
    SetElement v4, '0', v5
    Return v5
EndPlainFunction
v6 <- CallFunction v3, [v2]
v7 <- BeginPlainFunction -> 
    v8 <- LoadInteger '0'
    v9 <- CreateArray [v8]
    v10 <- CreateNamedVariable 'q', 'var', v9
    BeginForLoopInitializer
        v11 <- LoadInteger '0'
    BeginForLoopCondition -> v12
        v13 <- LoadInteger '100000'
        v14 <- Compare v12, '<', v13
    BeginForLoopAfterthought v14 -> v15
        v16 <- UnaryOperation v15, '++'
    BeginForLoopBody -> v17
        v18 <- CallFunction v3, [v10]
    EndForLoop
    v19 <- LoadInteger '0'
    SetElement v10, '0', v19
    v20 <- CallFunction v3, [v10]
EndPlainFunction
v21 <- CallFunction v7, []


var a = ["string"];
function funky(a4) {
    a4[0] = 1;
    return 1;
}
funky(a);
function crash() {
    var q = [0];
    for (let i12 = 0; i12 < 100000; i12++) {
        funky(q);
    }
    q[0] = 0;
    funky(q);
}
crash();

FuzzIL program written to corpus/regress-crbug-349853.fzil
