v0 <- LoadInteger '12345678'
v1 <- BeginPlainFunction -> 
    v2 <- LoadThis
    v3 <- GetProperty v2, '_leftTime'
    v4 <- LoadInteger '3600'
    v5 <- BinaryOperation v3, '/', v4
    v6 <- CreateNamedVariable 'Math', 'none'
    v7 <- CallMethod v6, 'floor', [v5]
    v8 <- CreateNamedVariable 's', 'var', v7
    v9 <- LoadInteger '24'
    v10 <- BinaryOperation v8, '/', v9
    v11 <- CallMethod v6, 'floor', [v10]
    v12 <- CreateNamedVariable 'e', 'var', v11
    v13 <- LoadInteger '24'
    v14 <- BinaryOperation v8, '%', v13
    v15 <- CreateNamedVariable 'i', 'var', v14
    BeginObjectLiteral
        ObjectLiteralAddProperty `s`, v8
        ObjectLiteralAddProperty `e`, v12
        ObjectLiteralAddProperty `i`, v15
    v16 <- EndObjectLiteral
    Return v16
EndPlainFunction
BeginObjectLiteral
    ObjectLiteralAddProperty `_leftTime`, v0
    ObjectLiteralAddProperty `_divider`, v1
v17 <- EndObjectLiteral
v18 <- CreateNamedVariable 'obj', 'var', v17
BeginForLoopInitializer
    v19 <- LoadInteger '0'
BeginForLoopCondition -> v20
    v21 <- LoadInteger '1000'
    v22 <- Compare v20, '<', v21
BeginForLoopAfterthought v22 -> v23
    v24 <- UnaryOperation v23, '++'
BeginForLoopBody -> v25
    v26 <- CallMethod v18, '_divider', []
EndForLoop


function f1() {
    var s = Math.floor(this._leftTime / 3600);
    var e = Math.floor(s / 24);
    var i = s % 24;
    return { s: s, e: e, i: i };
}
var obj = { _leftTime: 12345678, _divider: f1 };
for (let i20 = 0; i20 < 1000; i20++) {
    obj._divider();
}

FuzzIL program written to corpus/regress-crbug-476477-1.fzil
