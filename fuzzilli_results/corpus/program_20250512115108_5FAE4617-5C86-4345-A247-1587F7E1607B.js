[-251465878];
const v7 = [4294967296,2023072078,-165477837,-38493,127,2122991361,12,268435440,-23190,11];
v7[7] = v7;
[-9007199254740991,268435439];
[-21468,255,127,-44934,-1,-1842430061,-65535,-1679639717,5842];
[26151,6590,-959304637,-65536,536870888,-37089,2,54757,1073741824];
[15,-10,634342161,3];
try { Math.isPrototypeOf(); } catch (e) {}
const v17 = Math.imul;
function f18(a19, a20, a21) {
    a19 * a19;
    a21 % a21;
    function imul_func_closure(a25, a26) {
        let v27 = v17(a25);
        v27++;
        return v27;
    }
    try { imul_func_closure(); } catch (e) {}
    let v31 = undefined;
    -a21;
    -65535;
    -65535;
    65535 * 65535;
    let v40 = 65535;
    let v41 = 65535;
    v41 - v41;
    v41--;
    65535 * v41;
    v40++;
    v41--;
    v31 = 0;
    a21 >>> a21;
    let v52 = undefined;
    v52 = a21;
    const v53 = imul_func_closure(a20);
    v53 ^ v53;
}
8 + 8;
f18();
f18 ?? f18;
const v66 = -2;
2 === 2;
2 << 2;
f18(4, v66);
-10;
for (let v77 = 0; v77 < 100; v77++) {
    f18(v66);
}
f18(7, 1.1, 7);
f18(7, 1.9, 7);
const v95 = {};
const v98 = [];
try { v98.map(7); } catch (e) {}
-1;
f18(1, 7, 1);
f18(1, 1, 7);
