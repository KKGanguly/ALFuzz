BeginForLoopInitializer
    v0 <- LoadInteger '0'
BeginForLoopCondition -> v1
    v2 <- LoadInteger '2000'
    v3 <- Compare v1, '<', v2
BeginForLoopAfterthought v3 -> v4
    v5 <- UnaryOperation v4, '++'
BeginForLoopBody -> v6
    v7 <- LoadBoolean 'true'
    v8 <- CreateNamedVariable 'Object', 'none'
    v9 <- GetProperty v8, 'prototype'
    v10 <- LoadString 'X'
    v11 <- BinaryOperation v10, '+', v6
    SetComputedProperty v9, v11, v7
EndForLoop
v12 <- BeginPlainFunction -> v13
    v14 <- GetElement v13, '0'
    Return v14
EndPlainFunction
v15 <- CreateNamedVariable 'Array', 'none'
v16 <- LoadInteger '1'
v17 <- Construct v15, [v16]
v18 <- CreateNamedVariable 'a', 'var', v17
v19 <- LoadFloat '0.1'
SetElement v18, '0', v19
v20 <- CallFunction v12, [v18]
v21 <- CallFunction v12, [v18]
v22 <- CallFunction v12, [v18]


for (let i1 = 0; i1 < 2000; i1++) {
    const t1 = Object.prototype;
    t1["X" + i1] = true;
}
function boom(a13) {
    return a13[0];
}
const v17 = new Array(1);
var a = v17;
a[0] = 0.1;
boom(a);
boom(a);
boom(a);

FuzzIL program written to corpus/regress-crbug-616709-1.fzil
