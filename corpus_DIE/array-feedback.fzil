v0 <- BeginPlainFunction -> 
    v1 <- BeginPlainFunction -> v2
        v3 <- CallFunction v2, []
        v4 <- TestInstanceOf v3, v2
        v5 <- LoadInteger '5'
        v6 <- CallFunction v2, [v5]
        v7 <- TestInstanceOf v6, v2
        v8 <- LoadInteger '1'
        v9 <- LoadInteger '2'
        v10 <- LoadInteger '3'
        v11 <- CallFunction v2, [v8, v9, v10]
        v12 <- TestInstanceOf v11, v2
    EndPlainFunction
    v13 <- CreateNamedVariable 'Array', 'none'
    v14 <- CallFunction v1, [v13]
    v15 <- CallFunction v1, [v13]
    v16 <- CallFunction v1, [v13]
EndPlainFunction
v17 <- CallFunction v0, []


function f0() {
    function instanceof_check(a2) {
        a2() instanceof a2;
        a2(5) instanceof a2;
        a2(1, 2, 3) instanceof a2;
    }
    instanceof_check(Array);
    instanceof_check(Array);
    instanceof_check(Array);
}
f0();

FuzzIL program written to corpus/array-feedback.fzil
