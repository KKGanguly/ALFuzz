v0 <- CreateNamedVariable 'Promise', 'none'
v1 <- CreateNamedVariable 'Symbol', 'none'
v2 <- GetProperty v1, 'species'
v3 <- LoadInteger '0'
BeginObjectLiteral
    ObjectLiteralAddProperty `value`, v3
v4 <- EndObjectLiteral
v5 <- CreateNamedVariable 'Object', 'none'
v6 <- CallMethod v5, 'defineProperty', [v0, v2, v4]
v7 <- BeginPlainFunction -> 
EndPlainFunction
v8 <- Construct v0, [v7]
v9 <- CreateNamedVariable 'p', 'var', v8
BeginTry
    v10 <- CallMethod v9, 'then', []
BeginCatch -> v11
    v12 <- CreateNamedVariable 'TypeError', 'none'
    v13 <- TestInstanceOf v11, v12
EndTryCatch


const v2 = Symbol.species;
Object.defineProperty(Promise, v2, { value: 0 });
function f7() {
}
const v8 = new Promise(f7);
var p = v8;
try {
    p.then();
} catch(e11) {
    e11 instanceof TypeError;
}

FuzzIL program written to corpus/regress-726636.fzil
