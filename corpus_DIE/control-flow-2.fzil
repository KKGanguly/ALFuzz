v0 <- BeginPlainFunction -> v1, v2
    v3 <- Compare v2, '<', v1
    v4 <- Compare v1, '<', v2
    v5 <- BinaryOperation v3, '-', v4
    Return v5
EndPlainFunction
v6 <- LoadInteger '0'
v7 <- LoadInteger '0'
v8 <- LoadInteger '0'
v9 <- CallFunction v0, [v7, v8]
v10 <- LoadInteger '1'
v11 <- LoadInteger '1'
v12 <- LoadInteger '0'
v13 <- CallFunction v0, [v11, v12]
v14 <- LoadInteger '1'
v15 <- UnaryOperation '-', v14
v16 <- LoadInteger '0'
v17 <- LoadInteger '1'
v18 <- CallFunction v0, [v16, v17]


function f(a1, a2) {
    return (a2 < a1) - (a1 < a2);
}
f(0, 0);
f(1, 0);
-1;
f(0, 1);

FuzzIL program written to corpus/control-flow-2.fzil
