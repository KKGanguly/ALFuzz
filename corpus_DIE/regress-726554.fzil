v0 <- BeginPlainFunction -> v1, v2
    BeginForLoopInitializer
        v3 <- LoadInteger '0'
    BeginForLoopCondition -> v4
        v5 <- GetProperty v1, 'length'
        v6 <- Compare v4, '<', v5
    BeginForLoopAfterthought v6 -> v7
        v8 <- UnaryOperation v7, '++'
    BeginForLoopBody -> v9
        v10 <- GetComputedProperty v1, v9
        v11 <- GetComputedProperty v2, v9
        v12 <- CallFunction v0, [v10, v11]
    EndForLoop
EndPlainFunction
v13 <- BeginPlainFunction -> 
    v14 <- LoadArguments
    v15 <- GetProperty v14, 'length'
    v16 <- LoadInteger '2'
    v17 <- CallFunction v0, [v15, v16]
EndPlainFunction
v18 <- BeginPlainFunction -> 
    v19 <- LoadInteger '1'
    v20 <- LoadInteger '2'
    v21 <- CallFunction v13, [v19, v20]
    Return v21
EndPlainFunction
v22 <- LoadInteger '1'
v23 <- LoadUndefined
v24 <- CreateArray [v22, v23]
v25 <- CreateNamedVariable 'b', 'none'
Reassign v25, v24
v26 <- LoadFloat '3.5'
v27 <- CreateNamedVariable 'b', 'none'
SetElement v27, '1', v26
v28 <- LoadInteger '1073741823'
v29 <- LoadInteger '2147483648'
v30 <- LoadInteger '12'
v31 <- UnaryOperation '-', v30
v32 <- CreateArray [v28, v29, v31]
v33 <- CallFunction v0, [v27, v32]
v34 <- CallFunction v18, []
v35 <- CallFunction v18, []
v36 <- CallFunction v18, []


function h(a1, a2) {
    for (let i4 = 0; i4 < a1.length; i4++) {
        h(a1[i4], a2[i4]);
    }
}
function g() {
    h(arguments.length, 2);
}
function f() {
    return g(1, 2);
}
b = [1,,];
b[1] = 3.5;
h(b, [1073741823,2147483648,-12]);
f();
f();
f();

FuzzIL program written to corpus/regress-726554.fzil
