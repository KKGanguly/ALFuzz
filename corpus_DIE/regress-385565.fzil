v0 <- LoadInteger '0'
v1 <- CreateNamedVariable 'calls', 'var', v0
v2 <- BeginPlainFunction -> v3
    v4 <- CreateNamedVariable 'Number', 'none'
    v5 <- GetProperty v3, 'm'
    v6 <- Construct v4, [v5]
    v7 <- LoadInteger '1'
    v8 <- LoadInteger '2'
    v9 <- LoadInteger '3'
    v10 <- CreateArray []
    v11 <- GetProperty v10, 'f'
    v12 <- CallMethod v11, 'call', [v6, v7, v8, v9]
    Return v12
EndPlainFunction
v13 <- BeginPlainFunction -> 
    v14 <- UnaryOperation v1, '++'
    v15 <- LoadThis
    v16 <- UnaryOperation '+', v15
    Return v16
EndPlainFunction
v17 <- CreateNamedVariable 'Array', 'none'
v18 <- GetProperty v17, 'prototype'
SetProperty v18, 'f', v13
v19 <- LoadInteger '1'
BeginObjectLiteral
    ObjectLiteralAddProperty `m`, v19
v20 <- EndObjectLiteral
v21 <- CreateNamedVariable 'o1', 'var', v20
v22 <- LoadInteger '0'
v23 <- LoadInteger '1'
BeginObjectLiteral
    ObjectLiteralAddProperty `a`, v22
    ObjectLiteralAddProperty `m`, v23
v24 <- EndObjectLiteral
v25 <- CreateNamedVariable 'o2', 'var', v24
v26 <- CallFunction v2, [v21]
v27 <- CreateNamedVariable 'r1', 'var', v26
v28 <- CallFunction v2, [v21]
v29 <- CallFunction v2, [v21]
v30 <- CreateNamedVariable 'r2', 'var', v29
v31 <- CallFunction v2, []
v32 <- CallFunction v2, [v25]
v33 <- CallFunction v2, []
v34 <- CallFunction v2, [v21]
v35 <- CreateNamedVariable 'r3', 'var', v34
v36 <- LoadInteger '1'
v37 <- Compare v27, '===', v30
v38 <- Compare v30, '===', v35
v39 <- CallFunction v2, [v21]
Reassign v27, v39
v40 <- CallFunction v2, [v21]
v41 <- CallFunction v2, [v21]
Reassign v30, v41
v42 <- CallFunction v2, [v25]
v43 <- CallFunction v2, [v21]
Reassign v35, v43
v44 <- LoadInteger '1'
v45 <- Compare v27, '===', v30
v46 <- Compare v30, '===', v35
v47 <- LoadInteger '10'


var calls = 0;
function callsFReceiver(a3) {
    const v6 = new Number(a3.m);
    return ([]).f.call(v6, 1, 2, 3);
}
function f13() {
    calls++;
    return +this;
}
const t9 = Array.prototype;
t9.f = f13;
var o1 = { m: 1 };
var o2 = { a: 0, m: 1 };
var r1 = callsFReceiver(o1);
callsFReceiver(o1);
var r2 = callsFReceiver(o1);
callsFReceiver();
callsFReceiver(o2);
callsFReceiver();
var r3 = callsFReceiver(o1);
r1 === r2;
r2 === r3;
r1 = callsFReceiver(o1);
callsFReceiver(o1);
r2 = callsFReceiver(o1);
callsFReceiver(o2);
r3 = callsFReceiver(o1);
r1 === r2;
r2 === r3;

FuzzIL program written to corpus/regress-385565.fzil
