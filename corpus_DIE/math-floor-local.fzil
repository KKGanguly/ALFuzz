v0 <- LoadInteger '0'
v1 <- CreateNamedVariable 'test_id', 'var', v0
v2 <- BeginPlainFunction -> v3, v4
    v5 <- CreateNamedVariable 'Function', 'none'
    v6 <- LoadString 'n'
    v7 <- LoadString '"'
    v8 <- UnaryOperation v1, '++'
    v9 <- BinaryOperation v7, '+', v8
    v10 <- LoadString '";var f = Math.floor; return f(n)'
    v11 <- BinaryOperation v9, '+', v10
    v12 <- Construct v5, [v6, v11]
    v13 <- CreateNamedVariable 'test', 'var', v12
    v14 <- CallFunction v13, [v4]
    v15 <- CallFunction v13, [v4]
    v16 <- CallFunction v13, [v4]
    v17 <- CallFunction v13, [v4]
EndPlainFunction
v18 <- BeginPlainFunction -> 
    v19 <- LoadFloat '0.5'
    v20 <- CreateNamedVariable 'x', 'var', v19
    v21 <- BeginPlainFunction -> 
        v22 <- LoadFloat '0.5'
        v23 <- BinaryOperation v20, '-', v22
        Return v23
    EndPlainFunction
    v24 <- CallFunction v21, []
    Return v24
EndPlainFunction
v25 <- BeginPlainFunction -> 
    v26 <- LoadInteger '0'
    v27 <- LoadInteger '0'
    v28 <- CallFunction v2, [v26, v27]
    v29 <- LoadInteger '0'
    v30 <- CallFunction v18, []
    v31 <- CallFunction v2, [v29, v30]
    v32 <- LoadInteger '0'
    v33 <- UnaryOperation '-', v32
    v34 <- LoadInteger '0'
    v35 <- UnaryOperation '-', v34
    v36 <- CallFunction v2, [v33, v35]
    v37 <- CreateNamedVariable 'Infinity', 'none'
    v38 <- CallFunction v2, [v37, v37]
    v39 <- UnaryOperation '-', v37
    v40 <- UnaryOperation '-', v37
    v41 <- CallFunction v2, [v39, v40]
    v42 <- CreateNamedVariable 'NaN', 'none'
    v43 <- CallFunction v2, [v42, v42]
    v44 <- BeginPlainFunction -> v45
        v46 <- LoadInteger '1'
        v47 <- CreateNamedVariable 'Math', 'none'
        v48 <- CallMethod v47, 'floor', [v45]
        v49 <- BinaryOperation v46, '/', v48
        Return v49
    EndPlainFunction
    v50 <- UnaryOperation '-', v37
    v51 <- LoadInteger '0'
    v52 <- UnaryOperation '-', v51
    v53 <- CallFunction v44, [v52]
    v54 <- UnaryOperation '-', v37
    v55 <- LoadInteger '0'
    v56 <- UnaryOperation '-', v55
    v57 <- CallFunction v44, [v56]
    v58 <- UnaryOperation '-', v37
    v59 <- LoadInteger '0'
    v60 <- UnaryOperation '-', v59
    v61 <- CallFunction v44, [v60]
    v62 <- UnaryOperation '-', v37
    v63 <- LoadInteger '0'
    v64 <- UnaryOperation '-', v63
    v65 <- CallFunction v44, [v64]
    v66 <- LoadInteger '0'
    v67 <- LoadFloat '0.1'
    v68 <- CallFunction v2, [v66, v67]
    v69 <- LoadInteger '0'
    v70 <- LoadFloat '0.49999999999999994'
    v71 <- CallFunction v2, [v69, v70]
    v72 <- LoadInteger '0'
    v73 <- LoadFloat '0.5'
    v74 <- CallFunction v2, [v72, v73]
    v75 <- LoadInteger '0'
    v76 <- LoadFloat '0.7'
    v77 <- CallFunction v2, [v75, v76]
    v78 <- LoadInteger '1'
    v79 <- UnaryOperation '-', v78
    v80 <- LoadFloat '0.1'
    v81 <- UnaryOperation '-', v80
    v82 <- CallFunction v2, [v79, v81]
    v83 <- LoadInteger '1'
    v84 <- UnaryOperation '-', v83
    v85 <- LoadFloat '0.49999999999999994'
    v86 <- UnaryOperation '-', v85
    v87 <- CallFunction v2, [v84, v86]
    v88 <- LoadInteger '1'
    v89 <- UnaryOperation '-', v88
    v90 <- LoadFloat '0.5'
    v91 <- UnaryOperation '-', v90
    v92 <- CallFunction v2, [v89, v91]
    v93 <- LoadInteger '1'
    v94 <- UnaryOperation '-', v93
    v95 <- LoadFloat '0.7'
    v96 <- UnaryOperation '-', v95
    v97 <- CallFunction v2, [v94, v96]
    v98 <- LoadInteger '1'
    v99 <- LoadInteger '1'
    v100 <- CallFunction v2, [v98, v99]
    v101 <- LoadInteger '1'
    v102 <- LoadFloat '1.1'
    v103 <- CallFunction v2, [v101, v102]
    v104 <- LoadInteger '1'
    v105 <- LoadFloat '1.5'
    v106 <- CallFunction v2, [v104, v105]
    v107 <- LoadInteger '1'
    v108 <- LoadFloat '1.7'
    v109 <- CallFunction v2, [v107, v108]
    v110 <- LoadInteger '1'
    v111 <- UnaryOperation '-', v110
    v112 <- LoadInteger '1'
    v113 <- UnaryOperation '-', v112
    v114 <- CallFunction v2, [v111, v113]
    v115 <- LoadInteger '2'
    v116 <- UnaryOperation '-', v115
    v117 <- LoadFloat '1.1'
    v118 <- UnaryOperation '-', v117
    v119 <- CallFunction v2, [v116, v118]
    v120 <- LoadInteger '2'
    v121 <- UnaryOperation '-', v120
    v122 <- LoadFloat '1.5'
    v123 <- UnaryOperation '-', v122
    v124 <- CallFunction v2, [v121, v123]
    v125 <- LoadInteger '2'
    v126 <- UnaryOperation '-', v125
    v127 <- LoadFloat '1.7'
    v128 <- UnaryOperation '-', v127
    v129 <- CallFunction v2, [v126, v128]
    v130 <- LoadInteger '0'
    v131 <- CreateNamedVariable 'Number', 'none'
    v132 <- GetProperty v131, 'MIN_VALUE'
    v133 <- CallFunction v2, [v130, v132]
    v134 <- LoadInteger '1'
    v135 <- UnaryOperation '-', v134
    v136 <- GetProperty v131, 'MIN_VALUE'
    v137 <- UnaryOperation '-', v136
    v138 <- CallFunction v2, [v135, v137]
    v139 <- GetProperty v131, 'MAX_VALUE'
    v140 <- GetProperty v131, 'MAX_VALUE'
    v141 <- CallFunction v2, [v139, v140]
    v142 <- GetProperty v131, 'MAX_VALUE'
    v143 <- UnaryOperation '-', v142
    v144 <- GetProperty v131, 'MAX_VALUE'
    v145 <- UnaryOperation '-', v144
    v146 <- CallFunction v2, [v143, v145]
    v147 <- CallFunction v2, [v37, v37]
    v148 <- UnaryOperation '-', v37
    v149 <- UnaryOperation '-', v37
    v150 <- CallFunction v2, [v148, v149]
    v151 <- LoadInteger '1'
    v152 <- LoadInteger '30'
    v153 <- BinaryOperation v151, '<<', v152
    v154 <- CreateNamedVariable 'two_30', 'var', v153
    v155 <- CallFunction v2, [v154, v154]
    v156 <- LoadFloat '0.1'
    v157 <- BinaryOperation v154, '+', v156
    v158 <- CallFunction v2, [v154, v157]
    v159 <- LoadFloat '0.5'
    v160 <- BinaryOperation v154, '+', v159
    v161 <- CallFunction v2, [v154, v160]
    v162 <- LoadFloat '0.7'
    v163 <- BinaryOperation v154, '+', v162
    v164 <- CallFunction v2, [v154, v163]
    v165 <- LoadInteger '1'
    v166 <- BinaryOperation v154, '-', v165
    v167 <- LoadInteger '1'
    v168 <- BinaryOperation v154, '-', v167
    v169 <- CallFunction v2, [v166, v168]
    v170 <- LoadInteger '1'
    v171 <- BinaryOperation v154, '-', v170
    v172 <- LoadInteger '1'
    v173 <- BinaryOperation v154, '-', v172
    v174 <- LoadFloat '0.1'
    v175 <- BinaryOperation v173, '+', v174
    v176 <- CallFunction v2, [v171, v175]
    v177 <- LoadInteger '1'
    v178 <- BinaryOperation v154, '-', v177
    v179 <- LoadInteger '1'
    v180 <- BinaryOperation v154, '-', v179
    v181 <- LoadFloat '0.5'
    v182 <- BinaryOperation v180, '+', v181
    v183 <- CallFunction v2, [v178, v182]
    v184 <- LoadInteger '1'
    v185 <- BinaryOperation v154, '-', v184
    v186 <- LoadInteger '1'
    v187 <- BinaryOperation v154, '-', v186
    v188 <- LoadFloat '0.7'
    v189 <- BinaryOperation v187, '+', v188
    v190 <- CallFunction v2, [v185, v189]
    v191 <- UnaryOperation '-', v154
    v192 <- UnaryOperation '-', v154
    v193 <- CallFunction v2, [v191, v192]
    v194 <- UnaryOperation '-', v154
    v195 <- UnaryOperation '-', v154
    v196 <- LoadFloat '0.1'
    v197 <- BinaryOperation v195, '+', v196
    v198 <- CallFunction v2, [v194, v197]
    v199 <- UnaryOperation '-', v154
    v200 <- UnaryOperation '-', v154
    v201 <- LoadFloat '0.5'
    v202 <- BinaryOperation v200, '+', v201
    v203 <- CallFunction v2, [v199, v202]
    v204 <- UnaryOperation '-', v154
    v205 <- UnaryOperation '-', v154
    v206 <- LoadFloat '0.7'
    v207 <- BinaryOperation v205, '+', v206
    v208 <- CallFunction v2, [v204, v207]
    v209 <- UnaryOperation '-', v154
    v210 <- LoadInteger '1'
    v211 <- BinaryOperation v209, '+', v210
    v212 <- UnaryOperation '-', v154
    v213 <- LoadInteger '1'
    v214 <- BinaryOperation v212, '+', v213
    v215 <- CallFunction v2, [v211, v214]
    v216 <- UnaryOperation '-', v154
    v217 <- LoadInteger '1'
    v218 <- BinaryOperation v216, '+', v217
    v219 <- UnaryOperation '-', v154
    v220 <- LoadInteger '1'
    v221 <- BinaryOperation v219, '+', v220
    v222 <- LoadFloat '0.1'
    v223 <- BinaryOperation v221, '+', v222
    v224 <- CallFunction v2, [v218, v223]
    v225 <- UnaryOperation '-', v154
    v226 <- LoadInteger '1'
    v227 <- BinaryOperation v225, '+', v226
    v228 <- UnaryOperation '-', v154
    v229 <- LoadInteger '1'
    v230 <- BinaryOperation v228, '+', v229
    v231 <- LoadFloat '0.5'
    v232 <- BinaryOperation v230, '+', v231
    v233 <- CallFunction v2, [v227, v232]
    v234 <- UnaryOperation '-', v154
    v235 <- LoadInteger '1'
    v236 <- BinaryOperation v234, '+', v235
    v237 <- UnaryOperation '-', v154
    v238 <- LoadInteger '1'
    v239 <- BinaryOperation v237, '+', v238
    v240 <- LoadFloat '0.7'
    v241 <- BinaryOperation v239, '+', v240
    v242 <- CallFunction v2, [v236, v241]
    v243 <- LoadInteger '1'
    v244 <- LoadInteger '30'
    v245 <- BinaryOperation v243, '<<', v244
    v246 <- LoadInteger '1'
    v247 <- LoadInteger '22'
    v248 <- BinaryOperation v246, '<<', v247
    v249 <- BinaryOperation v245, '*', v248
    v250 <- CreateNamedVariable 'two_52', 'var', v249
    v251 <- CallFunction v2, [v250, v250]
    v252 <- LoadFloat '0.1'
    v253 <- BinaryOperation v250, '+', v252
    v254 <- CallFunction v2, [v250, v253]
    v255 <- LoadFloat '0.5'
    v256 <- BinaryOperation v250, '+', v255
    v257 <- LoadFloat '0.5'
    v258 <- BinaryOperation v250, '+', v257
    v259 <- CallFunction v2, [v250, v258]
    v260 <- LoadInteger '1'
    v261 <- BinaryOperation v250, '+', v260
    v262 <- LoadFloat '0.7'
    v263 <- BinaryOperation v250, '+', v262
    v264 <- LoadInteger '1'
    v265 <- BinaryOperation v250, '+', v264
    v266 <- LoadFloat '0.7'
    v267 <- BinaryOperation v250, '+', v266
    v268 <- CallFunction v2, [v265, v267]
    v269 <- LoadInteger '1'
    v270 <- BinaryOperation v250, '-', v269
    v271 <- LoadInteger '1'
    v272 <- BinaryOperation v250, '-', v271
    v273 <- CallFunction v2, [v270, v272]
    v274 <- LoadInteger '1'
    v275 <- BinaryOperation v250, '-', v274
    v276 <- LoadInteger '1'
    v277 <- BinaryOperation v250, '-', v276
    v278 <- LoadFloat '0.1'
    v279 <- BinaryOperation v277, '+', v278
    v280 <- CallFunction v2, [v275, v279]
    v281 <- LoadInteger '1'
    v282 <- BinaryOperation v250, '-', v281
    v283 <- LoadInteger '1'
    v284 <- BinaryOperation v250, '-', v283
    v285 <- LoadFloat '0.5'
    v286 <- BinaryOperation v284, '+', v285
    v287 <- CallFunction v2, [v282, v286]
    v288 <- LoadInteger '1'
    v289 <- BinaryOperation v250, '-', v288
    v290 <- LoadInteger '1'
    v291 <- BinaryOperation v250, '-', v290
    v292 <- LoadFloat '0.7'
    v293 <- BinaryOperation v291, '+', v292
    v294 <- CallFunction v2, [v289, v293]
    v295 <- UnaryOperation '-', v250
    v296 <- UnaryOperation '-', v250
    v297 <- CallFunction v2, [v295, v296]
    v298 <- UnaryOperation '-', v250
    v299 <- UnaryOperation '-', v250
    v300 <- LoadFloat '0.1'
    v301 <- BinaryOperation v299, '+', v300
    v302 <- CallFunction v2, [v298, v301]
    v303 <- UnaryOperation '-', v250
    v304 <- UnaryOperation '-', v250
    v305 <- LoadFloat '0.5'
    v306 <- BinaryOperation v304, '+', v305
    v307 <- CallFunction v2, [v303, v306]
    v308 <- UnaryOperation '-', v250
    v309 <- UnaryOperation '-', v250
    v310 <- LoadFloat '0.7'
    v311 <- BinaryOperation v309, '+', v310
    v312 <- CallFunction v2, [v308, v311]
    v313 <- UnaryOperation '-', v250
    v314 <- LoadInteger '1'
    v315 <- BinaryOperation v313, '+', v314
    v316 <- UnaryOperation '-', v250
    v317 <- LoadInteger '1'
    v318 <- BinaryOperation v316, '+', v317
    v319 <- CallFunction v2, [v315, v318]
    v320 <- UnaryOperation '-', v250
    v321 <- LoadInteger '1'
    v322 <- BinaryOperation v320, '+', v321
    v323 <- UnaryOperation '-', v250
    v324 <- LoadInteger '1'
    v325 <- BinaryOperation v323, '+', v324
    v326 <- LoadFloat '0.1'
    v327 <- BinaryOperation v325, '+', v326
    v328 <- CallFunction v2, [v322, v327]
    v329 <- UnaryOperation '-', v250
    v330 <- LoadInteger '1'
    v331 <- BinaryOperation v329, '+', v330
    v332 <- UnaryOperation '-', v250
    v333 <- LoadInteger '1'
    v334 <- BinaryOperation v332, '+', v333
    v335 <- LoadFloat '0.5'
    v336 <- BinaryOperation v334, '+', v335
    v337 <- CallFunction v2, [v331, v336]
    v338 <- UnaryOperation '-', v250
    v339 <- LoadInteger '1'
    v340 <- BinaryOperation v338, '+', v339
    v341 <- UnaryOperation '-', v250
    v342 <- LoadInteger '1'
    v343 <- BinaryOperation v341, '+', v342
    v344 <- LoadFloat '0.7'
    v345 <- BinaryOperation v343, '+', v344
    v346 <- CallFunction v2, [v340, v345]
EndPlainFunction
BeginForLoopInitializer
    v347 <- LoadInteger '0'
BeginForLoopCondition -> v348
    v349 <- LoadInteger '10'
    v350 <- Compare v348, '<', v349
BeginForLoopAfterthought v350 -> v351
    v352 <- UnaryOperation v351, '++'
BeginForLoopBody -> v353
    v354 <- CallFunction v25, []
    v355 <- CreateNamedVariable 'Array', 'none'
    v356 <- LoadInteger '10000'
    v357 <- BinaryOperation v353, '*', v356
    v358 <- Construct v355, [v357]
EndForLoop
v359 <- BeginPlainFunction -> v360, v361
    v362 <- CreateNamedVariable 'Math', 'none'
    v363 <- CallMethod v362, 'floor', [v361]
    v364 <- CreateNamedVariable 'ret', 'var', v363
    BeginWhileLoopHeader
        v365 <- UnaryOperation '--', v360
        v366 <- LoadInteger '0'
        v367 <- Compare v365, '>', v366
    BeginWhileLoopBody v367
        v368 <- CallMethod v362, 'floor', [v361]
        Update v364, '+', v368
    EndWhileLoop
    Return v364
EndPlainFunction
v369 <- LoadInteger '0'
v370 <- UnaryOperation '-', v369
v371 <- LoadInteger '1'
v372 <- LoadInteger '0'
v373 <- UnaryOperation '-', v372
v374 <- CallFunction v359, [v371, v373]
v375 <- LoadInteger '0'
v376 <- UnaryOperation '-', v375
v377 <- LoadInteger '100000'
v378 <- LoadInteger '0'
v379 <- UnaryOperation '-', v378
v380 <- CallFunction v359, [v377, v379]


var test_id = 0;
function testFloor(a3, a4) {
    const v12 = new Function("n", (""" + test_id++) + "";var f = Math.floor; return f(n)");
    var test = v12;
    test(a4);
    test(a4);
    test(a4);
    test(a4);
}
function zero() {
    var x = 0.5;
    function f21() {
        return x - 0.5;
    }
    return f21();
}
function test() {
    testFloor(0, 0);
    testFloor(0, zero());
    testFloor(-0, -0);
    testFloor(Infinity, Infinity);
    testFloor(-Infinity, -Infinity);
    testFloor(NaN, NaN);
    function ifloor(a45) {
        return 1 / Math.floor(a45);
    }
    -Infinity;
    ifloor(-0);
    -Infinity;
    ifloor(-0);
    -Infinity;
    ifloor(-0);
    -Infinity;
    ifloor(-0);
    testFloor(0, 0.1);
    testFloor(0, 0.49999999999999994);
    testFloor(0, 0.5);
    testFloor(0, 0.7);
    testFloor(-1, -0.1);
    testFloor(-1, -0.49999999999999994);
    testFloor(-1, -0.5);
    testFloor(-1, -0.7);
    testFloor(1, 1);
    testFloor(1, 1.1);
    testFloor(1, 1.5);
    testFloor(1, 1.7);
    testFloor(-1, -1);
    testFloor(-2, -1.1);
    testFloor(-2, -1.5);
    testFloor(-2, -1.7);
    testFloor(0, Number.MIN_VALUE);
    testFloor(-1, -Number.MIN_VALUE);
    testFloor(Number.MAX_VALUE, Number.MAX_VALUE);
    testFloor(-Number.MAX_VALUE, -Number.MAX_VALUE);
    testFloor(Infinity, Infinity);
    testFloor(-Infinity, -Infinity);
    var two_30 = 1 << 30;
    testFloor(two_30, two_30);
    testFloor(two_30, two_30 + 0.1);
    testFloor(two_30, two_30 + 0.5);
    testFloor(two_30, two_30 + 0.7);
    testFloor(two_30 - 1, two_30 - 1);
    testFloor(two_30 - 1, (two_30 - 1) + 0.1);
    testFloor(two_30 - 1, (two_30 - 1) + 0.5);
    testFloor(two_30 - 1, (two_30 - 1) + 0.7);
    testFloor(-two_30, -two_30);
    testFloor(-two_30, -two_30 + 0.1);
    testFloor(-two_30, -two_30 + 0.5);
    testFloor(-two_30, -two_30 + 0.7);
    testFloor(-two_30 + 1, -two_30 + 1);
    testFloor(-two_30 + 1, (-two_30 + 1) + 0.1);
    testFloor(-two_30 + 1, (-two_30 + 1) + 0.5);
    testFloor(-two_30 + 1, (-two_30 + 1) + 0.7);
    var two_52 = (1 << 30) * (1 << 22);
    testFloor(two_52, two_52);
    testFloor(two_52, two_52 + 0.1);
    two_52 + 0.5;
    testFloor(two_52, two_52 + 0.5);
    two_52 + 1;
    two_52 + 0.7;
    testFloor(two_52 + 1, two_52 + 0.7);
    testFloor(two_52 - 1, two_52 - 1);
    testFloor(two_52 - 1, (two_52 - 1) + 0.1);
    testFloor(two_52 - 1, (two_52 - 1) + 0.5);
    testFloor(two_52 - 1, (two_52 - 1) + 0.7);
    testFloor(-two_52, -two_52);
    testFloor(-two_52, -two_52 + 0.1);
    testFloor(-two_52, -two_52 + 0.5);
    testFloor(-two_52, -two_52 + 0.7);
    testFloor(-two_52 + 1, -two_52 + 1);
    testFloor(-two_52 + 1, (-two_52 + 1) + 0.1);
    testFloor(-two_52 + 1, (-two_52 + 1) + 0.5);
    testFloor(-two_52 + 1, (-two_52 + 1) + 0.7);
}
for (let i348 = 0; i348 < 10; i348++) {
    test();
    new Array(i348 * 10000);
}
function floorsum(a360, a361) {
    var ret = Math.floor(a361);
    while (--a360 > 0) {
        ret += Math.floor(a361);
    }
    return ret;
}
-0;
floorsum(1, -0);
-0;
floorsum(100000, -0);

FuzzIL program written to corpus/math-floor-local.fzil
