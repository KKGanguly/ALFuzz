v0 <- CreateNamedVariable 'Math', 'none'
v1 <- GetProperty v0, 'floor'
v2 <- CreateNamedVariable 'flo', 'var', v1
v3 <- LoadInteger '0'
v4 <- CreateNamedVariable 'test_id', 'var', v3
v5 <- BeginPlainFunction -> v6, v7
    v8 <- CreateNamedVariable 'Function', 'none'
    v9 <- LoadString 'n'
    v10 <- LoadString '"'
    v11 <- UnaryOperation v4, '++'
    v12 <- BinaryOperation v10, '+', v11
    v13 <- LoadString '";return flo(n)'
    v14 <- BinaryOperation v12, '+', v13
    v15 <- Construct v8, [v9, v14]
    v16 <- CreateNamedVariable 'test', 'var', v15
    v17 <- CallFunction v16, [v7]
    v18 <- CallFunction v16, [v7]
    v19 <- CallFunction v16, [v7]
    v20 <- CallFunction v16, [v7]
EndPlainFunction
v21 <- BeginPlainFunction -> 
    v22 <- LoadFloat '0.5'
    v23 <- CreateNamedVariable 'x', 'var', v22
    v24 <- BeginPlainFunction -> 
        v25 <- LoadFloat '0.5'
        v26 <- BinaryOperation v23, '-', v25
        Return v26
    EndPlainFunction
    v27 <- CallFunction v24, []
    Return v27
EndPlainFunction
v28 <- BeginPlainFunction -> 
    v29 <- LoadInteger '0'
    v30 <- LoadInteger '0'
    v31 <- CallFunction v5, [v29, v30]
    v32 <- LoadInteger '0'
    v33 <- CallFunction v21, []
    v34 <- CallFunction v5, [v32, v33]
    v35 <- LoadInteger '0'
    v36 <- UnaryOperation '-', v35
    v37 <- LoadInteger '0'
    v38 <- UnaryOperation '-', v37
    v39 <- CallFunction v5, [v36, v38]
    v40 <- CreateNamedVariable 'Infinity', 'none'
    v41 <- CallFunction v5, [v40, v40]
    v42 <- UnaryOperation '-', v40
    v43 <- UnaryOperation '-', v40
    v44 <- CallFunction v5, [v42, v43]
    v45 <- CreateNamedVariable 'NaN', 'none'
    v46 <- CallFunction v5, [v45, v45]
    v47 <- BeginPlainFunction -> v48
        v49 <- LoadInteger '1'
        v50 <- CallMethod v0, 'floor', [v48]
        v51 <- BinaryOperation v49, '/', v50
        Return v51
    EndPlainFunction
    v52 <- UnaryOperation '-', v40
    v53 <- LoadInteger '0'
    v54 <- UnaryOperation '-', v53
    v55 <- CallFunction v47, [v54]
    v56 <- UnaryOperation '-', v40
    v57 <- LoadInteger '0'
    v58 <- UnaryOperation '-', v57
    v59 <- CallFunction v47, [v58]
    v60 <- UnaryOperation '-', v40
    v61 <- LoadInteger '0'
    v62 <- UnaryOperation '-', v61
    v63 <- CallFunction v47, [v62]
    v64 <- UnaryOperation '-', v40
    v65 <- LoadInteger '0'
    v66 <- UnaryOperation '-', v65
    v67 <- CallFunction v47, [v66]
    v68 <- LoadInteger '0'
    v69 <- LoadFloat '0.1'
    v70 <- CallFunction v5, [v68, v69]
    v71 <- LoadInteger '0'
    v72 <- LoadFloat '0.49999999999999994'
    v73 <- CallFunction v5, [v71, v72]
    v74 <- LoadInteger '0'
    v75 <- LoadFloat '0.5'
    v76 <- CallFunction v5, [v74, v75]
    v77 <- LoadInteger '0'
    v78 <- LoadFloat '0.7'
    v79 <- CallFunction v5, [v77, v78]
    v80 <- LoadInteger '1'
    v81 <- UnaryOperation '-', v80
    v82 <- LoadFloat '0.1'
    v83 <- UnaryOperation '-', v82
    v84 <- CallFunction v5, [v81, v83]
    v85 <- LoadInteger '1'
    v86 <- UnaryOperation '-', v85
    v87 <- LoadFloat '0.49999999999999994'
    v88 <- UnaryOperation '-', v87
    v89 <- CallFunction v5, [v86, v88]
    v90 <- LoadInteger '1'
    v91 <- UnaryOperation '-', v90
    v92 <- LoadFloat '0.5'
    v93 <- UnaryOperation '-', v92
    v94 <- CallFunction v5, [v91, v93]
    v95 <- LoadInteger '1'
    v96 <- UnaryOperation '-', v95
    v97 <- LoadFloat '0.7'
    v98 <- UnaryOperation '-', v97
    v99 <- CallFunction v5, [v96, v98]
    v100 <- LoadInteger '1'
    v101 <- LoadInteger '1'
    v102 <- CallFunction v5, [v100, v101]
    v103 <- LoadInteger '1'
    v104 <- LoadFloat '1.1'
    v105 <- CallFunction v5, [v103, v104]
    v106 <- LoadInteger '1'
    v107 <- LoadFloat '1.5'
    v108 <- CallFunction v5, [v106, v107]
    v109 <- LoadInteger '1'
    v110 <- LoadFloat '1.7'
    v111 <- CallFunction v5, [v109, v110]
    v112 <- LoadInteger '1'
    v113 <- UnaryOperation '-', v112
    v114 <- LoadInteger '1'
    v115 <- UnaryOperation '-', v114
    v116 <- CallFunction v5, [v113, v115]
    v117 <- LoadInteger '2'
    v118 <- UnaryOperation '-', v117
    v119 <- LoadFloat '1.1'
    v120 <- UnaryOperation '-', v119
    v121 <- CallFunction v5, [v118, v120]
    v122 <- LoadInteger '2'
    v123 <- UnaryOperation '-', v122
    v124 <- LoadFloat '1.5'
    v125 <- UnaryOperation '-', v124
    v126 <- CallFunction v5, [v123, v125]
    v127 <- LoadInteger '2'
    v128 <- UnaryOperation '-', v127
    v129 <- LoadFloat '1.7'
    v130 <- UnaryOperation '-', v129
    v131 <- CallFunction v5, [v128, v130]
    v132 <- LoadInteger '0'
    v133 <- CreateNamedVariable 'Number', 'none'
    v134 <- GetProperty v133, 'MIN_VALUE'
    v135 <- CallFunction v5, [v132, v134]
    v136 <- LoadInteger '1'
    v137 <- UnaryOperation '-', v136
    v138 <- GetProperty v133, 'MIN_VALUE'
    v139 <- UnaryOperation '-', v138
    v140 <- CallFunction v5, [v137, v139]
    v141 <- GetProperty v133, 'MAX_VALUE'
    v142 <- GetProperty v133, 'MAX_VALUE'
    v143 <- CallFunction v5, [v141, v142]
    v144 <- GetProperty v133, 'MAX_VALUE'
    v145 <- UnaryOperation '-', v144
    v146 <- GetProperty v133, 'MAX_VALUE'
    v147 <- UnaryOperation '-', v146
    v148 <- CallFunction v5, [v145, v147]
    v149 <- CallFunction v5, [v40, v40]
    v150 <- UnaryOperation '-', v40
    v151 <- UnaryOperation '-', v40
    v152 <- CallFunction v5, [v150, v151]
    v153 <- LoadInteger '1'
    v154 <- LoadInteger '30'
    v155 <- BinaryOperation v153, '<<', v154
    v156 <- CreateNamedVariable 'two_30', 'var', v155
    v157 <- CallFunction v5, [v156, v156]
    v158 <- LoadFloat '0.1'
    v159 <- BinaryOperation v156, '+', v158
    v160 <- CallFunction v5, [v156, v159]
    v161 <- LoadFloat '0.5'
    v162 <- BinaryOperation v156, '+', v161
    v163 <- CallFunction v5, [v156, v162]
    v164 <- LoadFloat '0.7'
    v165 <- BinaryOperation v156, '+', v164
    v166 <- CallFunction v5, [v156, v165]
    v167 <- LoadInteger '1'
    v168 <- BinaryOperation v156, '-', v167
    v169 <- LoadInteger '1'
    v170 <- BinaryOperation v156, '-', v169
    v171 <- CallFunction v5, [v168, v170]
    v172 <- LoadInteger '1'
    v173 <- BinaryOperation v156, '-', v172
    v174 <- LoadInteger '1'
    v175 <- BinaryOperation v156, '-', v174
    v176 <- LoadFloat '0.1'
    v177 <- BinaryOperation v175, '+', v176
    v178 <- CallFunction v5, [v173, v177]
    v179 <- LoadInteger '1'
    v180 <- BinaryOperation v156, '-', v179
    v181 <- LoadInteger '1'
    v182 <- BinaryOperation v156, '-', v181
    v183 <- LoadFloat '0.5'
    v184 <- BinaryOperation v182, '+', v183
    v185 <- CallFunction v5, [v180, v184]
    v186 <- LoadInteger '1'
    v187 <- BinaryOperation v156, '-', v186
    v188 <- LoadInteger '1'
    v189 <- BinaryOperation v156, '-', v188
    v190 <- LoadFloat '0.7'
    v191 <- BinaryOperation v189, '+', v190
    v192 <- CallFunction v5, [v187, v191]
    v193 <- UnaryOperation '-', v156
    v194 <- UnaryOperation '-', v156
    v195 <- CallFunction v5, [v193, v194]
    v196 <- UnaryOperation '-', v156
    v197 <- UnaryOperation '-', v156
    v198 <- LoadFloat '0.1'
    v199 <- BinaryOperation v197, '+', v198
    v200 <- CallFunction v5, [v196, v199]
    v201 <- UnaryOperation '-', v156
    v202 <- UnaryOperation '-', v156
    v203 <- LoadFloat '0.5'
    v204 <- BinaryOperation v202, '+', v203
    v205 <- CallFunction v5, [v201, v204]
    v206 <- UnaryOperation '-', v156
    v207 <- UnaryOperation '-', v156
    v208 <- LoadFloat '0.7'
    v209 <- BinaryOperation v207, '+', v208
    v210 <- CallFunction v5, [v206, v209]
    v211 <- UnaryOperation '-', v156
    v212 <- LoadInteger '1'
    v213 <- BinaryOperation v211, '+', v212
    v214 <- UnaryOperation '-', v156
    v215 <- LoadInteger '1'
    v216 <- BinaryOperation v214, '+', v215
    v217 <- CallFunction v5, [v213, v216]
    v218 <- UnaryOperation '-', v156
    v219 <- LoadInteger '1'
    v220 <- BinaryOperation v218, '+', v219
    v221 <- UnaryOperation '-', v156
    v222 <- LoadInteger '1'
    v223 <- BinaryOperation v221, '+', v222
    v224 <- LoadFloat '0.1'
    v225 <- BinaryOperation v223, '+', v224
    v226 <- CallFunction v5, [v220, v225]
    v227 <- UnaryOperation '-', v156
    v228 <- LoadInteger '1'
    v229 <- BinaryOperation v227, '+', v228
    v230 <- UnaryOperation '-', v156
    v231 <- LoadInteger '1'
    v232 <- BinaryOperation v230, '+', v231
    v233 <- LoadFloat '0.5'
    v234 <- BinaryOperation v232, '+', v233
    v235 <- CallFunction v5, [v229, v234]
    v236 <- UnaryOperation '-', v156
    v237 <- LoadInteger '1'
    v238 <- BinaryOperation v236, '+', v237
    v239 <- UnaryOperation '-', v156
    v240 <- LoadInteger '1'
    v241 <- BinaryOperation v239, '+', v240
    v242 <- LoadFloat '0.7'
    v243 <- BinaryOperation v241, '+', v242
    v244 <- CallFunction v5, [v238, v243]
    v245 <- LoadInteger '1'
    v246 <- LoadInteger '30'
    v247 <- BinaryOperation v245, '<<', v246
    v248 <- LoadInteger '1'
    v249 <- LoadInteger '22'
    v250 <- BinaryOperation v248, '<<', v249
    v251 <- BinaryOperation v247, '*', v250
    v252 <- CreateNamedVariable 'two_52', 'var', v251
    v253 <- CallFunction v5, [v252, v252]
    v254 <- LoadFloat '0.1'
    v255 <- BinaryOperation v252, '+', v254
    v256 <- CallFunction v5, [v252, v255]
    v257 <- LoadFloat '0.5'
    v258 <- BinaryOperation v252, '+', v257
    v259 <- LoadFloat '0.5'
    v260 <- BinaryOperation v252, '+', v259
    v261 <- CallFunction v5, [v252, v260]
    v262 <- LoadInteger '1'
    v263 <- BinaryOperation v252, '+', v262
    v264 <- LoadFloat '0.7'
    v265 <- BinaryOperation v252, '+', v264
    v266 <- LoadInteger '1'
    v267 <- BinaryOperation v252, '+', v266
    v268 <- LoadFloat '0.7'
    v269 <- BinaryOperation v252, '+', v268
    v270 <- CallFunction v5, [v267, v269]
    v271 <- LoadInteger '1'
    v272 <- BinaryOperation v252, '-', v271
    v273 <- LoadInteger '1'
    v274 <- BinaryOperation v252, '-', v273
    v275 <- CallFunction v5, [v272, v274]
    v276 <- LoadInteger '1'
    v277 <- BinaryOperation v252, '-', v276
    v278 <- LoadInteger '1'
    v279 <- BinaryOperation v252, '-', v278
    v280 <- LoadFloat '0.1'
    v281 <- BinaryOperation v279, '+', v280
    v282 <- CallFunction v5, [v277, v281]
    v283 <- LoadInteger '1'
    v284 <- BinaryOperation v252, '-', v283
    v285 <- LoadInteger '1'
    v286 <- BinaryOperation v252, '-', v285
    v287 <- LoadFloat '0.5'
    v288 <- BinaryOperation v286, '+', v287
    v289 <- CallFunction v5, [v284, v288]
    v290 <- LoadInteger '1'
    v291 <- BinaryOperation v252, '-', v290
    v292 <- LoadInteger '1'
    v293 <- BinaryOperation v252, '-', v292
    v294 <- LoadFloat '0.7'
    v295 <- BinaryOperation v293, '+', v294
    v296 <- CallFunction v5, [v291, v295]
    v297 <- UnaryOperation '-', v252
    v298 <- UnaryOperation '-', v252
    v299 <- CallFunction v5, [v297, v298]
    v300 <- UnaryOperation '-', v252
    v301 <- UnaryOperation '-', v252
    v302 <- LoadFloat '0.1'
    v303 <- BinaryOperation v301, '+', v302
    v304 <- CallFunction v5, [v300, v303]
    v305 <- UnaryOperation '-', v252
    v306 <- UnaryOperation '-', v252
    v307 <- LoadFloat '0.5'
    v308 <- BinaryOperation v306, '+', v307
    v309 <- CallFunction v5, [v305, v308]
    v310 <- UnaryOperation '-', v252
    v311 <- UnaryOperation '-', v252
    v312 <- LoadFloat '0.7'
    v313 <- BinaryOperation v311, '+', v312
    v314 <- CallFunction v5, [v310, v313]
    v315 <- UnaryOperation '-', v252
    v316 <- LoadInteger '1'
    v317 <- BinaryOperation v315, '+', v316
    v318 <- UnaryOperation '-', v252
    v319 <- LoadInteger '1'
    v320 <- BinaryOperation v318, '+', v319
    v321 <- CallFunction v5, [v317, v320]
    v322 <- UnaryOperation '-', v252
    v323 <- LoadInteger '1'
    v324 <- BinaryOperation v322, '+', v323
    v325 <- UnaryOperation '-', v252
    v326 <- LoadInteger '1'
    v327 <- BinaryOperation v325, '+', v326
    v328 <- LoadFloat '0.1'
    v329 <- BinaryOperation v327, '+', v328
    v330 <- CallFunction v5, [v324, v329]
    v331 <- UnaryOperation '-', v252
    v332 <- LoadInteger '1'
    v333 <- BinaryOperation v331, '+', v332
    v334 <- UnaryOperation '-', v252
    v335 <- LoadInteger '1'
    v336 <- BinaryOperation v334, '+', v335
    v337 <- LoadFloat '0.5'
    v338 <- BinaryOperation v336, '+', v337
    v339 <- CallFunction v5, [v333, v338]
    v340 <- UnaryOperation '-', v252
    v341 <- LoadInteger '1'
    v342 <- BinaryOperation v340, '+', v341
    v343 <- UnaryOperation '-', v252
    v344 <- LoadInteger '1'
    v345 <- BinaryOperation v343, '+', v344
    v346 <- LoadFloat '0.7'
    v347 <- BinaryOperation v345, '+', v346
    v348 <- CallFunction v5, [v342, v347]
EndPlainFunction
BeginForLoopInitializer
    v349 <- LoadInteger '0'
BeginForLoopCondition -> v350
    v351 <- LoadInteger '10'
    v352 <- Compare v350, '<', v351
BeginForLoopAfterthought v352 -> v353
    v354 <- UnaryOperation v353, '++'
BeginForLoopBody -> v355
    v356 <- CallFunction v28, []
    v357 <- CreateNamedVariable 'Array', 'none'
    v358 <- LoadInteger '10000'
    v359 <- BinaryOperation v355, '*', v358
    v360 <- Construct v357, [v359]
EndForLoop
v361 <- BeginPlainFunction -> v362, v363
    v364 <- CallMethod v0, 'floor', [v363]
    v365 <- CreateNamedVariable 'ret', 'var', v364
    BeginWhileLoopHeader
        v366 <- UnaryOperation '--', v362
        v367 <- LoadInteger '0'
        v368 <- Compare v366, '>', v367
    BeginWhileLoopBody v368
        v369 <- CallMethod v0, 'floor', [v363]
        Update v365, '+', v369
    EndWhileLoop
    Return v365
EndPlainFunction
v370 <- LoadInteger '0'
v371 <- UnaryOperation '-', v370
v372 <- LoadInteger '1'
v373 <- LoadInteger '0'
v374 <- UnaryOperation '-', v373
v375 <- CallFunction v361, [v372, v374]
v376 <- LoadInteger '0'
v377 <- UnaryOperation '-', v376
v378 <- LoadInteger '50000'
v379 <- LoadInteger '0'
v380 <- UnaryOperation '-', v379
v381 <- CallFunction v361, [v378, v380]


var flo = Math.floor;
var test_id = 0;
function testFloor(a6, a7) {
    const v15 = new Function("n", (""" + test_id++) + "";return flo(n)");
    var test = v15;
    test(a7);
    test(a7);
    test(a7);
    test(a7);
}
function zero() {
    var x = 0.5;
    function f24() {
        return x - 0.5;
    }
    return f24();
}
function test() {
    testFloor(0, 0);
    testFloor(0, zero());
    testFloor(-0, -0);
    testFloor(Infinity, Infinity);
    testFloor(-Infinity, -Infinity);
    testFloor(NaN, NaN);
    function ifloor(a48) {
        return 1 / Math.floor(a48);
    }
    -Infinity;
    ifloor(-0);
    -Infinity;
    ifloor(-0);
    -Infinity;
    ifloor(-0);
    -Infinity;
    ifloor(-0);
    testFloor(0, 0.1);
    testFloor(0, 0.49999999999999994);
    testFloor(0, 0.5);
    testFloor(0, 0.7);
    testFloor(-1, -0.1);
    testFloor(-1, -0.49999999999999994);
    testFloor(-1, -0.5);
    testFloor(-1, -0.7);
    testFloor(1, 1);
    testFloor(1, 1.1);
    testFloor(1, 1.5);
    testFloor(1, 1.7);
    testFloor(-1, -1);
    testFloor(-2, -1.1);
    testFloor(-2, -1.5);
    testFloor(-2, -1.7);
    testFloor(0, Number.MIN_VALUE);
    testFloor(-1, -Number.MIN_VALUE);
    testFloor(Number.MAX_VALUE, Number.MAX_VALUE);
    testFloor(-Number.MAX_VALUE, -Number.MAX_VALUE);
    testFloor(Infinity, Infinity);
    testFloor(-Infinity, -Infinity);
    var two_30 = 1 << 30;
    testFloor(two_30, two_30);
    testFloor(two_30, two_30 + 0.1);
    testFloor(two_30, two_30 + 0.5);
    testFloor(two_30, two_30 + 0.7);
    testFloor(two_30 - 1, two_30 - 1);
    testFloor(two_30 - 1, (two_30 - 1) + 0.1);
    testFloor(two_30 - 1, (two_30 - 1) + 0.5);
    testFloor(two_30 - 1, (two_30 - 1) + 0.7);
    testFloor(-two_30, -two_30);
    testFloor(-two_30, -two_30 + 0.1);
    testFloor(-two_30, -two_30 + 0.5);
    testFloor(-two_30, -two_30 + 0.7);
    testFloor(-two_30 + 1, -two_30 + 1);
    testFloor(-two_30 + 1, (-two_30 + 1) + 0.1);
    testFloor(-two_30 + 1, (-two_30 + 1) + 0.5);
    testFloor(-two_30 + 1, (-two_30 + 1) + 0.7);
    var two_52 = (1 << 30) * (1 << 22);
    testFloor(two_52, two_52);
    testFloor(two_52, two_52 + 0.1);
    two_52 + 0.5;
    testFloor(two_52, two_52 + 0.5);
    two_52 + 1;
    two_52 + 0.7;
    testFloor(two_52 + 1, two_52 + 0.7);
    testFloor(two_52 - 1, two_52 - 1);
    testFloor(two_52 - 1, (two_52 - 1) + 0.1);
    testFloor(two_52 - 1, (two_52 - 1) + 0.5);
    testFloor(two_52 - 1, (two_52 - 1) + 0.7);
    testFloor(-two_52, -two_52);
    testFloor(-two_52, -two_52 + 0.1);
    testFloor(-two_52, -two_52 + 0.5);
    testFloor(-two_52, -two_52 + 0.7);
    testFloor(-two_52 + 1, -two_52 + 1);
    testFloor(-two_52 + 1, (-two_52 + 1) + 0.1);
    testFloor(-two_52 + 1, (-two_52 + 1) + 0.5);
    testFloor(-two_52 + 1, (-two_52 + 1) + 0.7);
}
for (let i350 = 0; i350 < 10; i350++) {
    test();
    new Array(i350 * 10000);
}
function floorsum(a362, a363) {
    var ret = Math.floor(a363);
    while (--a362 > 0) {
        ret += Math.floor(a363);
    }
    return ret;
}
-0;
floorsum(1, -0);
-0;
floorsum(50000, -0);

FuzzIL program written to corpus/math-floor-global.fzil
