v0 <- BeginPlainFunction -> 
    v1 <- BeginPlainFunction -> v2
        v3 <- UnaryOperation '++', v2
        Return v3
    EndPlainFunction
    v4 <- LoadFloat '0.1'
    v5 <- CallFunction v1, [v4]
    v6 <- BeginPlainFunction -> v7, v8
        v9 <- GetComputedProperty v7, v8
        v10 <- CreateNamedVariable 'x', 'const', v9
        v11 <- CallFunction v1, [v8]
        v12 <- GetComputedProperty v7, v11
        v13 <- CreateNamedVariable 'y', 'const', v12
        v14 <- BinaryOperation v10, '+', v13
        Return v14
    EndPlainFunction
    v15 <- LoadInteger '3'
    v16 <- LoadInteger '1'
    v17 <- LoadInteger '2'
    v18 <- CreateArray [v16, v17]
    v19 <- LoadInteger '0'
    v20 <- CallFunction v6, [v18, v19]
    v21 <- LoadInteger '3'
    v22 <- LoadInteger '1'
    v23 <- LoadInteger '2'
    v24 <- CreateArray [v22, v23]
    v25 <- LoadInteger '0'
    v26 <- CallFunction v6, [v24, v25]
    v27 <- LoadInteger '3'
    v28 <- LoadInteger '1'
    v29 <- LoadInteger '2'
    v30 <- CreateArray [v28, v29]
    v31 <- LoadInteger '0'
    v32 <- CallFunction v6, [v30, v31]
EndPlainFunction
v33 <- CallFunction v0, []
v34 <- BeginPlainFunction -> 
    v35 <- BeginPlainFunction -> v36
        v37 <- UnaryOperation '++', v36
        Return v37
    EndPlainFunction
    v38 <- CreateNamedVariable 'NaN', 'none'
    v39 <- LoadUndefined
    v40 <- CallFunction v35, [v39]
    v41 <- BeginPlainFunction -> v42, v43
        v44 <- GetComputedProperty v42, v43
        v45 <- CreateNamedVariable 'x', 'const', v44
        v46 <- CallFunction v35, [v43]
        v47 <- GetComputedProperty v42, v46
        v48 <- CreateNamedVariable 'y', 'const', v47
        v49 <- BinaryOperation v45, '+', v48
        Return v49
    EndPlainFunction
    v50 <- LoadInteger '3'
    v51 <- LoadInteger '1'
    v52 <- LoadInteger '2'
    v53 <- CreateArray [v51, v52]
    v54 <- LoadInteger '0'
    v55 <- CallFunction v41, [v53, v54]
    v56 <- LoadInteger '3'
    v57 <- LoadInteger '1'
    v58 <- LoadInteger '2'
    v59 <- CreateArray [v57, v58]
    v60 <- LoadInteger '0'
    v61 <- CallFunction v41, [v59, v60]
    v62 <- LoadInteger '3'
    v63 <- LoadInteger '1'
    v64 <- LoadInteger '2'
    v65 <- CreateArray [v63, v64]
    v66 <- LoadInteger '0'
    v67 <- CallFunction v41, [v65, v66]
EndPlainFunction
v68 <- CallFunction v34, []
v69 <- BeginPlainFunction -> 
    v70 <- BeginPlainFunction -> v71
        v72 <- UnaryOperation '--', v71
        Return v72
    EndPlainFunction
    v73 <- LoadFloat '0.9'
    v74 <- UnaryOperation '-', v73
    v75 <- LoadFloat '0.1'
    v76 <- CallFunction v70, [v75]
    v77 <- BeginPlainFunction -> v78, v79
        v80 <- GetComputedProperty v78, v79
        v81 <- CreateNamedVariable 'x', 'const', v80
        v82 <- CallFunction v70, [v79]
        v83 <- GetComputedProperty v78, v82
        v84 <- CreateNamedVariable 'y', 'const', v83
        v85 <- BinaryOperation v81, '+', v84
        Return v85
    EndPlainFunction
    v86 <- LoadInteger '3'
    v87 <- LoadInteger '1'
    v88 <- LoadInteger '2'
    v89 <- CreateArray [v87, v88]
    v90 <- LoadInteger '1'
    v91 <- CallFunction v77, [v89, v90]
    v92 <- LoadInteger '3'
    v93 <- LoadInteger '1'
    v94 <- LoadInteger '2'
    v95 <- CreateArray [v93, v94]
    v96 <- LoadInteger '1'
    v97 <- CallFunction v77, [v95, v96]
    v98 <- LoadInteger '3'
    v99 <- LoadInteger '1'
    v100 <- LoadInteger '2'
    v101 <- CreateArray [v99, v100]
    v102 <- LoadInteger '1'
    v103 <- CallFunction v77, [v101, v102]
EndPlainFunction
v104 <- CallFunction v69, []
v105 <- BeginPlainFunction -> 
    v106 <- BeginPlainFunction -> v107
        v108 <- UnaryOperation '--', v107
        Return v108
    EndPlainFunction
    v109 <- CreateNamedVariable 'NaN', 'none'
    v110 <- LoadUndefined
    v111 <- CallFunction v106, [v110]
    v112 <- BeginPlainFunction -> v113, v114
        v115 <- GetComputedProperty v113, v114
        v116 <- CreateNamedVariable 'x', 'const', v115
        v117 <- CallFunction v106, [v114]
        v118 <- GetComputedProperty v113, v117
        v119 <- CreateNamedVariable 'y', 'const', v118
        v120 <- BinaryOperation v116, '+', v119
        Return v120
    EndPlainFunction
    v121 <- LoadInteger '3'
    v122 <- LoadInteger '1'
    v123 <- LoadInteger '2'
    v124 <- CreateArray [v122, v123]
    v125 <- LoadInteger '1'
    v126 <- CallFunction v112, [v124, v125]
    v127 <- LoadInteger '3'
    v128 <- LoadInteger '1'
    v129 <- LoadInteger '2'
    v130 <- CreateArray [v128, v129]
    v131 <- LoadInteger '1'
    v132 <- CallFunction v112, [v130, v131]
    v133 <- LoadInteger '3'
    v134 <- LoadInteger '1'
    v135 <- LoadInteger '2'
    v136 <- CreateArray [v134, v135]
    v137 <- LoadInteger '1'
    v138 <- CallFunction v112, [v136, v137]
EndPlainFunction
v139 <- CallFunction v105, []
v140 <- BeginPlainFunction -> 
    v141 <- BeginPlainFunction -> v142, v143
        v144 <- GetComputedProperty v142, v143
        v145 <- CreateNamedVariable 'x', 'const', v144
        v146 <- UnaryOperation v143, '++'
        v147 <- CreateNamedVariable 'y', 'const', v146
        v148 <- BinaryOperation v145, '+', v147
        Return v148
    EndPlainFunction
    v149 <- LoadInteger '1'
    v150 <- LoadInteger '1'
    v151 <- LoadInteger '2'
    v152 <- CreateArray [v150, v151]
    v153 <- LoadInteger '0'
    v154 <- CallFunction v141, [v152, v153]
    v155 <- LoadInteger '1'
    v156 <- LoadInteger '1'
    v157 <- LoadInteger '2'
    v158 <- CreateArray [v156, v157]
    v159 <- LoadInteger '0'
    v160 <- CallFunction v141, [v158, v159]
    v161 <- LoadInteger '1'
    v162 <- LoadInteger '1'
    v163 <- LoadInteger '2'
    v164 <- CreateArray [v162, v163]
    v165 <- LoadInteger '0'
    v166 <- CallFunction v141, [v164, v165]
EndPlainFunction
v167 <- CallFunction v140, []
v168 <- BeginPlainFunction -> 
    v169 <- BeginPlainFunction -> v170, v171
        v172 <- GetComputedProperty v170, v171
        v173 <- CreateNamedVariable 'x', 'const', v172
        v174 <- UnaryOperation '++', v171
        v175 <- GetComputedProperty v170, v174
        v176 <- CreateNamedVariable 'y', 'const', v175
        v177 <- BinaryOperation v173, '+', v176
        Return v177
    EndPlainFunction
    v178 <- LoadInteger '3'
    v179 <- LoadInteger '1'
    v180 <- LoadInteger '2'
    v181 <- CreateArray [v179, v180]
    v182 <- LoadInteger '0'
    v183 <- CallFunction v169, [v181, v182]
    v184 <- LoadInteger '3'
    v185 <- LoadInteger '1'
    v186 <- LoadInteger '2'
    v187 <- CreateArray [v185, v186]
    v188 <- LoadInteger '0'
    v189 <- CallFunction v169, [v187, v188]
    v190 <- LoadInteger '3'
    v191 <- LoadInteger '1'
    v192 <- LoadInteger '2'
    v193 <- CreateArray [v191, v192]
    v194 <- LoadInteger '0'
    v195 <- CallFunction v169, [v193, v194]
EndPlainFunction
v196 <- CallFunction v168, []
v197 <- BeginPlainFunction -> 
    v198 <- BeginPlainFunction -> v199, v200
        v201 <- GetComputedProperty v199, v200
        v202 <- CreateNamedVariable 'x', 'const', v201
        v203 <- UnaryOperation '--', v200
        v204 <- GetComputedProperty v199, v203
        v205 <- CreateNamedVariable 'y', 'const', v204
        v206 <- BinaryOperation v202, '+', v205
        Return v206
    EndPlainFunction
    v207 <- LoadInteger '3'
    v208 <- LoadInteger '1'
    v209 <- LoadInteger '2'
    v210 <- CreateArray [v208, v209]
    v211 <- LoadInteger '1'
    v212 <- CallFunction v198, [v210, v211]
    v213 <- LoadInteger '3'
    v214 <- LoadInteger '1'
    v215 <- LoadInteger '2'
    v216 <- CreateArray [v214, v215]
    v217 <- LoadInteger '1'
    v218 <- CallFunction v198, [v216, v217]
    v219 <- LoadInteger '3'
    v220 <- LoadInteger '1'
    v221 <- LoadInteger '2'
    v222 <- CreateArray [v220, v221]
    v223 <- LoadInteger '1'
    v224 <- CallFunction v198, [v222, v223]
EndPlainFunction
v225 <- CallFunction v197, []
v226 <- BeginPlainFunction -> 
    v227 <- BeginPlainFunction -> v228, v229
        v230 <- GetComputedProperty v228, v229
        v231 <- CreateNamedVariable 'x', 'const', v230
        v232 <- LoadInteger '0'
        v233 <- Compare v229, '===', v232
        BeginIf v233
            Return v231
        EndIf
        Return v229
    EndPlainFunction
    v234 <- LoadInteger '1'
    v235 <- LoadInteger '1'
    v236 <- LoadInteger '2'
    v237 <- CreateArray [v235, v236]
    v238 <- LoadInteger '0'
    v239 <- CallFunction v227, [v237, v238]
    v240 <- LoadInteger '1'
    v241 <- LoadInteger '1'
    v242 <- LoadInteger '2'
    v243 <- CreateArray [v241, v242]
    v244 <- LoadInteger '1'
    v245 <- CallFunction v227, [v243, v244]
    v246 <- LoadInteger '1'
    v247 <- LoadInteger '1'
    v248 <- LoadInteger '2'
    v249 <- CreateArray [v247, v248]
    v250 <- LoadInteger '0'
    v251 <- CallFunction v227, [v249, v250]
    v252 <- LoadInteger '1'
    v253 <- LoadInteger '1'
    v254 <- LoadInteger '2'
    v255 <- CreateArray [v253, v254]
    v256 <- LoadInteger '1'
    v257 <- CallFunction v227, [v255, v256]
    v258 <- LoadInteger '9'
    v259 <- LoadInteger '9'
    v260 <- LoadInteger '2'
    v261 <- CreateArray [v259, v260]
    v262 <- LoadInteger '0'
    v263 <- UnaryOperation '-', v262
    v264 <- CallFunction v227, [v261, v263]
    v265 <- CallFunction v227, []
EndPlainFunction
v266 <- CallFunction v226, []
v267 <- BeginPlainFunction -> 
    v268 <- BeginPlainFunction -> v269, v270
        v271 <- GetComputedProperty v269, v270
        v272 <- CreateNamedVariable 'x', 'const', v271
        v273 <- LoadInteger '1'
        v274 <- Compare v270, '<', v273
        BeginIf v274
            Return v272
        EndIf
        Return v270
    EndPlainFunction
    v275 <- LoadInteger '1'
    v276 <- LoadInteger '1'
    v277 <- LoadInteger '2'
    v278 <- CreateArray [v276, v277]
    v279 <- LoadInteger '0'
    v280 <- CallFunction v268, [v278, v279]
    v281 <- LoadInteger '1'
    v282 <- LoadInteger '1'
    v283 <- LoadInteger '2'
    v284 <- CreateArray [v282, v283]
    v285 <- LoadInteger '1'
    v286 <- CallFunction v268, [v284, v285]
    v287 <- LoadInteger '1'
    v288 <- LoadInteger '1'
    v289 <- LoadInteger '2'
    v290 <- CreateArray [v288, v289]
    v291 <- LoadInteger '0'
    v292 <- CallFunction v268, [v290, v291]
    v293 <- LoadInteger '1'
    v294 <- LoadInteger '1'
    v295 <- LoadInteger '2'
    v296 <- CreateArray [v294, v295]
    v297 <- LoadInteger '1'
    v298 <- CallFunction v268, [v296, v297]
    v299 <- LoadInteger '9'
    v300 <- LoadInteger '9'
    v301 <- LoadInteger '2'
    v302 <- CreateArray [v300, v301]
    v303 <- LoadInteger '0'
    v304 <- UnaryOperation '-', v303
    v305 <- CallFunction v268, [v302, v304]
    v306 <- CallFunction v268, []
EndPlainFunction
v307 <- CallFunction v267, []
v308 <- BeginPlainFunction -> 
    v309 <- BeginPlainFunction -> v310, v311
        v312 <- GetComputedProperty v310, v311
        v313 <- CreateNamedVariable 'x', 'const', v312
        v314 <- LoadInteger '0'
        v315 <- Compare v311, '<=', v314
        BeginIf v315
            Return v313
        EndIf
        Return v311
    EndPlainFunction
    v316 <- LoadInteger '1'
    v317 <- LoadInteger '1'
    v318 <- LoadInteger '2'
    v319 <- CreateArray [v317, v318]
    v320 <- LoadInteger '0'
    v321 <- CallFunction v309, [v319, v320]
    v322 <- LoadInteger '1'
    v323 <- LoadInteger '1'
    v324 <- LoadInteger '2'
    v325 <- CreateArray [v323, v324]
    v326 <- LoadInteger '1'
    v327 <- CallFunction v309, [v325, v326]
    v328 <- LoadInteger '1'
    v329 <- LoadInteger '1'
    v330 <- LoadInteger '2'
    v331 <- CreateArray [v329, v330]
    v332 <- LoadInteger '0'
    v333 <- CallFunction v309, [v331, v332]
    v334 <- LoadInteger '1'
    v335 <- LoadInteger '1'
    v336 <- LoadInteger '2'
    v337 <- CreateArray [v335, v336]
    v338 <- LoadInteger '1'
    v339 <- CallFunction v309, [v337, v338]
    v340 <- LoadInteger '9'
    v341 <- LoadInteger '9'
    v342 <- LoadInteger '2'
    v343 <- CreateArray [v341, v342]
    v344 <- LoadInteger '0'
    v345 <- UnaryOperation '-', v344
    v346 <- CallFunction v309, [v343, v345]
    v347 <- CallFunction v309, []
EndPlainFunction
v348 <- CallFunction v308, []


function f0() {
    function bar(a2) {
        return ++a2;
    }
    bar(0.1);
    function foo(a7, a8) {
        const x = a7[a8];
        const y = a7[bar(a8)];
        return x + y;
    }
    foo([1,2], 0);
    foo([1,2], 0);
    foo([1,2], 0);
}
f0();
function f34() {
    function bar(a36) {
        return ++a36;
    }
    bar(undefined);
    function foo(a42, a43) {
        const x = a42[a43];
        const y = a42[bar(a43)];
        return x + y;
    }
    foo([1,2], 0);
    foo([1,2], 0);
    foo([1,2], 0);
}
f34();
function f69() {
    function bar(a71) {
        return --a71;
    }
    -0.9;
    bar(0.1);
    function foo(a78, a79) {
        const x = a78[a79];
        const y = a78[bar(a79)];
        return x + y;
    }
    foo([1,2], 1);
    foo([1,2], 1);
    foo([1,2], 1);
}
f69();
function f105() {
    function bar(a107) {
        return --a107;
    }
    bar(undefined);
    function foo(a113, a114) {
        const x = a113[a114];
        const y = a113[bar(a114)];
        return x + y;
    }
    foo([1,2], 1);
    foo([1,2], 1);
    foo([1,2], 1);
}
f105();
function f140() {
    function foo(a142, a143) {
        const x = a142[a143];
        const y = a143++;
        return x + y;
    }
    foo([1,2], 0);
    foo([1,2], 0);
    foo([1,2], 0);
}
f140();
function f168() {
    function foo(a170, a171) {
        const x = a170[a171];
        const y = a170[++a171];
        return x + y;
    }
    foo([1,2], 0);
    foo([1,2], 0);
    foo([1,2], 0);
}
f168();
function f197() {
    function foo(a199, a200) {
        const x = a199[a200];
        const y = a199[--a200];
        return x + y;
    }
    foo([1,2], 1);
    foo([1,2], 1);
    foo([1,2], 1);
}
f197();
function f226() {
    function foo(a228, a229) {
        const x = a228[a229];
        if (a229 === 0) {
            return x;
        }
        return a229;
    }
    foo([1,2], 0);
    foo([1,2], 1);
    foo([1,2], 0);
    foo([1,2], 1);
    foo([9,2], -0);
    foo();
}
f226();
function f267() {
    function foo(a269, a270) {
        const x = a269[a270];
        if (a270 < 1) {
            return x;
        }
        return a270;
    }
    foo([1,2], 0);
    foo([1,2], 1);
    foo([1,2], 0);
    foo([1,2], 1);
    foo([9,2], -0);
    foo();
}
f267();
function f308() {
    function foo(a310, a311) {
        const x = a310[a311];
        if (a311 <= 0) {
            return x;
        }
        return a311;
    }
    foo([1,2], 0);
    foo([1,2], 1);
    foo([1,2], 0);
    foo([1,2], 1);
    foo([9,2], -0);
    foo();
}
f308();

FuzzIL program written to corpus/redundancy-elimination.fzil
