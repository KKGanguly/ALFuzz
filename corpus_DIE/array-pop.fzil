v0 <- BeginPlainFunction -> 
    v1 <- CreateArray []
    v2 <- CreateNamedVariable 'a', 'var', v1
    BeginForLoopInitializer
        v3 <- LoadInteger '0'
    BeginForLoopCondition -> v4
        v5 <- LoadInteger '7'
        v6 <- Compare v4, '<', v5
    BeginForLoopAfterthought v6 -> v7
        v8 <- UnaryOperation v7, '++'
    BeginForLoopBody -> v9
        v10 <- LoadInteger '7'
        v11 <- LoadInteger '6'
        v12 <- LoadInteger '5'
        v13 <- LoadInteger '4'
        v14 <- LoadInteger '3'
        v15 <- LoadInteger '2'
        v16 <- LoadInteger '1'
        v17 <- CreateArray [v10, v11, v12, v13, v14, v15, v16]
        Reassign v2, v17
        v18 <- LoadInteger '1'
        v19 <- CallMethod v2, 'pop', []
        v20 <- LoadString '1st pop'
        v21 <- LoadInteger '6'
        v22 <- GetProperty v2, 'length'
        v23 <- LoadString 'length 1st pop'
        v24 <- LoadInteger '2'
        v25 <- LoadInteger '1'
        v26 <- CallMethod v2, 'pop', [v25]
        v27 <- LoadString '2nd pop'
        v28 <- LoadInteger '5'
        v29 <- GetProperty v2, 'length'
        v30 <- LoadString 'length 2nd pop'
        v31 <- LoadInteger '3'
        v32 <- LoadInteger '1'
        v33 <- LoadInteger '2'
        v34 <- CallMethod v2, 'pop', [v32, v33]
        v35 <- LoadString '3rd pop'
        v36 <- LoadInteger '4'
        v37 <- GetProperty v2, 'length'
        v38 <- LoadString 'length 3rd pop'
        v39 <- LoadInteger '4'
        v40 <- LoadInteger '1'
        v41 <- LoadInteger '2'
        v42 <- LoadInteger '3'
        v43 <- CallMethod v2, 'pop', [v40, v41, v42]
        v44 <- LoadString '4th pop'
        v45 <- LoadInteger '3'
        v46 <- GetProperty v2, 'length'
        v47 <- LoadString 'length 4th pop'
        v48 <- LoadInteger '5'
        v49 <- CallMethod v2, 'pop', []
        v50 <- LoadString '5th pop'
        v51 <- LoadInteger '2'
        v52 <- GetProperty v2, 'length'
        v53 <- LoadString 'length 5th pop'
        v54 <- LoadInteger '6'
        v55 <- CallMethod v2, 'pop', []
        v56 <- LoadString '6th pop'
        v57 <- LoadInteger '1'
        v58 <- GetProperty v2, 'length'
        v59 <- LoadString 'length 6th pop'
        v60 <- LoadInteger '7'
        v61 <- CallMethod v2, 'pop', []
        v62 <- LoadString '7th pop'
        v63 <- LoadInteger '0'
        v64 <- GetProperty v2, 'length'
        v65 <- LoadString 'length 7th pop'
        v66 <- LoadUndefined
        v67 <- CallMethod v2, 'pop', []
        v68 <- LoadString '8th pop'
        v69 <- LoadInteger '0'
        v70 <- GetProperty v2, 'length'
        v71 <- LoadString 'length 8th pop'
        v72 <- LoadUndefined
        v73 <- LoadInteger '1'
        v74 <- LoadInteger '2'
        v75 <- LoadInteger '3'
        v76 <- CallMethod v2, 'pop', [v73, v74, v75]
        v77 <- LoadString '9th pop'
        v78 <- LoadInteger '0'
        v79 <- GetProperty v2, 'length'
        v80 <- LoadString 'length 9th pop'
    EndForLoop
    BeginForLoopInitializer
        v81 <- LoadInteger '0'
    BeginForLoopCondition -> v82
        v83 <- LoadInteger '10'
        v84 <- Compare v82, '<', v83
    BeginForLoopAfterthought v84 -> v85
        v86 <- UnaryOperation v85, '++'
    BeginForLoopBody -> v87
        v88 <- LoadInteger '1'
        v89 <- CreateNamedVariable 'Array', 'none'
        v90 <- GetProperty v89, 'prototype'
        SetElement v90, '1', v88
        v91 <- LoadInteger '3'
        v92 <- GetProperty v89, 'prototype'
        SetElement v92, '3', v91
        v93 <- LoadInteger '5'
        v94 <- GetProperty v89, 'prototype'
        SetElement v94, '5', v93
        v95 <- LoadInteger '7'
        v96 <- GetProperty v89, 'prototype'
        SetElement v96, '7', v95
        v97 <- LoadInteger '9'
        v98 <- GetProperty v89, 'prototype'
        SetElement v98, '9', v97
        v99 <- LoadInteger '0'
        v100 <- LoadInteger '1'
        v101 <- LoadInteger '2'
        v102 <- LoadUndefined
        v103 <- LoadInteger '4'
        v104 <- LoadInteger '6'
        v105 <- LoadInteger '7'
        v106 <- LoadInteger '8'
        v107 <- CreateArray [v99, v100, v101, v102, v103, v102, v104, v105, v106, v102]
        Reassign v2, v107
        v108 <- LoadInteger '10'
        v109 <- GetProperty v2, 'length'
        v110 <- LoadString 'inherit-initial-length'
        BeginForLoopInitializer
            v111 <- LoadInteger '9'
        BeginForLoopCondition -> v112
            v113 <- LoadInteger '0'
            v114 <- Compare v112, '>=', v113
        BeginForLoopAfterthought v114 -> v115
            v116 <- UnaryOperation v115, '--'
        BeginForLoopBody -> v117
            v118 <- LoadInteger '1'
            v119 <- BinaryOperation v117, '+', v118
            v120 <- GetProperty v2, 'length'
            v121 <- LoadString 'inherit-pre-length-'
            v122 <- BinaryOperation v121, '+', v117
            v123 <- TestIn v117, v2
            v124 <- LoadString 'has property '
            v125 <- BinaryOperation v124, '+', v117
            v126 <- CallMethod v2, 'hasOwnProperty', [v117]
            v127 <- CreateNamedVariable 'own', 'var', v126
            v128 <- GetProperty v89, 'prototype'
            v129 <- CallMethod v128, 'hasOwnProperty', [v117]
            v130 <- CreateNamedVariable 'inherited', 'var', v129
            v131 <- CallMethod v2, 'pop', []
            v132 <- LoadString 'inherit-pop'
            v133 <- GetProperty v2, 'length'
            v134 <- LoadString 'inherit-post-length'
            v135 <- CallMethod v2, 'hasOwnProperty', [v117]
            v136 <- LoadString 'inherit-deleted-own-'
            v137 <- BinaryOperation v136, '+', v117
            v138 <- GetProperty v89, 'prototype'
            v139 <- CallMethod v138, 'hasOwnProperty', [v117]
            v140 <- LoadString 'inherit-not-deleted-inherited'
            v141 <- BinaryOperation v140, '+', v117
        EndForLoop
        v142 <- LoadInteger '0'
        v143 <- GetProperty v89, 'prototype'
        SetProperty v143, 'length', v142
    EndForLoop
    BeginForLoopInitializer
        v144 <- LoadInteger '0'
    BeginForLoopCondition -> v145
        v146 <- LoadInteger '10'
        v147 <- Compare v145, '<', v146
    BeginForLoopAfterthought v147 -> v148
        v149 <- UnaryOperation v148, '++'
    BeginForLoopBody -> v150
        v151 <- CreateArray []
        v152 <- CreateNamedVariable 'array_proto', 'var', v151
        v153 <- LoadInteger '1'
        SetElement v152, '1', v153
        v154 <- LoadInteger '3'
        SetElement v152, '3', v154
        v155 <- LoadInteger '5'
        SetElement v152, '5', v155
        v156 <- LoadInteger '7'
        SetElement v152, '7', v156
        v157 <- LoadInteger '9'
        SetElement v152, '9', v157
        v158 <- LoadInteger '0'
        v159 <- LoadInteger '1'
        v160 <- LoadInteger '2'
        v161 <- LoadUndefined
        v162 <- LoadInteger '4'
        v163 <- LoadInteger '6'
        v164 <- LoadInteger '7'
        v165 <- LoadInteger '8'
        v166 <- CreateArray [v158, v159, v160, v161, v162, v161, v163, v164, v165, v161]
        Reassign v2, v166
        SetProperty v2, '__proto__', v152
        v167 <- LoadInteger '10'
        v168 <- GetProperty v2, 'length'
        v169 <- LoadString 'array_proto-inherit-initial-length'
        BeginForLoopInitializer
            v170 <- LoadInteger '9'
        BeginForLoopCondition -> v171
            v172 <- LoadInteger '0'
            v173 <- Compare v171, '>=', v172
        BeginForLoopAfterthought v173 -> v174
            v175 <- UnaryOperation v174, '--'
        BeginForLoopBody -> v176
            v177 <- LoadInteger '1'
            v178 <- BinaryOperation v176, '+', v177
            v179 <- GetProperty v2, 'length'
            v180 <- LoadString 'array_proto-inherit-pre-length-'
            v181 <- BinaryOperation v180, '+', v176
            v182 <- TestIn v176, v2
            v183 <- LoadString 'array_proto-has property '
            v184 <- BinaryOperation v183, '+', v176
            v185 <- CallMethod v2, 'hasOwnProperty', [v176]
            v186 <- CreateNamedVariable 'own', 'var', v185
            v187 <- CallMethod v152, 'hasOwnProperty', [v176]
            v188 <- CreateNamedVariable 'inherited', 'var', v187
            v189 <- CallMethod v2, 'pop', []
            v190 <- LoadString 'array_proto-inherit-pop'
            v191 <- GetProperty v2, 'length'
            v192 <- LoadString 'array_proto-inherit-post-length'
            v193 <- CallMethod v2, 'hasOwnProperty', [v176]
            v194 <- LoadString 'array_proto-inherit-deleted-own-'
            v195 <- BinaryOperation v194, '+', v176
            v196 <- CallMethod v152, 'hasOwnProperty', [v176]
            v197 <- LoadString 'array_proto-inherit-not-deleted-inherited'
            v198 <- BinaryOperation v197, '+', v176
        EndForLoop
    EndForLoop
EndPlainFunction
v199 <- CallFunction v0, []
v200 <- BeginPlainFunction -> 
    v201 <- CreateArray []
    v202 <- CreateNamedVariable 'a', 'var', v201
    BeginForLoopInitializer
        v203 <- LoadInteger '0'
    BeginForLoopCondition -> v204
        v205 <- LoadInteger '100'
        v206 <- Compare v204, '<', v205
    BeginForLoopAfterthought v206 -> v207
        v208 <- UnaryOperation v207, '++'
    BeginForLoopBody -> v209
        v210 <- CallMethod v202, 'push', [v209]
    EndForLoop
    BeginObjectLiteral
        ObjectLiteralAddProperty `__proto__`, v202
    v211 <- EndObjectLiteral
    v212 <- CreateNamedVariable 'x', 'var', v211
    BeginForLoopInitializer
        v213 <- LoadInteger '0'
    BeginForLoopCondition -> v214
        v215 <- LoadInteger '100'
        v216 <- Compare v214, '<', v215
    BeginForLoopAfterthought v216 -> v217
        v218 <- UnaryOperation v217, '++'
    BeginForLoopBody -> v219
        v220 <- LoadInteger '99'
        v221 <- BinaryOperation v220, '-', v219
        v222 <- CallMethod v212, 'pop', []
        v223 <- LoadString 'th iteration'
        v224 <- BinaryOperation v219, '+', v223
    EndForLoop
EndPlainFunction
v225 <- CallFunction v200, []
v226 <- BeginPlainFunction -> 
    v227 <- BeginPlainFunction -> v228, v229
        v230 <- CallMethod v228, 'pop', []
        v231 <- LoadInteger '1'
        v232 <- LoadInteger '2'
        v233 <- TernaryOperation v230, v231, v232
        v234 <- CreateNamedVariable 'v', 'var', v233
        Return v234
    EndPlainFunction
    v235 <- LoadBoolean 'true'
    v236 <- LoadBoolean 'true'
    v237 <- LoadBoolean 'true'
    v238 <- LoadBoolean 'true'
    v239 <- CreateArray [v235, v236, v237, v238]
    v240 <- CreateNamedVariable 'a', 'var', v239
    v241 <- LoadInteger '1'
    v242 <- LoadBoolean 'false'
    v243 <- CallFunction v227, [v240, v242]
    v244 <- LoadInteger '1'
    v245 <- LoadBoolean 'false'
    v246 <- CallFunction v227, [v240, v245]
    v247 <- LoadInteger '1'
    v248 <- LoadBoolean 'false'
    v249 <- CallFunction v227, [v240, v248]
    v250 <- LoadInteger '1'
    v251 <- LoadBoolean 'true'
    v252 <- CallFunction v227, [v240, v251]
EndPlainFunction
v253 <- CallFunction v226, []


function f0() {
    var a = [];
    for (let i4 = 0; i4 < 7; i4++) {
        a = [7,6,5,4,3,2,1];
        a.pop();
        a.length;
        a.pop(1);
        a.length;
        a.pop(1, 2);
        a.length;
        a.pop(1, 2, 3);
        a.length;
        a.pop();
        a.length;
        a.pop();
        a.length;
        a.pop();
        a.length;
        a.pop();
        a.length;
        a.pop(1, 2, 3);
        a.length;
    }
    for (let i82 = 0; i82 < 10; i82++) {
        const t24 = Array.prototype;
        t24[1] = 1;
        const t26 = Array.prototype;
        t26[3] = 3;
        const t28 = Array.prototype;
        t28[5] = 5;
        const t30 = Array.prototype;
        t30[7] = 7;
        const t32 = Array.prototype;
        t32[9] = 9;
        a = [0,1,2,,4,,6,7,8,,];
        a.length;
        for (let i112 = 9; i112 >= 0; i112--) {
            i112 + 1;
            a.length;
            "inherit-pre-length-" + i112;
            i112 in a;
            "has property " + i112;
            var own = a.hasOwnProperty(i112);
            var inherited = Array.prototype.hasOwnProperty(i112);
            a.pop();
            a.length;
            a.hasOwnProperty(i112);
            "inherit-deleted-own-" + i112;
            Array.prototype.hasOwnProperty(i112);
            "inherit-not-deleted-inherited" + i112;
        }
        const t51 = Array.prototype;
        t51.length = 0;
    }
    for (let i145 = 0; i145 < 10; i145++) {
        var array_proto = [];
        array_proto[1] = 1;
        array_proto[3] = 3;
        array_proto[5] = 5;
        array_proto[7] = 7;
        array_proto[9] = 9;
        a = [0,1,2,,4,,6,7,8,,];
        a.__proto__ = array_proto;
        a.length;
        for (let i171 = 9; i171 >= 0; i171--) {
            i171 + 1;
            a.length;
            "array_proto-inherit-pre-length-" + i171;
            i171 in a;
            "array_proto-has property " + i171;
            var own = a.hasOwnProperty(i171);
            var inherited = array_proto.hasOwnProperty(i171);
            a.pop();
            a.length;
            a.hasOwnProperty(i171);
            "array_proto-inherit-deleted-own-" + i171;
            array_proto.hasOwnProperty(i171);
            "array_proto-inherit-not-deleted-inherited" + i171;
        }
    }
}
f0();
function f200() {
    var a = [];
    for (let i204 = 0; i204 < 100; i204++) {
        a.push(i204);
    }
    var x = { __proto__: a };
    for (let i214 = 0; i214 < 100; i214++) {
        99 - i214;
        x.pop();
        i214 + "th iteration";
    }
}
f200();
function f226() {
    function f(a228, a229) {
        var v = a228.pop() ? 1 : 2;
        return v;
    }
    var a = [true,true,true,true];
    f(a, false);
    f(a, false);
    f(a, false);
    f(a, true);
}
f226();

FuzzIL program written to corpus/array-pop.fzil
