v0 <- BeginPlainFunction -> v1
    v2 <- LoadString 'length'
    v3 <- LoadArguments
    v4 <- CallMethod v3, '__defineGetter__', [v2, v1]
    v5 <- LoadArguments
    Return v5
EndPlainFunction
v6 <- BeginPlainFunction -> 
    v7 <- LoadString 'boom'
    Return v7
EndPlainFunction
v8 <- CreateArray []
v9 <- CreateNamedVariable '__v_4', 'none'
Reassign v9, v8
v10 <- LoadString ''
v11 <- CreateNamedVariable '__v_13', 'none'
Reassign v11, v10
BeginForLoopInitializer
    v12 <- LoadInteger '0'
BeginForLoopCondition -> v13
    v14 <- LoadInteger '12800'
    v15 <- Compare v13, '<', v14
BeginForLoopAfterthought v15 -> v16
    v17 <- UnaryOperation '++', v16
BeginForLoopBody -> v18
    v19 <- CallFunction v0, [v6]
    v20 <- CreateNamedVariable '__v_4', 'none'
    SetProperty v20, '__proto__', v19
    v21 <- CreateNamedVariable '__v_13', 'none'
    Update v21, '+', v19
EndForLoop


function __f_3(a1) {
    arguments.__defineGetter__("length", a1);
    return arguments;
}
function __f_4() {
    return "boom";
}
__v_4 = [];
__v_13 = "";
for (let i13 = 0; i13 < 12800; ++i13) {
    const v19 = __f_3(__f_4);
    __v_4.__proto__ = v19;
    __v_13 += v19;
}

FuzzIL program written to corpus/regress-crbug-729597.fzil
