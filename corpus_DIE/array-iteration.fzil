v0 <- BeginPlainFunction -> 
    v1 <- LoadInteger '0'
    v2 <- LoadInteger '1'
    v3 <- CreateArray [v1, v2]
    v4 <- CreateNamedVariable 'a', 'var', v3
    v5 <- LoadInteger '0'
    v6 <- CreateArray [v5]
    v7 <- BeginPlainFunction -> v8
        v9 <- LoadInteger '0'
        v10 <- Compare v8, '==', v9
        Return v10
    EndPlainFunction
    v11 <- CallMethod v4, 'filter', [v7]
    v12 <- LoadInteger '0'
    v13 <- LoadInteger '1'
    v14 <- CreateArray [v12, v13]
    v15 <- LoadInteger '42'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v15
    v16 <- EndObjectLiteral
    v17 <- CreateNamedVariable 'o', 'var', v16
    v18 <- LoadInteger '1'
    v19 <- LoadInteger '42'
    v20 <- LoadInteger '3'
    v21 <- LoadInteger '42'
    v22 <- LoadInteger '4'
    v23 <- CreateArray [v18, v19, v20, v21, v22]
    Reassign v4, v23
    v24 <- LoadInteger '42'
    v25 <- LoadInteger '42'
    v26 <- CreateArray [v24, v25]
    v27 <- BeginPlainFunction -> v28
        v29 <- LoadThis
        v30 <- GetProperty v29, 'value'
        v31 <- Compare v30, '==', v28
        Return v31
    EndPlainFunction
    v32 <- CallMethod v4, 'filter', [v27, v17]
    v33 <- LoadInteger '1'
    v34 <- LoadInteger '42'
    v35 <- LoadInteger '3'
    v36 <- LoadInteger '42'
    v37 <- LoadInteger '4'
    v38 <- CreateArray [v33, v34, v35, v36, v37]
    Reassign v4, v38
    v39 <- LoadInteger '42'
    v40 <- LoadInteger '42'
    v41 <- CreateArray [v39, v40]
    v42 <- BeginPlainFunction -> v43, v44, v45
        v46 <- LoadInteger '43'
        SetComputedProperty v45, v44, v46
        v47 <- LoadInteger '42'
        v48 <- Compare v47, '==', v43
        Return v48
    EndPlainFunction
    v49 <- CallMethod v4, 'filter', [v42]
    v50 <- LoadInteger '43'
    v51 <- LoadInteger '43'
    v52 <- LoadInteger '43'
    v53 <- LoadInteger '43'
    v54 <- LoadInteger '43'
    v55 <- CreateArray [v50, v51, v52, v53, v54]
    v56 <- LoadInteger '1'
    v57 <- LoadInteger '1'
    v58 <- CreateArray [v56, v57]
    Reassign v4, v58
    v59 <- CreateArray []
    v60 <- BeginPlainFunction -> v61, v62, v63
        v64 <- LoadInteger '1'
        v65 <- BinaryOperation v61, '+', v64
        v66 <- CallMethod v63, 'push', [v65]
        v67 <- LoadInteger '2'
        v68 <- Compare v61, '==', v67
        Return v68
    EndPlainFunction
    v69 <- CallMethod v4, 'filter', [v60]
    v70 <- LoadInteger '1'
    v71 <- LoadInteger '1'
    v72 <- LoadInteger '2'
    v73 <- LoadInteger '2'
    v74 <- CreateArray [v70, v71, v72, v73]
    v75 <- CreateNamedVariable 'Array', 'none'
    v76 <- LoadInteger '20'
    v77 <- Construct v75, [v76]
    Reassign v4, v77
    v78 <- LoadInteger '0'
    v79 <- CreateNamedVariable 'count', 'var', v78
    v80 <- LoadInteger '2'
    SetElement v4, '2', v80
    v81 <- LoadInteger '2'
    SetElement v4, '15', v81
    v82 <- LoadInteger '4'
    SetElement v4, '17', v82
    v83 <- BeginPlainFunction -> v84
        v85 <- UnaryOperation v79, '++'
        v86 <- LoadInteger '2'
        v87 <- Compare v84, '==', v86
        Return v87
    EndPlainFunction
    v88 <- CallMethod v4, 'filter', [v83]
    v89 <- CreateNamedVariable 'a', 'var', v88
    v90 <- LoadInteger '3'
    BeginForInLoop v89 -> v91
        v92 <- LoadInteger '2'
        v93 <- GetComputedProperty v89, v91
    EndForInLoop
    v94 <- LoadInteger '0'
    v95 <- LoadInteger '2'
    v96 <- LoadInteger '3'
    BeginObjectLiteral
        ObjectLiteralAddProperty `0`, v94
        ObjectLiteralAddProperty `2`, v95
        ObjectLiteralAddProperty `length`, v96
    v97 <- EndObjectLiteral
    Reassign v89, v97
    v98 <- CreateArray []
    v99 <- CreateNamedVariable 'received', 'var', v98
    v100 <- LoadInteger '2'
    v101 <- CreateArray [v100]
    v102 <- BeginPlainFunction -> v103
        v104 <- CallMethod v99, 'push', [v103]
        v105 <- LoadInteger '2'
        v106 <- Compare v103, '==', v105
        Return v106
    EndPlainFunction
    v107 <- GetProperty v75, 'prototype'
    v108 <- GetProperty v107, 'filter'
    v109 <- CallMethod v108, 'call', [v89, v102]
    v110 <- LoadInteger '0'
    v111 <- LoadInteger '2'
    v112 <- CreateArray [v110, v111]
    v113 <- LoadInteger '0'
    v114 <- LoadUndefined
    v115 <- LoadInteger '2'
    v116 <- CreateArray [v113, v114, v115]
    Reassign v89, v116
    v117 <- CreateArray []
    Reassign v99, v117
    v118 <- LoadInteger '2'
    v119 <- CreateArray [v118]
    v120 <- BeginPlainFunction -> v121
        v122 <- LoadNull
        SetProperty v89, '__proto__', v122
        v123 <- CallMethod v99, 'push', [v121]
        v124 <- LoadInteger '2'
        v125 <- Compare v121, '==', v124
        Return v125
    EndPlainFunction
    v126 <- GetProperty v75, 'prototype'
    v127 <- GetProperty v126, 'filter'
    v128 <- CallMethod v127, 'call', [v89, v120]
    v129 <- LoadInteger '0'
    v130 <- LoadInteger '2'
    v131 <- CreateArray [v129, v130]
    v132 <- CreateArray []
    Reassign v89, v132
    v133 <- BeginPlainFunction -> 
        v134 <- LoadThis
        v135 <- CallMethod v89, 'push', [v134]
    EndPlainFunction
    v136 <- LoadString ''
    v137 <- LoadInteger '1'
    v138 <- LoadInteger '2'
    v139 <- CreateArray [v137, v138]
    v140 <- CallMethod v139, 'filter', [v133, v136]
    v141 <- GetElement v89, '0'
    v142 <- GetElement v89, '1'
    v143 <- Compare v141, '!==', v142
    v144 <- CreateArray []
    Reassign v89, v144
    v145 <- BeginPlainFunction -> 
        v146 <- LoadThis
        v147 <- CallMethod v89, 'push', [v146]
    EndPlainFunction
    BeginObjectLiteral
    v148 <- EndObjectLiteral
    v149 <- LoadInteger '1'
    v150 <- LoadInteger '2'
    v151 <- CreateArray [v149, v150]
    v152 <- CallMethod v151, 'filter', [v145, v148]
    v153 <- GetElement v89, '0'
    v154 <- GetElement v89, '1'
    v155 <- CreateArray []
    Reassign v89, v155
    v156 <- BeginPlainFunction -> 
        Directive 'use strict'
        v157 <- LoadThis
        v158 <- CallMethod v89, 'push', [v157]
    EndPlainFunction
    v159 <- LoadString ''
    v160 <- LoadInteger '1'
    v161 <- LoadInteger '2'
    v162 <- CreateArray [v160, v161]
    v163 <- CallMethod v162, 'filter', [v156, v159]
    v164 <- LoadString ''
    v165 <- GetElement v89, '0'
    v166 <- GetElement v89, '0'
    v167 <- GetElement v89, '1'
EndPlainFunction
v168 <- CallFunction v0, []
v169 <- BeginPlainFunction -> 
    v170 <- LoadInteger '0'
    v171 <- LoadInteger '1'
    v172 <- CreateArray [v170, v171]
    v173 <- CreateNamedVariable 'a', 'var', v172
    v174 <- LoadInteger '0'
    v175 <- CreateNamedVariable 'count', 'var', v174
    v176 <- BeginPlainFunction -> v177
        v178 <- UnaryOperation v175, '++'
    EndPlainFunction
    v179 <- CallMethod v173, 'forEach', [v176]
    v180 <- LoadInteger '2'
    v181 <- LoadInteger '42'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v181
    v182 <- EndObjectLiteral
    v183 <- CreateNamedVariable 'o', 'var', v182
    v184 <- CreateArray []
    v185 <- CreateNamedVariable 'result', 'var', v184
    v186 <- BeginPlainFunction -> v187
        v188 <- LoadThis
        v189 <- GetProperty v188, 'value'
        v190 <- CallMethod v185, 'push', [v189]
    EndPlainFunction
    v191 <- CallMethod v173, 'forEach', [v186, v183]
    v192 <- LoadInteger '42'
    v193 <- LoadInteger '42'
    v194 <- CreateArray [v192, v193]
    v195 <- LoadInteger '0'
    v196 <- LoadInteger '1'
    v197 <- CreateArray [v195, v196]
    Reassign v173, v197
    v198 <- LoadInteger '0'
    Reassign v175, v198
    v199 <- BeginPlainFunction -> v200, v201, v202
        v203 <- LoadInteger '1'
        v204 <- BinaryOperation v200, '+', v203
        SetComputedProperty v202, v201, v204
        v205 <- UnaryOperation v175, '++'
    EndPlainFunction
    v206 <- CallMethod v173, 'forEach', [v199]
    v207 <- LoadInteger '2'
    v208 <- LoadInteger '1'
    v209 <- LoadInteger '2'
    v210 <- CreateArray [v208, v209]
    v211 <- LoadInteger '1'
    v212 <- LoadInteger '1'
    v213 <- CreateArray [v211, v212]
    Reassign v173, v213
    v214 <- LoadInteger '0'
    Reassign v175, v214
    v215 <- BeginPlainFunction -> v216, v217, v218
        v219 <- LoadInteger '1'
        v220 <- BinaryOperation v216, '+', v219
        v221 <- CallMethod v218, 'push', [v220]
        v222 <- UnaryOperation v175, '++'
    EndPlainFunction
    v223 <- CallMethod v173, 'forEach', [v215]
    v224 <- LoadInteger '2'
    v225 <- LoadInteger '1'
    v226 <- LoadInteger '1'
    v227 <- LoadInteger '2'
    v228 <- LoadInteger '2'
    v229 <- CreateArray [v225, v226, v227, v228]
    v230 <- CreateNamedVariable 'Array', 'none'
    v231 <- LoadInteger '20'
    v232 <- Construct v230, [v231]
    Reassign v173, v232
    v233 <- LoadInteger '0'
    Reassign v175, v233
    v234 <- LoadInteger '2'
    SetElement v173, '15', v234
    v235 <- BeginPlainFunction -> v236
        v237 <- UnaryOperation v175, '++'
    EndPlainFunction
    v238 <- CallMethod v173, 'forEach', [v235]
    v239 <- LoadInteger '1'
    v240 <- LoadInteger '0'
    v241 <- LoadInteger '2'
    v242 <- LoadInteger '3'
    BeginObjectLiteral
        ObjectLiteralAddProperty `0`, v240
        ObjectLiteralAddProperty `2`, v241
        ObjectLiteralAddProperty `length`, v242
    v243 <- EndObjectLiteral
    Reassign v173, v243
    v244 <- CreateArray []
    v245 <- CreateNamedVariable 'received', 'var', v244
    v246 <- BeginPlainFunction -> v247
        v248 <- CallMethod v245, 'push', [v247]
    EndPlainFunction
    v249 <- GetProperty v230, 'prototype'
    v250 <- GetProperty v249, 'forEach'
    v251 <- CallMethod v250, 'call', [v173, v246]
    v252 <- LoadInteger '0'
    v253 <- LoadInteger '2'
    v254 <- CreateArray [v252, v253]
    v255 <- LoadInteger '0'
    v256 <- LoadUndefined
    v257 <- LoadInteger '2'
    v258 <- CreateArray [v255, v256, v257]
    Reassign v173, v258
    v259 <- CreateArray []
    Reassign v245, v259
    v260 <- BeginPlainFunction -> v261
        v262 <- LoadNull
        SetProperty v173, '__proto__', v262
        v263 <- CallMethod v245, 'push', [v261]
        v264 <- LoadInteger '2'
        v265 <- Compare v261, '==', v264
        Return v265
    EndPlainFunction
    v266 <- GetProperty v230, 'prototype'
    v267 <- GetProperty v266, 'forEach'
    v268 <- CallMethod v267, 'call', [v173, v260]
    v269 <- LoadInteger '0'
    v270 <- LoadInteger '2'
    v271 <- CreateArray [v269, v270]
    v272 <- CreateArray []
    Reassign v173, v272
    v273 <- BeginPlainFunction -> 
        v274 <- LoadThis
        v275 <- CallMethod v173, 'push', [v274]
    EndPlainFunction
    v276 <- LoadString ''
    v277 <- LoadInteger '1'
    v278 <- LoadInteger '2'
    v279 <- CreateArray [v277, v278]
    v280 <- CallMethod v279, 'forEach', [v273, v276]
    v281 <- GetElement v173, '0'
    v282 <- GetElement v173, '1'
    v283 <- Compare v281, '!==', v282
    v284 <- CreateArray []
    Reassign v173, v284
    v285 <- BeginPlainFunction -> 
        v286 <- LoadThis
        v287 <- CallMethod v173, 'push', [v286]
    EndPlainFunction
    BeginObjectLiteral
    v288 <- EndObjectLiteral
    v289 <- LoadInteger '1'
    v290 <- LoadInteger '2'
    v291 <- CreateArray [v289, v290]
    v292 <- CallMethod v291, 'forEach', [v285, v288]
    v293 <- GetElement v173, '0'
    v294 <- GetElement v173, '1'
    v295 <- CreateArray []
    Reassign v173, v295
    v296 <- BeginPlainFunction -> 
        Directive 'use strict'
        v297 <- LoadThis
        v298 <- CallMethod v173, 'push', [v297]
    EndPlainFunction
    v299 <- LoadString ''
    v300 <- LoadInteger '1'
    v301 <- LoadInteger '2'
    v302 <- CreateArray [v300, v301]
    v303 <- CallMethod v302, 'forEach', [v296, v299]
    v304 <- LoadString ''
    v305 <- GetElement v173, '0'
    v306 <- GetElement v173, '0'
    v307 <- GetElement v173, '1'
EndPlainFunction
v308 <- CallFunction v169, []
v309 <- BeginPlainFunction -> 
    v310 <- LoadInteger '0'
    v311 <- LoadInteger '1'
    v312 <- CreateArray [v310, v311]
    v313 <- CreateNamedVariable 'a', 'var', v312
    v314 <- BeginPlainFunction -> v315
        v316 <- LoadInteger '0'
        v317 <- Compare v315, '==', v316
        Return v317
    EndPlainFunction
    v318 <- CallMethod v313, 'every', [v314]
    v319 <- LoadInteger '0'
    v320 <- LoadInteger '0'
    v321 <- CreateArray [v319, v320]
    Reassign v313, v321
    v322 <- BeginPlainFunction -> v323
        v324 <- LoadInteger '0'
        v325 <- Compare v323, '==', v324
        Return v325
    EndPlainFunction
    v326 <- CallMethod v313, 'every', [v322]
    v327 <- BeginPlainFunction -> v328
        v329 <- LoadInteger '0'
        v330 <- Compare v328, '==', v329
        Return v330
    EndPlainFunction
    v331 <- CreateArray []
    v332 <- CallMethod v331, 'every', [v327]
    v333 <- LoadInteger '42'
    BeginObjectLiteral
        ObjectLiteralAddProperty `value`, v333
    v334 <- EndObjectLiteral
    v335 <- CreateNamedVariable 'o', 'var', v334
    v336 <- LoadInteger '0'
    v337 <- CreateArray [v336]
    Reassign v313, v337
    v338 <- BeginPlainFunction -> v339
        v340 <- LoadThis
        v341 <- GetProperty v340, 'value'
        v342 <- Compare v341, '==', v339
        Return v342
    EndPlainFunction
    v343 <- CallMethod v313, 'every', [v338, v335]
    v344 <- LoadInteger '42'
    v345 <- CreateArray [v344]
    Reassign v313, v345
    v346 <- BeginPlainFunction -> v347
        v348 <- LoadThis
        v349 <- GetProperty v348, 'value'
        v350 <- Compare v349, '==', v347
        Return v350
    EndPlainFunction
    v351 <- CallMethod v313, 'every', [v346, v335]
    v352 <- LoadInteger '0'
    v353 <- LoadInteger '1'
    v354 <- CreateArray [v352, v353]
    Reassign v313, v354
    v355 <- BeginPlainFunction -> v356, v357, v358
        v359 <- LoadInteger '1'
        v360 <- BinaryOperation v356, '+', v359
        SetComputedProperty v358, v357, v360
        v361 <- LoadInteger '1'
        v362 <- Compare v356, '==', v361
        Return v362
    EndPlainFunction
    v363 <- CallMethod v313, 'every', [v355]
    v364 <- LoadInteger '1'
    v365 <- LoadInteger '1'
    v366 <- CreateArray [v364, v365]
    v367 <- LoadInteger '1'
    v368 <- LoadInteger '1'
    v369 <- CreateArray [v367, v368]
    Reassign v313, v369
    v370 <- BeginPlainFunction -> v371, v372, v373
        v374 <- LoadInteger '1'
        v375 <- BinaryOperation v371, '+', v374
        v376 <- CallMethod v373, 'push', [v375]
        v377 <- LoadInteger '1'
        v378 <- Compare v371, '==', v377
        Return v378
    EndPlainFunction
    v379 <- CallMethod v313, 'every', [v370]
    v380 <- LoadInteger '1'
    v381 <- LoadInteger '1'
    v382 <- LoadInteger '2'
    v383 <- LoadInteger '2'
    v384 <- CreateArray [v380, v381, v382, v383]
    v385 <- CreateNamedVariable 'Array', 'none'
    v386 <- LoadInteger '20'
    v387 <- Construct v385, [v386]
    Reassign v313, v387
    v388 <- LoadInteger '0'
    v389 <- CreateNamedVariable 'count', 'var', v388
    v390 <- LoadInteger '2'
    SetElement v313, '2', v390
    v391 <- LoadInteger '2'
    SetElement v313, '15', v391
    v392 <- BeginPlainFunction -> v393
        v394 <- UnaryOperation v389, '++'
        v395 <- LoadInteger '2'
        v396 <- Compare v393, '==', v395
        Return v396
    EndPlainFunction
    v397 <- CallMethod v313, 'every', [v392]
    v398 <- LoadInteger '2'
    v399 <- LoadInteger '2'
    v400 <- LoadInteger '2'
    v401 <- LoadInteger '3'
    BeginObjectLiteral
        ObjectLiteralAddProperty `0`, v399
        ObjectLiteralAddProperty `2`, v400
        ObjectLiteralAddProperty `length`, v401
    v402 <- EndObjectLiteral
    Reassign v313, v402
    v403 <- CreateArray []
    v404 <- CreateNamedVariable 'received', 'var', v403
    v405 <- BeginPlainFunction -> v406
        v407 <- CallMethod v404, 'push', [v406]
        v408 <- LoadInteger '2'
        v409 <- Compare v406, '==', v408
        Return v409
    EndPlainFunction
    v410 <- GetProperty v385, 'prototype'
    v411 <- GetProperty v410, 'every'
    v412 <- CallMethod v411, 'call', [v313, v405]
    v413 <- LoadInteger '2'
    v414 <- LoadInteger '2'
    v415 <- CreateArray [v413, v414]
    v416 <- LoadInteger '2'
    v417 <- LoadUndefined
    v418 <- LoadInteger '2'
    v419 <- CreateArray [v416, v417, v418]
    Reassign v313, v419
    v420 <- CreateArray []
    Reassign v404, v420
    v421 <- BeginPlainFunction -> v422
        v423 <- LoadNull
        SetProperty v313, '__proto__', v423
        v424 <- CallMethod v404, 'push', [v422]
        v425 <- LoadInteger '2'
        v426 <- Compare v422, '==', v425
        Return v426
    EndPlainFunction
    v427 <- GetProperty v385, 'prototype'
    v428 <- GetProperty v427, 'every'
    v429 <- CallMethod v428, 'call', [v313, v421]
    v430 <- LoadInteger '2'
    v431 <- LoadInteger '2'
    v432 <- CreateArray [v430, v431]
    v433 <- CreateArray []
    Reassign v313, v433
    v434 <- BeginPlainFunction -> 
        v435 <- LoadThis
        v436 <- CallMethod v313, 'push', [v435]
        v437 <- LoadBoolean 'true'
        Return v437
    EndPlainFunction
    v438 <- LoadString ''
    v439 <- LoadInteger '1'
    v440 <- LoadInteger '2'
    v441 <- CreateArray [v439, v440]
    v442 <- CallMethod v441, 'every', [v434, v438]
    v443 <- GetElement v313, '0'
    v444 <- GetElement v313, '1'
    v445 <- Compare v443, '!==', v444
    v446 <- CreateArray []
    Reassign v313, v446
    v447 <- BeginPlainFunction -> 
        v448 <- LoadThis
        v449 <- CallMethod v313, 'push', [v448]
        v450 <- LoadBoolean 'true'
        Return v450
    EndPlainFunction
    BeginObjectLiteral
    v451 <- EndObjectLiteral
    v452 <- LoadInteger '1'
    v453 <- LoadInteger '2'
    v454 <- CreateArray [v452, v453]
    v455 <- CallMethod v454, 'every', [v447, v451]
    v456 <- GetElement v313, '0'
    v457 <- GetElement v313, '1'
    v458 <- CreateArray []
    Reassign v313, v458
    v459 <- BeginPlainFunction -> 
        Directive 'use strict'
        v460 <- LoadThis
        v461 <- CallMethod v313, 'push', [v460]
        v462 <- LoadBoolean 'true'
        Return v462
    EndPlainFunction
    v463 <- LoadString ''
    v464 <- LoadInteger '1'
    v465 <- LoadInteger '2'
    v466 <- CreateArray [v464, v465]
    v467 <- CallMethod v466, 'every', [v459, v463]
    v468 <- LoadString ''
    v469 <- GetElement v313, '0'
    v470 <- GetElement v313, '0'
    v471 <- GetElement v313, '1'
EndPlainFunction
v472 <- CallFunction v309, []
v473 <- BeginPlainFunction -> 
    v474 <- LoadInteger '0'
    v475 <- LoadInteger '1'
    v476 <- LoadInteger '2'
    v477 <- LoadInteger '3'
    v478 <- LoadInteger '4'
    v479 <- CreateArray [v474, v475, v476, v477, v478]
    v480 <- CreateNamedVariable 'a', 'var', v479
    v481 <- LoadInteger '1'
    v482 <- LoadInteger '2'
    v483 <- LoadInteger '3'
    v484 <- LoadInteger '4'
    v485 <- LoadInteger '5'
    v486 <- CreateArray [v481, v482, v483, v484, v485]
    v487 <- CreateNamedVariable 'result', 'var', v486
    v488 <- BeginPlainFunction -> v489
        v490 <- LoadInteger '1'
        v491 <- BinaryOperation v489, '+', v490
        Return v491
    EndPlainFunction
    v492 <- CallMethod v480, 'map', [v488]
    v493 <- LoadInteger '42'
    BeginObjectLiteral
        ObjectLiteralAddProperty `delta`, v493
    v494 <- EndObjectLiteral
    v495 <- CreateNamedVariable 'o', 'var', v494
    v496 <- LoadInteger '42'
    v497 <- LoadInteger '43'
    v498 <- LoadInteger '44'
    v499 <- LoadInteger '45'
    v500 <- LoadInteger '46'
    v501 <- CreateArray [v496, v497, v498, v499, v500]
    Reassign v487, v501
    v502 <- BeginPlainFunction -> v503
        v504 <- LoadThis
        v505 <- GetProperty v504, 'delta'
        v506 <- BinaryOperation v505, '+', v503
        Return v506
    EndPlainFunction
    v507 <- CallMethod v480, 'map', [v502, v495]
    v508 <- LoadInteger '0'
    v509 <- LoadInteger '1'
    v510 <- LoadInteger '2'
    v511 <- LoadInteger '3'
    v512 <- LoadInteger '4'
    v513 <- CreateArray [v508, v509, v510, v511, v512]
    Reassign v480, v513
    v514 <- LoadInteger '1'
    v515 <- LoadInteger '2'
    v516 <- LoadInteger '3'
    v517 <- LoadInteger '4'
    v518 <- LoadInteger '5'
    v519 <- CreateArray [v514, v515, v516, v517, v518]
    Reassign v487, v519
    v520 <- BeginPlainFunction -> v521, v522, v523
        v524 <- LoadInteger '1'
        v525 <- BinaryOperation v521, '+', v524
        SetComputedProperty v523, v522, v525
        v526 <- LoadInteger '1'
        v527 <- BinaryOperation v521, '+', v526
        Return v527
    EndPlainFunction
    v528 <- CallMethod v480, 'map', [v520]
    v529 <- LoadInteger '0'
    v530 <- LoadInteger '1'
    v531 <- LoadInteger '2'
    v532 <- LoadInteger '3'
    v533 <- LoadInteger '4'
    v534 <- CreateArray [v529, v530, v531, v532, v533]
    Reassign v480, v534
    v535 <- LoadInteger '1'
    v536 <- LoadInteger '2'
    v537 <- LoadInteger '3'
    v538 <- LoadInteger '4'
    v539 <- LoadInteger '5'
    v540 <- CreateArray [v535, v536, v537, v538, v539]
    Reassign v487, v540
    v541 <- BeginPlainFunction -> v542, v543, v544
        v545 <- CallMethod v544, 'push', [v542]
        v546 <- LoadInteger '1'
        v547 <- BinaryOperation v542, '+', v546
        Return v547
    EndPlainFunction
    v548 <- CallMethod v480, 'map', [v541]
    v549 <- LoadInteger '0'
    v550 <- LoadInteger '1'
    v551 <- LoadInteger '2'
    v552 <- LoadInteger '3'
    v553 <- LoadInteger '4'
    v554 <- LoadInteger '0'
    v555 <- LoadInteger '1'
    v556 <- LoadInteger '2'
    v557 <- LoadInteger '3'
    v558 <- LoadInteger '4'
    v559 <- CreateArray [v549, v550, v551, v552, v553, v554, v555, v556, v557, v558]
    v560 <- CreateNamedVariable 'Array', 'none'
    v561 <- LoadInteger '20'
    v562 <- Construct v560, [v561]
    Reassign v480, v562
    v563 <- LoadInteger '2'
    SetElement v480, '15', v563
    v564 <- BeginPlainFunction -> v565
        v566 <- LoadInteger '2'
        v567 <- BinaryOperation v566, '*', v565
        Return v567
    EndPlainFunction
    v568 <- CallMethod v480, 'map', [v564]
    Reassign v480, v568
    BeginForInLoop v480 -> v569
        v570 <- LoadInteger '4'
        v571 <- GetComputedProperty v480, v569
    EndForInLoop
    v572 <- LoadInteger '1'
    v573 <- LoadInteger '2'
    v574 <- LoadInteger '3'
    BeginObjectLiteral
        ObjectLiteralAddProperty `0`, v572
        ObjectLiteralAddProperty `2`, v573
        ObjectLiteralAddProperty `length`, v574
    v575 <- EndObjectLiteral
    Reassign v480, v575
    v576 <- CreateArray []
    v577 <- CreateNamedVariable 'received', 'var', v576
    v578 <- LoadInteger '2'
    v579 <- LoadUndefined
    v580 <- LoadInteger '4'
    v581 <- CreateArray [v578, v579, v580]
    v582 <- BeginPlainFunction -> v583
        v584 <- CallMethod v577, 'push', [v583]
        v585 <- LoadInteger '2'
        v586 <- BinaryOperation v583, '*', v585
        Return v586
    EndPlainFunction
    v587 <- GetProperty v560, 'prototype'
    v588 <- GetProperty v587, 'map'
    v589 <- CallMethod v588, 'call', [v480, v582]
    v590 <- LoadInteger '1'
    v591 <- LoadInteger '2'
    v592 <- CreateArray [v590, v591]
    v593 <- LoadInteger '1'
    v594 <- LoadUndefined
    v595 <- LoadInteger '2'
    v596 <- CreateArray [v593, v594, v595]
    Reassign v480, v596
    v597 <- CreateArray []
    Reassign v577, v597
    v598 <- LoadInteger '2'
    v599 <- LoadUndefined
    v600 <- LoadInteger '4'
    v601 <- CreateArray [v598, v599, v600]
    v602 <- BeginPlainFunction -> v603
        v604 <- LoadNull
        SetProperty v480, '__proto__', v604
        v605 <- CallMethod v577, 'push', [v603]
        v606 <- LoadInteger '2'
        v607 <- BinaryOperation v603, '*', v606
        Return v607
    EndPlainFunction
    v608 <- GetProperty v560, 'prototype'
    v609 <- GetProperty v608, 'map'
    v610 <- CallMethod v609, 'call', [v480, v602]
    v611 <- LoadInteger '1'
    v612 <- LoadInteger '2'
    v613 <- CreateArray [v611, v612]
    v614 <- CreateArray []
    Reassign v480, v614
    v615 <- BeginPlainFunction -> 
        v616 <- LoadThis
        v617 <- CallMethod v480, 'push', [v616]
    EndPlainFunction
    v618 <- LoadString ''
    v619 <- LoadInteger '1'
    v620 <- LoadInteger '2'
    v621 <- CreateArray [v619, v620]
    v622 <- CallMethod v621, 'map', [v615, v618]
    v623 <- GetElement v480, '0'
    v624 <- GetElement v480, '1'
    v625 <- Compare v623, '!==', v624
    v626 <- CreateArray []
    Reassign v480, v626
    v627 <- BeginPlainFunction -> 
        v628 <- LoadThis
        v629 <- CallMethod v480, 'push', [v628]
    EndPlainFunction
    BeginObjectLiteral
    v630 <- EndObjectLiteral
    v631 <- LoadInteger '1'
    v632 <- LoadInteger '2'
    v633 <- CreateArray [v631, v632]
    v634 <- CallMethod v633, 'map', [v627, v630]
    v635 <- GetElement v480, '0'
    v636 <- GetElement v480, '1'
    v637 <- CreateArray []
    Reassign v480, v637
    v638 <- BeginPlainFunction -> 
        Directive 'use strict'
        v639 <- LoadThis
        v640 <- CallMethod v480, 'push', [v639]
    EndPlainFunction
    v641 <- LoadString ''
    v642 <- LoadInteger '1'
    v643 <- LoadInteger '2'
    v644 <- CreateArray [v642, v643]
    v645 <- CallMethod v644, 'map', [v638, v641]
    v646 <- LoadString ''
    v647 <- GetElement v480, '0'
    v648 <- GetElement v480, '0'
    v649 <- GetElement v480, '1'
EndPlainFunction
v650 <- CallFunction v473, []
v651 <- BeginPlainFunction -> 
    v652 <- LoadInteger '0'
    v653 <- LoadInteger '1'
    v654 <- LoadInteger '2'
    v655 <- LoadInteger '3'
    v656 <- LoadInteger '4'
    v657 <- CreateArray [v652, v653, v654, v655, v656]
    v658 <- CreateNamedVariable 'a', 'var', v657
    v659 <- BeginPlainFunction -> v660
        v661 <- LoadInteger '3'
        v662 <- Compare v660, '==', v661
        Return v662
    EndPlainFunction
    v663 <- CallMethod v658, 'some', [v659]
    v664 <- BeginPlainFunction -> v665
        v666 <- LoadInteger '5'
        v667 <- Compare v665, '==', v666
        Return v667
    EndPlainFunction
    v668 <- CallMethod v658, 'some', [v664]
    v669 <- LoadInteger '42'
    BeginObjectLiteral
        ObjectLiteralAddProperty `element`, v669
    v670 <- EndObjectLiteral
    v671 <- CreateNamedVariable 'o', 'var', v670
    v672 <- LoadInteger '1'
    v673 <- LoadInteger '42'
    v674 <- LoadInteger '3'
    v675 <- CreateArray [v672, v673, v674]
    Reassign v658, v675
    v676 <- BeginPlainFunction -> v677
        v678 <- LoadThis
        v679 <- GetProperty v678, 'element'
        v680 <- Compare v679, '==', v677
        Return v680
    EndPlainFunction
    v681 <- CallMethod v658, 'some', [v676, v671]
    v682 <- LoadInteger '1'
    v683 <- CreateArray [v682]
    Reassign v658, v683
    v684 <- BeginPlainFunction -> v685
        v686 <- LoadThis
        v687 <- GetProperty v686, 'element'
        v688 <- Compare v687, '==', v685
        Return v688
    EndPlainFunction
    v689 <- CallMethod v658, 'some', [v684, v671]
    v690 <- LoadInteger '0'
    v691 <- LoadInteger '1'
    v692 <- LoadInteger '2'
    v693 <- LoadInteger '3'
    v694 <- CreateArray [v690, v691, v692, v693]
    Reassign v658, v694
    v695 <- BeginPlainFunction -> v696, v697, v698
        v699 <- LoadInteger '1'
        v700 <- BinaryOperation v696, '+', v699
        SetComputedProperty v698, v697, v700
        v701 <- LoadInteger '2'
        v702 <- Compare v696, '==', v701
        Return v702
    EndPlainFunction
    v703 <- CallMethod v658, 'some', [v695]
    v704 <- LoadInteger '1'
    v705 <- LoadInteger '2'
    v706 <- LoadInteger '3'
    v707 <- LoadInteger '3'
    v708 <- CreateArray [v704, v705, v706, v707]
    v709 <- LoadInteger '0'
    v710 <- LoadInteger '1'
    v711 <- LoadInteger '2'
    v712 <- CreateArray [v709, v710, v711]
    Reassign v658, v712
    v713 <- BeginPlainFunction -> v714, v715, v716
        v717 <- LoadInteger '42'
        v718 <- CallMethod v716, 'push', [v717]
        v719 <- LoadInteger '42'
        v720 <- Compare v714, '==', v719
        Return v720
    EndPlainFunction
    v721 <- CallMethod v658, 'some', [v713]
    v722 <- LoadInteger '0'
    v723 <- LoadInteger '1'
    v724 <- LoadInteger '2'
    v725 <- LoadInteger '42'
    v726 <- LoadInteger '42'
    v727 <- LoadInteger '42'
    v728 <- CreateArray [v722, v723, v724, v725, v726, v727]
    v729 <- CreateNamedVariable 'Array', 'none'
    v730 <- LoadInteger '20'
    v731 <- Construct v729, [v730]
    Reassign v658, v731
    v732 <- LoadInteger '0'
    v733 <- CreateNamedVariable 'count', 'var', v732
    v734 <- LoadInteger '42'
    SetElement v658, '2', v734
    v735 <- LoadInteger '2'
    SetElement v658, '10', v735
    v736 <- LoadInteger '42'
    SetElement v658, '15', v736
    v737 <- BeginPlainFunction -> v738
        v739 <- UnaryOperation v733, '++'
        v740 <- LoadInteger '2'
        v741 <- Compare v738, '==', v740
        Return v741
    EndPlainFunction
    v742 <- CallMethod v658, 'some', [v737]
    v743 <- LoadInteger '2'
    v744 <- CreateArray []
    Reassign v658, v744
    v745 <- BeginPlainFunction -> 
        v746 <- LoadThis
        v747 <- CallMethod v658, 'push', [v746]
    EndPlainFunction
    v748 <- LoadString ''
    v749 <- LoadInteger '1'
    v750 <- LoadInteger '2'
    v751 <- CreateArray [v749, v750]
    v752 <- CallMethod v751, 'some', [v745, v748]
    v753 <- GetElement v658, '0'
    v754 <- GetElement v658, '1'
    v755 <- Compare v753, '!==', v754
    v756 <- CreateArray []
    Reassign v658, v756
    v757 <- BeginPlainFunction -> 
        v758 <- LoadThis
        v759 <- CallMethod v658, 'push', [v758]
    EndPlainFunction
    BeginObjectLiteral
    v760 <- EndObjectLiteral
    v761 <- LoadInteger '1'
    v762 <- LoadInteger '2'
    v763 <- CreateArray [v761, v762]
    v764 <- CallMethod v763, 'some', [v757, v760]
    v765 <- GetElement v658, '0'
    v766 <- GetElement v658, '1'
    v767 <- CreateArray []
    Reassign v658, v767
    v768 <- BeginPlainFunction -> 
        Directive 'use strict'
        v769 <- LoadThis
        v770 <- CallMethod v658, 'push', [v769]
    EndPlainFunction
    v771 <- LoadString ''
    v772 <- LoadInteger '1'
    v773 <- LoadInteger '2'
    v774 <- CreateArray [v772, v773]
    v775 <- CallMethod v774, 'some', [v768, v771]
    v776 <- LoadString ''
    v777 <- GetElement v658, '0'
    v778 <- GetElement v658, '0'
    v779 <- GetElement v658, '1'
EndPlainFunction
v780 <- CallFunction v651, []


function f0() {
    var a = [0,1];
    [0];
    function f7(a8) {
        return a8 == 0;
    }
    a.filter(f7);
    [0,1];
    var o = { value: 42 };
    a = [1,42,3,42,4];
    [42,42];
    function f27(a28) {
        return this.value == a28;
    }
    a.filter(f27, o);
    a = [1,42,3,42,4];
    [42,42];
    function f42(a43, a44, a45) {
        a45[a44] = 43;
        return 42 == a43;
    }
    a.filter(f42);
    [43,43,43,43,43];
    a = [1,1];
    [];
    function f60(a61, a62, a63) {
        a63.push(a61 + 1);
        return a61 == 2;
    }
    a.filter(f60);
    [1,1,2,2];
    const v77 = new Array(20);
    a = v77;
    var count = 0;
    a[2] = 2;
    a[15] = 2;
    a[17] = 4;
    function f83(a84) {
        count++;
        return a84 == 2;
    }
    var a = a.filter(f83);
    for (const v91 in a) {
        a[v91];
    }
    a = { 0: 0, 2: 2, length: 3 };
    var received = [];
    [2];
    function f102(a103) {
        received.push(a103);
        return a103 == 2;
    }
    Array.prototype.filter.call(a, f102);
    [0,2];
    a = [0,,2];
    received = [];
    [2];
    function f120(a121) {
        a.__proto__ = null;
        received.push(a121);
        return a121 == 2;
    }
    Array.prototype.filter.call(a, f120);
    [0,2];
    a = [];
    function f133() {
        a.push(this);
    }
    ([1,2]).filter(f133, "");
    a[0] !== a[1];
    a = [];
    function f145() {
        a.push(this);
    }
    const v148 = {};
    ([1,2]).filter(f145, v148);
    a[0];
    a[1];
    a = [];
    function f156() {
        'use strict';
        a.push(this);
    }
    ([1,2]).filter(f156, "");
    a[0];
    a[0];
    a[1];
}
f0();
function f169() {
    var a = [0,1];
    var count = 0;
    function f176(a177) {
        count++;
    }
    a.forEach(f176);
    var o = { value: 42 };
    var result = [];
    function f186(a187) {
        result.push(this.value);
    }
    a.forEach(f186, o);
    [42,42];
    a = [0,1];
    count = 0;
    function f199(a200, a201, a202) {
        a202[a201] = a200 + 1;
        count++;
    }
    a.forEach(f199);
    [1,2];
    a = [1,1];
    count = 0;
    function f215(a216, a217, a218) {
        a218.push(a216 + 1);
        count++;
    }
    a.forEach(f215);
    [1,1,2,2];
    const v232 = new Array(20);
    a = v232;
    count = 0;
    a[15] = 2;
    function f235(a236) {
        count++;
    }
    a.forEach(f235);
    a = { 0: 0, 2: 2, length: 3 };
    var received = [];
    function f246(a247) {
        received.push(a247);
    }
    Array.prototype.forEach.call(a, f246);
    [0,2];
    a = [0,,2];
    received = [];
    function f260(a261) {
        a.__proto__ = null;
        received.push(a261);
        return a261 == 2;
    }
    Array.prototype.forEach.call(a, f260);
    [0,2];
    a = [];
    function f273() {
        a.push(this);
    }
    ([1,2]).forEach(f273, "");
    a[0] !== a[1];
    a = [];
    function f285() {
        a.push(this);
    }
    const v288 = {};
    ([1,2]).forEach(f285, v288);
    a[0];
    a[1];
    a = [];
    function f296() {
        'use strict';
        a.push(this);
    }
    ([1,2]).forEach(f296, "");
    a[0];
    a[0];
    a[1];
}
f169();
function f309() {
    var a = [0,1];
    function f314(a315) {
        return a315 == 0;
    }
    a.every(f314);
    a = [0,0];
    function f322(a323) {
        return a323 == 0;
    }
    a.every(f322);
    function f327(a328) {
        return a328 == 0;
    }
    ([]).every(f327);
    var o = { value: 42 };
    a = [0];
    function f338(a339) {
        return this.value == a339;
    }
    a.every(f338, o);
    a = [42];
    function f346(a347) {
        return this.value == a347;
    }
    a.every(f346, o);
    a = [0,1];
    function f355(a356, a357, a358) {
        a358[a357] = a356 + 1;
        return a356 == 1;
    }
    a.every(f355);
    [1,1];
    a = [1,1];
    function f370(a371, a372, a373) {
        a373.push(a371 + 1);
        return a371 == 1;
    }
    a.every(f370);
    [1,1,2,2];
    const v387 = new Array(20);
    a = v387;
    var count = 0;
    a[2] = 2;
    a[15] = 2;
    function f392(a393) {
        count++;
        return a393 == 2;
    }
    a.every(f392);
    a = { 0: 2, 2: 2, length: 3 };
    var received = [];
    function f405(a406) {
        received.push(a406);
        return a406 == 2;
    }
    Array.prototype.every.call(a, f405);
    [2,2];
    a = [2,,2];
    received = [];
    function f421(a422) {
        a.__proto__ = null;
        received.push(a422);
        return a422 == 2;
    }
    Array.prototype.every.call(a, f421);
    [2,2];
    a = [];
    function f434() {
        a.push(this);
        return true;
    }
    ([1,2]).every(f434, "");
    a[0] !== a[1];
    a = [];
    function f447() {
        a.push(this);
        return true;
    }
    const v451 = {};
    ([1,2]).every(f447, v451);
    a[0];
    a[1];
    a = [];
    function f459() {
        'use strict';
        a.push(this);
        return true;
    }
    ([1,2]).every(f459, "");
    a[0];
    a[0];
    a[1];
}
f309();
function f473() {
    var a = [0,1,2,3,4];
    var result = [1,2,3,4,5];
    function f488(a489) {
        return a489 + 1;
    }
    a.map(f488);
    var o = { delta: 42 };
    result = [42,43,44,45,46];
    function f502(a503) {
        return this.delta + a503;
    }
    a.map(f502, o);
    a = [0,1,2,3,4];
    result = [1,2,3,4,5];
    function f520(a521, a522, a523) {
        a523[a522] = a521 + 1;
        return a521 + 1;
    }
    a.map(f520);
    a = [0,1,2,3,4];
    result = [1,2,3,4,5];
    function f541(a542, a543, a544) {
        a544.push(a542);
        return a542 + 1;
    }
    a.map(f541);
    [0,1,2,3,4,0,1,2,3,4];
    const v562 = new Array(20);
    a = v562;
    a[15] = 2;
    function f564(a565) {
        return 2 * a565;
    }
    a = a.map(f564);
    for (const v569 in a) {
        a[v569];
    }
    a = { 0: 1, 2: 2, length: 3 };
    var received = [];
    [2,,4];
    function f582(a583) {
        received.push(a583);
        return a583 * 2;
    }
    Array.prototype.map.call(a, f582);
    [1,2];
    a = [1,,2];
    received = [];
    [2,,4];
    function f602(a603) {
        a.__proto__ = null;
        received.push(a603);
        return a603 * 2;
    }
    Array.prototype.map.call(a, f602);
    [1,2];
    a = [];
    function f615() {
        a.push(this);
    }
    ([1,2]).map(f615, "");
    a[0] !== a[1];
    a = [];
    function f627() {
        a.push(this);
    }
    const v630 = {};
    ([1,2]).map(f627, v630);
    a[0];
    a[1];
    a = [];
    function f638() {
        'use strict';
        a.push(this);
    }
    ([1,2]).map(f638, "");
    a[0];
    a[0];
    a[1];
}
f473();
function f651() {
    var a = [0,1,2,3,4];
    function f659(a660) {
        return a660 == 3;
    }
    a.some(f659);
    function f664(a665) {
        return a665 == 5;
    }
    a.some(f664);
    var o = { element: 42 };
    a = [1,42,3];
    function f676(a677) {
        return this.element == a677;
    }
    a.some(f676, o);
    a = [1];
    function f684(a685) {
        return this.element == a685;
    }
    a.some(f684, o);
    a = [0,1,2,3];
    function f695(a696, a697, a698) {
        a698[a697] = a696 + 1;
        return a696 == 2;
    }
    a.some(f695);
    [1,2,3,3];
    a = [0,1,2];
    function f713(a714, a715, a716) {
        a716.push(42);
        return a714 == 42;
    }
    a.some(f713);
    [0,1,2,42,42,42];
    const v731 = new Array(20);
    a = v731;
    var count = 0;
    a[2] = 42;
    a[10] = 2;
    a[15] = 42;
    function f737(a738) {
        count++;
        return a738 == 2;
    }
    a.some(f737);
    a = [];
    function f745() {
        a.push(this);
    }
    ([1,2]).some(f745, "");
    a[0] !== a[1];
    a = [];
    function f757() {
        a.push(this);
    }
    const v760 = {};
    ([1,2]).some(f757, v760);
    a[0];
    a[1];
    a = [];
    function f768() {
        'use strict';
        a.push(this);
    }
    ([1,2]).some(f768, "");
    a[0];
    a[0];
    a[1];
}
f651();

FuzzIL program written to corpus/array-iteration.fzil
