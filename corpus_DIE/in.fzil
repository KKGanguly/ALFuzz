BeginObjectLiteral
v0 <- EndObjectLiteral
v1 <- CreateNamedVariable 'o', 'var', v0
v2 <- LoadInteger '0'
v3 <- TestIn v2, v1
v4 <- LoadString 'x'
v5 <- TestIn v4, v1
v6 <- LoadString 'y'
v7 <- TestIn v6, v1
v8 <- LoadString 'toString'
v9 <- TestIn v8, v1
v10 <- LoadString 'toString'
v11 <- LoadInteger '12'
BeginObjectLiteral
    ObjectLiteralAddProperty `x`, v11
v12 <- EndObjectLiteral
v13 <- CreateNamedVariable 'o', 'var', v12
v14 <- LoadInteger '0'
v15 <- TestIn v14, v13
v16 <- LoadString 'x'
v17 <- TestIn v16, v13
v18 <- LoadString 'y'
v19 <- TestIn v18, v13
v20 <- LoadString 'toString'
v21 <- TestIn v20, v13
v22 <- LoadString 'toString'
v23 <- LoadInteger '12'
v24 <- LoadInteger '15'
BeginObjectLiteral
    ObjectLiteralAddProperty `x`, v23
    ObjectLiteralAddProperty `y`, v24
v25 <- EndObjectLiteral
v26 <- CreateNamedVariable 'o', 'var', v25
v27 <- LoadInteger '0'
v28 <- TestIn v27, v26
v29 <- LoadString 'x'
v30 <- TestIn v29, v26
v31 <- LoadString 'y'
v32 <- TestIn v31, v26
v33 <- LoadString 'toString'
v34 <- TestIn v33, v26
v35 <- LoadString 'toString'
v36 <- CreateArray []
v37 <- CreateNamedVariable 'a', 'var', v36
v38 <- LoadInteger '0'
v39 <- TestIn v38, v37
v40 <- LoadInteger '1'
v41 <- TestIn v40, v37
v42 <- LoadString '0'
v43 <- TestIn v42, v37
v44 <- LoadString '1'
v45 <- TestIn v44, v37
v46 <- LoadString 'toString'
v47 <- TestIn v46, v37
v48 <- LoadString 'toString'
v49 <- LoadInteger '1'
v50 <- CreateArray [v49]
v51 <- CreateNamedVariable 'a', 'var', v50
v52 <- LoadInteger '0'
v53 <- TestIn v52, v51
v54 <- LoadInteger '1'
v55 <- TestIn v54, v51
v56 <- LoadString '0'
v57 <- TestIn v56, v51
v58 <- LoadString '1'
v59 <- TestIn v58, v51
v60 <- LoadString 'toString'
v61 <- TestIn v60, v51
v62 <- LoadString 'toString'
v63 <- LoadInteger '1'
v64 <- LoadInteger '2'
v65 <- CreateArray [v63, v64]
v66 <- CreateNamedVariable 'a', 'var', v65
v67 <- LoadInteger '0'
v68 <- TestIn v67, v66
v69 <- LoadInteger '1'
v70 <- TestIn v69, v66
v71 <- LoadString '0'
v72 <- TestIn v71, v66
v73 <- LoadString '1'
v74 <- TestIn v73, v66
v75 <- LoadString 'toString'
v76 <- TestIn v75, v66
v77 <- LoadString 'toString'
v78 <- LoadInteger '1'
v79 <- LoadInteger '2'
v80 <- CreateArray [v78, v79]
v81 <- CreateNamedVariable 'a', 'var', v80
v82 <- LoadFloat '0.001'
v83 <- TestIn v82, v81
v84 <- LoadInteger '0'
v85 <- UnaryOperation '-', v84
v86 <- TestIn v85, v81
v87 <- LoadInteger '0'
v88 <- UnaryOperation '+', v87
v89 <- TestIn v88, v81
v90 <- LoadString '0.0'
v91 <- TestIn v90, v81
v92 <- LoadString '1.0'
v93 <- TestIn v92, v81
v94 <- CreateNamedVariable 'NaN', 'none'
v95 <- TestIn v94, v81
v96 <- CreateNamedVariable 'Infinity', 'none'
v97 <- TestIn v96, v81
v98 <- UnaryOperation '-', v96
v99 <- TestIn v98, v81
v100 <- CreateArray []
v101 <- CreateNamedVariable 'a', 'var', v100
v102 <- LoadInteger '2'
SetElement v101, '1', v102
v103 <- LoadInteger '0'
v104 <- TestIn v103, v101
v105 <- LoadInteger '1'
v106 <- TestIn v105, v101
v107 <- LoadInteger '2'
v108 <- TestIn v107, v101
v109 <- LoadString '0'
v110 <- TestIn v109, v101
v111 <- LoadString '1'
v112 <- TestIn v111, v101
v113 <- LoadString '2'
v114 <- TestIn v113, v101
v115 <- LoadString 'toString'
v116 <- TestIn v115, v101
v117 <- LoadString 'toString'
BeginObjectLiteral
v118 <- EndObjectLiteral
v119 <- CreateNamedVariable 'o', 'var', v118
BeginForLoopInitializer
    v120 <- LoadInteger '32'
BeginForLoopCondition -> v121
    v122 <- LoadInteger '767'
    v123 <- Compare v121, '<', v122
BeginForLoopAfterthought v123 -> v124
    v125 <- LoadInteger '2'
    Update v124, '+', v125
BeginForLoopBody -> v126
    v127 <- LoadString 'char:'
    v128 <- CreateNamedVariable 'String', 'none'
    v129 <- CallMethod v128, 'fromCharCode', [v126]
    v130 <- BinaryOperation v127, '+', v129
    SetComputedProperty v119, v130, v126
EndForLoop
BeginForLoopInitializer
    v131 <- LoadInteger '32'
BeginForLoopCondition -> v132
    v133 <- LoadInteger '767'
    v134 <- Compare v132, '<', v133
BeginForLoopAfterthought v134 -> v135
    v136 <- LoadInteger '2'
    Update v135, '+', v136
BeginForLoopBody -> v137
    v138 <- LoadString 'char:'
    v139 <- CreateNamedVariable 'String', 'none'
    v140 <- CallMethod v139, 'fromCharCode', [v137]
    v141 <- BinaryOperation v138, '+', v140
    v142 <- TestIn v141, v119
    v143 <- LoadString 'char:'
    v144 <- LoadInteger '1'
    v145 <- BinaryOperation v137, '+', v144
    v146 <- CallMethod v139, 'fromCharCode', [v145]
    v147 <- BinaryOperation v143, '+', v146
    v148 <- TestIn v147, v119
EndForLoop
v149 <- LoadString 'toString'
v150 <- TestIn v149, v119
v151 <- LoadString 'toString'
BeginObjectLiteral
v152 <- EndObjectLiteral
v153 <- CreateNamedVariable 'o', 'var', v152
v154 <- LoadInteger '0'
v155 <- LoadInteger '2'
v156 <- LoadInteger '30'
v157 <- CreateNamedVariable 'Math', 'none'
v158 <- CallMethod v157, 'pow', [v155, v156]
v159 <- LoadInteger '1'
v160 <- BinaryOperation v158, '-', v159
SetComputedProperty v153, v160, v154
v161 <- LoadInteger '0'
v162 <- LoadInteger '2'
v163 <- LoadInteger '31'
v164 <- CallMethod v157, 'pow', [v162, v163]
v165 <- LoadInteger '1'
v166 <- BinaryOperation v164, '-', v165
SetComputedProperty v153, v166, v161
v167 <- LoadInteger '0'
SetElement v153, '1', v167
v168 <- LoadInteger '0'
v169 <- TestIn v168, v153
v170 <- LoadInteger '1'
v171 <- TestIn v170, v153
v172 <- LoadInteger '2'
v173 <- TestIn v172, v153
v174 <- LoadInteger '2'
v175 <- LoadInteger '30'
v176 <- CallMethod v157, 'pow', [v174, v175]
v177 <- LoadInteger '2'
v178 <- BinaryOperation v176, '-', v177
v179 <- TestIn v178, v153
v180 <- LoadInteger '2'
v181 <- LoadInteger '30'
v182 <- CallMethod v157, 'pow', [v180, v181]
v183 <- LoadInteger '1'
v184 <- BinaryOperation v182, '-', v183
v185 <- TestIn v184, v153
v186 <- LoadInteger '2'
v187 <- LoadInteger '30'
v188 <- CallMethod v157, 'pow', [v186, v187]
v189 <- LoadInteger '0'
v190 <- BinaryOperation v188, '-', v189
v191 <- TestIn v190, v153
v192 <- LoadInteger '2'
v193 <- LoadInteger '31'
v194 <- CallMethod v157, 'pow', [v192, v193]
v195 <- LoadInteger '1'
v196 <- BinaryOperation v194, '-', v195
v197 <- TestIn v196, v153
v198 <- LoadFloat '0.001'
v199 <- TestIn v198, v153
v200 <- LoadString '0.0'
v201 <- TestIn v200, v153
v202 <- LoadString '1.0'
v203 <- TestIn v202, v153
v204 <- TestIn v94, v153
v205 <- TestIn v96, v153
v206 <- UnaryOperation '-', v96
v207 <- TestIn v206, v153
v208 <- LoadInteger '0'
v209 <- UnaryOperation '-', v208
v210 <- TestIn v209, v153
v211 <- LoadInteger '0'
v212 <- UnaryOperation '+', v211
v213 <- TestIn v212, v153
v214 <- LoadString 'toString'
v215 <- TestIn v214, v153
v216 <- LoadString 'toString'
v217 <- CreateArray []
v218 <- CreateNamedVariable 'a', 'var', v217
v219 <- LoadInteger '0'
v220 <- LoadInteger '2'
v221 <- LoadInteger '30'
v222 <- CallMethod v157, 'pow', [v220, v221]
v223 <- LoadInteger '1'
v224 <- BinaryOperation v222, '-', v223
SetComputedProperty v218, v224, v219
v225 <- LoadInteger '0'
v226 <- LoadInteger '2'
v227 <- LoadInteger '31'
v228 <- CallMethod v157, 'pow', [v226, v227]
v229 <- LoadInteger '1'
v230 <- BinaryOperation v228, '-', v229
SetComputedProperty v218, v230, v225
v231 <- LoadInteger '0'
SetElement v218, '1', v231
v232 <- LoadInteger '0'
v233 <- TestIn v232, v218
v234 <- LoadString '0 in a'
v235 <- LoadInteger '1'
v236 <- TestIn v235, v218
v237 <- LoadString '1 in a'
v238 <- LoadInteger '2'
v239 <- TestIn v238, v218
v240 <- LoadString '2 in a'
v241 <- LoadInteger '2'
v242 <- LoadInteger '30'
v243 <- CallMethod v157, 'pow', [v241, v242]
v244 <- LoadInteger '2'
v245 <- BinaryOperation v243, '-', v244
v246 <- TestIn v245, v218
v247 <- LoadString 'Math.pow(2,30)-2 in a'
v248 <- LoadInteger '2'
v249 <- LoadInteger '30'
v250 <- CallMethod v157, 'pow', [v248, v249]
v251 <- LoadInteger '1'
v252 <- BinaryOperation v250, '-', v251
v253 <- TestIn v252, v218
v254 <- LoadString 'Math.pow(2,30)-1 in a'
v255 <- LoadInteger '2'
v256 <- LoadInteger '30'
v257 <- CallMethod v157, 'pow', [v255, v256]
v258 <- LoadInteger '0'
v259 <- BinaryOperation v257, '-', v258
v260 <- TestIn v259, v218
v261 <- LoadString 'Math.pow(2,30)-0 in a'
v262 <- LoadInteger '2'
v263 <- LoadInteger '31'
v264 <- CallMethod v157, 'pow', [v262, v263]
v265 <- LoadInteger '1'
v266 <- BinaryOperation v264, '-', v265
v267 <- TestIn v266, v218
v268 <- LoadString 'Math.pow(2,31)-1 in a'
v269 <- LoadFloat '0.001'
v270 <- TestIn v269, v218
v271 <- LoadString '0.001 in a'
v272 <- LoadString '0.0'
v273 <- TestIn v272, v218
v274 <- LoadString ''0.0' in a'
v275 <- LoadString '1.0'
v276 <- TestIn v275, v218
v277 <- LoadString ''1.0' in a'
v278 <- TestIn v94, v218
v279 <- LoadString 'NaN in a'
v280 <- TestIn v96, v218
v281 <- LoadString 'Infinity in a'
v282 <- UnaryOperation '-', v96
v283 <- TestIn v282, v218
v284 <- LoadString '-Infinity in a'
v285 <- LoadInteger '0'
v286 <- UnaryOperation '-', v285
v287 <- TestIn v286, v218
v288 <- LoadString '-0 in a'
v289 <- LoadInteger '0'
v290 <- UnaryOperation '+', v289
v291 <- TestIn v290, v218
v292 <- LoadString '+0 in a'
v293 <- LoadString 'toString'
v294 <- TestIn v293, v218
v295 <- LoadString 'toString'
v296 <- CreateArray []
v297 <- CreateNamedVariable 'a', 'var', v296
v298 <- LoadInteger '1'
v299 <- UnaryOperation '-', v298
v300 <- TestIn v299, v297
v301 <- LoadInteger '43'
v302 <- LoadInteger '1'
v303 <- UnaryOperation '-', v302
SetComputedProperty v297, v303, v301
v304 <- LoadInteger '1'
v305 <- UnaryOperation '-', v304
v306 <- TestIn v305, v297


var o = {};
0 in o;
"x" in o;
"y" in o;
"toString" in o;
var o = { x: 12 };
0 in o;
"x" in o;
"y" in o;
"toString" in o;
var o = { x: 12, y: 15 };
0 in o;
"x" in o;
"y" in o;
"toString" in o;
var a = [];
0 in a;
1 in a;
"0" in a;
"1" in a;
"toString" in a;
var a = [1];
0 in a;
1 in a;
"0" in a;
"1" in a;
"toString" in a;
var a = [1,2];
0 in a;
1 in a;
"0" in a;
"1" in a;
"toString" in a;
var a = [1,2];
0.001 in a;
-0 in a;
+0 in a;
"0.0" in a;
"1.0" in a;
NaN in a;
Infinity in a;
-Infinity in a;
var a = [];
a[1] = 2;
0 in a;
1 in a;
2 in a;
"0" in a;
"1" in a;
"2" in a;
"toString" in a;
var o = {};
for (let i121 = 32; i121 < 767; i121 += 2) {
    o["char:" + String.fromCharCode(i121)] = i121;
}
for (let i132 = 32; i132 < 767; i132 += 2) {
    ("char:" + String.fromCharCode(i132)) in o;
    ("char:" + String.fromCharCode(i132 + 1)) in o;
}
"toString" in o;
var o = {};
o[Math.pow(2, 30) - 1] = 0;
o[Math.pow(2, 31) - 1] = 0;
o[1] = 0;
0 in o;
1 in o;
2 in o;
(Math.pow(2, 30) - 2) in o;
(Math.pow(2, 30) - 1) in o;
(Math.pow(2, 30) - 0) in o;
(Math.pow(2, 31) - 1) in o;
0.001 in o;
"0.0" in o;
"1.0" in o;
NaN in o;
Infinity in o;
-Infinity in o;
-0 in o;
+0 in o;
"toString" in o;
var a = [];
a[Math.pow(2, 30) - 1] = 0;
a[Math.pow(2, 31) - 1] = 0;
a[1] = 0;
0 in a;
1 in a;
2 in a;
(Math.pow(2, 30) - 2) in a;
(Math.pow(2, 30) - 1) in a;
(Math.pow(2, 30) - 0) in a;
(Math.pow(2, 31) - 1) in a;
0.001 in a;
"0.0" in a;
"1.0" in a;
NaN in a;
Infinity in a;
-Infinity in a;
-0 in a;
+0 in a;
"toString" in a;
var a = [];
-1 in a;
a[-1] = 43;
-1 in a;

FuzzIL program written to corpus/in.fzil
