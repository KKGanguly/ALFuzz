v0 <- BeginPlainFunction -> v1
    v2 <- LoadInteger '0'
    SetProperty v1, 'x', v2
    v3 <- GetProperty v1, 'x'
    v4 <- LoadInteger '0'
    v5 <- Compare v3, '===', v4
    BeginIf v5
        v6 <- LoadFloat '0.1'
        SetElement v1, '1', v6
    EndIf
    BeginObjectLiteral
    v7 <- EndObjectLiteral
    SetProperty v1, 'x', v7
EndPlainFunction
v8 <- CreateNamedVariable 'Array', 'none'
v9 <- LoadInteger '1'
v10 <- Construct v8, [v9]
v11 <- CallFunction v0, [v10]
v12 <- LoadInteger '1'
v13 <- Construct v8, [v12]
v14 <- CallFunction v0, [v13]
v15 <- LoadInteger '1'
v16 <- Construct v8, [v15]
v17 <- CallFunction v0, [v16]


function foo(a1) {
    a1.x = 0;
    if (a1.x === 0) {
        a1[1] = 0.1;
    }
    a1.x = {};
}
const v10 = new Array(1);
foo(v10);
const v13 = new Array(1);
foo(v13);
const v16 = new Array(1);
foo(v16);

FuzzIL program written to corpus/regress-crbug-655004.fzil
