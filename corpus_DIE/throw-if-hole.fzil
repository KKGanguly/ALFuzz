v0 <- BeginPlainFunction -> v1
    v2 <- LoadInteger '1'
    v3 <- Compare v1, '==', v2
    BeginIf v3
        v4 <- LoadInteger '20'
        v5 <- CreateNamedVariable 'a', 'none'
        Reassign v5, v4
        v6 <- CreateNamedVariable 'a', 'let', v4
    EndIf
EndPlainFunction
v7 <- LoadInteger '0'
v8 <- CallFunction v0, [v7]
v9 <- LoadInteger '0'
v10 <- CallFunction v0, [v9]
v11 <- LoadInteger '0'
v12 <- CallFunction v0, [v11]
v13 <- CallFunction v0, []
v14 <- BeginArrowFunction -> 
    v15 <- LoadInteger '1'
    v16 <- CallFunction v0, [v15]
EndArrowFunction
v17 <- CallFunction v14, []
v18 <- CreateNamedVariable 'ReferenceError', 'none'
v19 <- CallFunction v0, []


function f(a1) {
    if (a1 == 1) {
        a = 20;
        let a = 20;
    }
}
f(0);
f(0);
f(0);
f();
const v14 = () => {
    f(1);
};
v14();
f();

FuzzIL program written to corpus/throw-if-hole.fzil
