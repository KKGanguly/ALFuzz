v0 <- BeginPlainFunction -> v1
    v2 <- LoadInteger '0'
    v3 <- CallFunction v1, [v2]
    v4 <- CreateNamedVariable 'NaN', 'none'
    v5 <- CallFunction v1, [v4]
    v6 <- LoadInteger '1'
    v7 <- CallFunction v1, [v6]
EndPlainFunction
v8 <- BeginArrowFunction -> v9
    v10 <- UnaryOperation '+', v9
    v11 <- CreateNamedVariable 'Math', 'none'
    v12 <- CallMethod v11, 'cosh', [v10]
    Return v12
EndArrowFunction
v13 <- CallFunction v0, [v8]
v14 <- BeginArrowFunction -> v15
    v16 <- UnaryOperation '+', v15
    v17 <- CreateNamedVariable 'Math', 'none'
    v18 <- CallMethod v17, 'sinh', [v16]
    Return v18
EndArrowFunction
v19 <- CallFunction v0, [v14]
v20 <- BeginArrowFunction -> v21
    v22 <- UnaryOperation '+', v21
    v23 <- CreateNamedVariable 'Math', 'none'
    v24 <- CallMethod v23, 'tanh', [v22]
    Return v24
EndArrowFunction
v25 <- CallFunction v0, [v20]


function test(a1) {
    a1(0);
    a1(NaN);
    a1(1);
}
const v8 = (a9) => {
    return Math.cosh(+a9);
};
test(v8);
const v14 = (a15) => {
    return Math.sinh(+a15);
};
test(v14);
const v20 = (a21) => {
    return Math.tanh(+a21);
};
test(v20);

FuzzIL program written to corpus/regress-625121.fzil
