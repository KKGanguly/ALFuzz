v0 <- BeginGeneratorFunction -> 
    v1 <- LoadString 'yielded'
    v2 <- Yield v1
    v3 <- CreateTemplateString ['foo', 'bar'], [v2]
    v4 <- CreateNamedVariable 'f', 'var', v3
    Return v4
EndGeneratorFunction
v5 <- CallFunction v0, []
v6 <- CreateNamedVariable 'gen2', 'var', v5
v7 <- LoadString 'yielded'
v8 <- LoadString 'unused'
v9 <- CallMethod v6, 'next', [v8]
v10 <- GetProperty v9, 'value'
v11 <- LoadString 'foobazbar'
v12 <- LoadString 'baz'
v13 <- CallMethod v6, 'next', [v12]
v14 <- GetProperty v13, 'value'


function* foo() {
    var f = `foo${yield "yielded"}bar`;
    return f;
}
var gen2 = foo();
gen2.next("unused").value;
gen2.next("baz").value;

FuzzIL program written to corpus/string-concat-yield.fzil
