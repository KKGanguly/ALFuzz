v0 <- BeginPlainFunction -> v1, v2
    v3 <- LoadUndefined
    v4 <- CreateNamedVariable 'arr', 'var', v3
    v5 <- TypeOf v2
    v6 <- LoadString 'object'
    v7 <- Compare v5, '===', v6
    v8 <- CreateNamedVariable 'Array', 'none'
    v9 <- TestInstanceOf v2, v8
    v10 <- BinaryOperation v7, '&&', v9
    BeginIf v10
        Reassign v4, v2
    BeginElse
        v11 <- LoadArguments
        Reassign v4, v11
    EndIf
    v12 <- GetProperty v4, 'length'
    v13 <- CreateNamedVariable 'i', 'var', v12
    BeginWhileLoopHeader
        v14 <- UnaryOperation '--', v13
        v15 <- LoadInteger '0'
        v16 <- Compare v14, '>=', v15
    BeginWhileLoopBody v16
        v17 <- GetComputedProperty v4, v13
    EndWhileLoop
    v18 <- GetElement v4, '1'
    v19 <- Compare v18, '!==', v2
    v20 <- CreateNamedVariable 'arrIsArguments', 'var', v19
EndPlainFunction
v21 <- LoadBoolean 'false'
v22 <- LoadString 'b'
v23 <- LoadString 'c'
v24 <- CallFunction v0, [v21, v22, v23]
v25 <- LoadBoolean 'false'
v26 <- LoadString 'b'
v27 <- LoadString 'c'
v28 <- CallFunction v0, [v25, v26, v27]
v29 <- LoadBoolean 'false'
v30 <- LoadString 'b'
v31 <- LoadString 'c'
v32 <- CallFunction v0, [v29, v30, v31]
v33 <- LoadBoolean 'true'
v34 <- LoadString 'b'
v35 <- LoadString 'c'
v36 <- CreateArray [v34, v35]
v37 <- CallFunction v0, [v33, v36]


function f(a1, a2) {
    var arr;
    if ((typeof a2 === "object") && (a2 instanceof Array)) {
        arr = a2;
    } else {
        arr = arguments;
    }
    var i = arr.length;
    while (--i >= 0) {
        arr[i];
    }
    var arrIsArguments = arr[1] !== a2;
}
f(false, "b", "c");
f(false, "b", "c");
f(false, "b", "c");
f(true, ["b","c"]);

FuzzIL program written to corpus/regress-1582.fzil
