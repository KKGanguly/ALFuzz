v0 <- LoadString 'This is the correct result.'
v1 <- CreateNamedVariable 'correct_result', 'var', v0
v2 <- BeginPlainFunction -> v3
    v4 <- LoadInteger '0'
    v5 <- Compare v3, '>', v4
    BeginIf v5
        v6 <- LoadInteger '1'
        v7 <- BinaryOperation v3, '-', v6
        v8 <- CallFunction v2, [v7]
        Return v8
    EndIf
    v9 <- CreateNamedVariable 'String', 'none'
    v10 <- LoadInteger '1'
    v11 <- LoadInteger '2'
    v12 <- LoadInteger '3'
    v13 <- LoadInteger '4'
    v14 <- LoadInteger '5'
    v15 <- LoadInteger '6'
    v16 <- Construct v9, [v1, v10, v11, v12, v13, v14, v15]
    Return v16
EndPlainFunction
v17 <- BeginPlainFunction -> v18
    v19 <- CallFunction v2, [v18]
    v20 <- CreateNamedVariable 'actual', 'var', v19
    v21 <- Compare v1, '!=', v20
    BeginIf v21
        v22 <- LoadString 'Expected "'
        v23 <- BinaryOperation v22, '+', v1
        v24 <- LoadString '", found '
        v25 <- BinaryOperation v23, '+', v24
        v26 <- BinaryOperation v25, '+', v20
        v27 <- CreateNamedVariable 'msg', 'var', v26
        v28 <- CreateNamedVariable 'MjsUnitAssertionError', 'none'
        v29 <- Construct v28, [v27]
        ThrowException v29
    EndIf
EndPlainFunction
v30 <- LoadInteger '1'
v31 <- CallFunction v17, [v30]
v32 <- LoadInteger '1'
v33 <- CallFunction v17, [v32]
v34 <- LoadInteger '10'
v35 <- CallFunction v17, [v34]
v36 <- LoadInteger '100'
v37 <- CallFunction v17, [v36]


var correct_result = "This is the correct result.";
function foo(a3) {
    if (a3 > 0) {
        return foo(a3 - 1);
    }
    const v16 = new String(correct_result, 1, 2, 3, 4, 5, 6);
    return v16;
}
function test(a18) {
    var actual = foo(a18);
    if (correct_result != actual) {
        var msg = (("Expected "" + correct_result) + "", found ") + actual;
        const v29 = new MjsUnitAssertionError(msg);
        throw v29;
    }
}
test(1);
test(1);
test(10);
test(100);

FuzzIL program written to corpus/regress-crbug-425585.fzil
