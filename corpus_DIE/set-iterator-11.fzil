v0 <- CreateNamedVariable 'Set', 'none'
v1 <- LoadInteger '1'
v2 <- LoadInteger '2'
v3 <- LoadInteger '3'
v4 <- CreateArray [v1, v2, v3]
v5 <- Construct v0, [v4]
v6 <- CreateNamedVariable 'set', 'var', v5
v7 <- CallMethod v6, 'keys', []
v8 <- CreateNamedVariable 'iterator', 'var', v7
v9 <- LoadInteger '1'
v10 <- LoadInteger '2'
v11 <- LoadInteger '3'
v12 <- CreateArray [v9, v10, v11]
v13 <- CallMethod v6, 'keys', []
v14 <- CreateArrayWithSpread [...v13]
v15 <- LoadInteger '1'
v16 <- LoadInteger '2'
v17 <- LoadInteger '3'
v18 <- CreateArray [v15, v16, v17]
v19 <- CreateArrayWithSpread [...v8]
v20 <- CreateArray []
v21 <- CreateArrayWithSpread [...v8]
v22 <- CallMethod v6, 'values', []
Reassign v8, v22
v23 <- LoadInteger '1'
v24 <- LoadInteger '2'
v25 <- LoadInteger '3'
v26 <- CreateArray [v23, v24, v25]
v27 <- CreateArrayWithSpread [...v8]
v28 <- CreateArray []
v29 <- CreateArrayWithSpread [...v8]
v30 <- CallMethod v6, 'keys', []
Reassign v8, v30
v31 <- CallMethod v8, 'next', []
v32 <- LoadInteger '2'
v33 <- LoadInteger '3'
v34 <- CreateArray [v32, v33]
v35 <- CreateArrayWithSpread [...v8]
v36 <- CreateArray []
v37 <- CreateArrayWithSpread [...v8]
v38 <- CallMethod v6, 'values', []
Reassign v8, v38
v39 <- CallMethod v6, 'values', []
v40 <- CreateNamedVariable 'iterator2', 'var', v39
v41 <- LoadInteger '1'
v42 <- CallMethod v6, 'delete', [v41]
v43 <- LoadInteger '2'
v44 <- LoadInteger '3'
v45 <- CreateArray [v43, v44]
v46 <- CreateArrayWithSpread [...v8]
v47 <- LoadInteger '4'
v48 <- CallMethod v6, 'add', [v47]
v49 <- LoadInteger '2'
v50 <- LoadInteger '3'
v51 <- LoadInteger '4'
v52 <- CreateArray [v49, v50, v51]
v53 <- CreateArrayWithSpread [...v40]
v54 <- CallMethod v6, 'keys', []
Reassign v8, v54
v55 <- LoadInteger '1'
v56 <- CallMethod v6, 'add', [v55]
v57 <- LoadInteger '2'
v58 <- LoadInteger '3'
v59 <- LoadInteger '4'
v60 <- LoadInteger '1'
v61 <- CreateArray [v57, v58, v59, v60]
v62 <- CreateArrayWithSpread [...v8]


const v5 = new Set([1,2,3]);
var set = v5;
var iterator = set.keys();
[1,2,3];
[...set.keys()];
[1,2,3];
[...iterator];
[];
[...iterator];
iterator = set.values();
[1,2,3];
[...iterator];
[];
[...iterator];
iterator = set.keys();
iterator.next();
[2,3];
[...iterator];
[];
[...iterator];
iterator = set.values();
var iterator2 = set.values();
set.delete(1);
[2,3];
[...iterator];
set.add(4);
[2,3,4];
[...iterator2];
iterator = set.keys();
set.add(1);
[2,3,4,1];
[...iterator];

FuzzIL program written to corpus/set-iterator-11.fzil
