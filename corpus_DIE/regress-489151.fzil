v0 <- CreateNamedVariable 'Array', 'none'
v1 <- GetProperty v0, 'prototype'
v2 <- LoadThis
SetProperty v2, '__proto__', v1
v3 <- LoadThis
v4 <- CreateNamedVariable 'Object', 'none'
v5 <- CallMethod v4, 'freeze', [v3]
v6 <- BeginPlainFunction -> 
    BeginForLoopInitializer
        v7 <- LoadInteger '0'
    BeginForLoopCondition -> v8
        v9 <- LoadInteger '10'
        v10 <- Compare v8, '<', v9
    BeginForLoopAfterthought v10 -> v11
        v12 <- UnaryOperation v11, '++'
    BeginForLoopBody -> v13
        v14 <- LoadInteger '1'
        v15 <- LoadThis
        SetProperty v15, 'length', v14
    EndForLoop
EndPlainFunction
v16 <- CallFunction v6, []


this.__proto__ = Array.prototype;
Object.freeze(this);
function __f_0() {
    for (let i8 = 0; i8 < 10; i8++) {
        this.length = 1;
    }
}
__f_0();

FuzzIL program written to corpus/regress-489151.fzil
