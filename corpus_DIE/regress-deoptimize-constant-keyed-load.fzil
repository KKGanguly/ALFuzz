BeginObjectLiteral
v0 <- EndObjectLiteral
v1 <- CreateNamedVariable 'o', 'var', v0
v2 <- BeginPlainFunction -> v3, v4, v5
    v6 <- BinaryOperation v3, '+', v4
    v7 <- BinaryOperation v6, '+', v5
    Return v7
EndPlainFunction
v8 <- BeginPlainFunction -> 
    v9 <- LoadString 'progressChanged'
    v10 <- CreateNamedVariable 't', 'var', v9
    v11 <- LoadInteger '1'
    v12 <- GetComputedProperty v1, v10
    v13 <- LoadInteger '100'
    v14 <- CallFunction v2, [v11, v12, v13]
    Return v14
EndPlainFunction
v15 <- CallFunction v8, []
v16 <- CallFunction v8, []
v17 <- LoadInteger '111'
v18 <- CallFunction v8, []


var o = {};
function g(a3, a4, a5) {
    return (a3 + a4) + a5;
}
function f() {
    var t = "progressChanged";
    return g(1, o[t], 100);
}
f();
f();
f();

FuzzIL program written to corpus/regress-deoptimize-constant-keyed-load.fzil
