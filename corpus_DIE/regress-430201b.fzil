v0 <- BeginPlainFunction -> 
    v1 <- CreateArray []
    v2 <- CreateNamedVariable 'array_1', 'var', v1
    BeginForLoopInitializer
        v3 <- LoadInteger '0'
    BeginForLoopCondition -> v4
        v5 <- LoadInteger '10000'
        v6 <- Compare v4, '<', v5
    BeginForLoopAfterthought v6 -> v7
        v8 <- UnaryOperation v7, '++'
    BeginForLoopBody -> v9
        v10 <- LoadInteger '0'
        v11 <- LoadInteger '100'
        v12 <- BinaryOperation v9, '*', v11
        SetComputedProperty v2, v12, v10
    EndForLoop
    v13 <- CreateNamedVariable 'gc', 'none'
    v14 <- CallFunction v13, []
    v15 <- CallFunction v13, []
    v16 <- CreateArray []
    v17 <- CreateNamedVariable 'array_2', 'var', v16
    BeginForLoopInitializer
        v18 <- LoadInteger '0'
    BeginForLoopCondition -> v19
        v20 <- LoadInteger '321361'
        v21 <- Compare v19, '<', v20
    BeginForLoopAfterthought v21 -> v22
        v23 <- UnaryOperation v22, '++'
    BeginForLoopBody -> v24
        v25 <- CreateNamedVariable 'String', 'none'
        v26 <- CallMethod v25, 'fromCharCode', [v24]
        v27 <- GetElement v26, '0'
        SetComputedProperty v17, v24, v27
    EndForLoop
EndPlainFunction
v28 <- CallFunction v0, []


function f0() {
    var array_1 = [];
    for (let i4 = 0; i4 < 10000; i4++) {
        array_1[i4 * 100] = 0;
    }
    gc();
    gc();
    var array_2 = [];
    for (let i19 = 0; i19 < 321361; i19++) {
        array_2[i19] = String.fromCharCode(i19)[0];
    }
}
f0();

FuzzIL program written to corpus/regress-430201b.fzil
