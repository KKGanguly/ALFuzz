v0 <- BeginPlainFunction -> 
    v1 <- LoadInteger '1'
    BeginObjectLiteral
        ObjectLiteralAddProperty `a`, v1
    v2 <- EndObjectLiteral
    v3 <- CreateNamedVariable 'x', 'var', v2
    v4 <- CreateNamedVariable 'Set', 'none'
    v5 <- Construct v4, []
    v6 <- CreateNamedVariable 'set', 'var', v5
    v7 <- CallMethod v6, 'add', [v3]
    v8 <- LoadInteger '1'
    SetProperty v3, 'b', v8
    v9 <- LoadInteger '2'
    SetProperty v3, 'c', v9
    v10 <- LoadInteger '3'
    SetProperty v3, 'd', v10
    v11 <- LoadInteger '4'
    SetProperty v3, 'e', v11
    v12 <- LoadInteger '5'
    SetProperty v3, 'f', v12
    v13 <- LoadInteger '6'
    SetProperty v3, 'g', v13
    v14 <- CallMethod v6, 'has', [v3]
EndPlainFunction
v15 <- CallFunction v0, []
v16 <- CallFunction v0, []
v17 <- CallFunction v0, []


function f() {
    var x = { a: 1 };
    const v5 = new Set();
    var set = v5;
    set.add(x);
    x.b = 1;
    x.c = 2;
    x.d = 3;
    x.e = 4;
    x.f = 5;
    x.g = 6;
    set.has(x);
}
f();
f();
f();

FuzzIL program written to corpus/hash-code.fzil
