v0 <- BeginPlainFunction -> 
    v1 <- LoadArguments
    Return v1
EndPlainFunction
v2 <- BeginPlainFunction -> 
    v3 <- LoadThis
    Return v3
EndPlainFunction
v4 <- BeginPlainFunction -> 
    v5 <- LoadThis
    v6 <- LoadArguments
    v7 <- CallMethod v0, 'apply', [v5, v6]
    Return v7
EndPlainFunction
v8 <- LoadInteger '0'
v9 <- CallFunction v4, []
v10 <- GetProperty v9, 'length'
v11 <- LoadInteger '1'
v12 <- LoadInteger '1'
v13 <- CallFunction v4, [v12]
v14 <- GetProperty v13, 'length'
v15 <- LoadInteger '2'
v16 <- LoadInteger '2'
v17 <- CallFunction v4, [v16]
v18 <- GetElement v17, '0'
v19 <- LoadInteger '2'
v20 <- LoadInteger '3'
v21 <- LoadInteger '4'
v22 <- CallFunction v4, [v20, v21]
v23 <- GetProperty v22, 'length'
v24 <- LoadInteger '3'
v25 <- LoadInteger '3'
v26 <- LoadInteger '4'
v27 <- CallFunction v4, [v25, v26]
v28 <- GetElement v27, '0'
v29 <- LoadInteger '4'
v30 <- LoadInteger '3'
v31 <- LoadInteger '4'
v32 <- CallFunction v4, [v30, v31]
v33 <- GetElement v32, '1'
v34 <- BeginPlainFunction -> 
    BeginObjectLiteral
        ObjectLiteralAddProperty `f`, v0
    v35 <- EndObjectLiteral
    v36 <- CreateNamedVariable 'object', 'var', v35
    v37 <- LoadThis
    v38 <- LoadArguments
    v39 <- GetProperty v36, 'f'
    v40 <- CallMethod v39, 'apply', [v37, v38]
    Return v40
EndPlainFunction
v41 <- LoadInteger '0'
v42 <- CallFunction v34, []
v43 <- GetProperty v42, 'length'
v44 <- LoadInteger '1'
v45 <- LoadInteger '1'
v46 <- CallFunction v34, [v45]
v47 <- GetProperty v46, 'length'
v48 <- LoadInteger '2'
v49 <- LoadInteger '2'
v50 <- CallFunction v34, [v49]
v51 <- GetElement v50, '0'
v52 <- LoadInteger '2'
v53 <- LoadInteger '3'
v54 <- LoadInteger '4'
v55 <- CallFunction v34, [v53, v54]
v56 <- GetProperty v55, 'length'
v57 <- LoadInteger '3'
v58 <- LoadInteger '3'
v59 <- LoadInteger '4'
v60 <- CallFunction v34, [v58, v59]
v61 <- GetElement v60, '0'
v62 <- LoadInteger '4'
v63 <- LoadInteger '3'
v64 <- LoadInteger '4'
v65 <- CallFunction v34, [v63, v64]
v66 <- GetElement v65, '1'
v67 <- BeginPlainFunction -> 
    v68 <- LoadInteger '3'
    v69 <- LoadInteger '4'
    v70 <- CreateArray [v68, v69]
    v71 <- CreateNamedVariable 'arguments', 'var', v70
    v72 <- LoadThis
    v73 <- CallMethod v0, 'apply', [v72, v71]
    Return v73
EndPlainFunction
v74 <- LoadInteger '2'
v75 <- CallFunction v67, []
v76 <- GetProperty v75, 'length'
v77 <- LoadInteger '3'
v78 <- CallFunction v67, []
v79 <- GetElement v78, '0'
v80 <- LoadInteger '4'
v81 <- CallFunction v67, []
v82 <- GetElement v81, '1'
v83 <- BeginPlainFunction -> v84
    v85 <- LoadArguments
    v86 <- CallMethod v2, 'apply', [v84, v85]
    Return v86
EndPlainFunction
v87 <- LoadInteger '42'
v88 <- CreateNamedVariable 'Object', 'none'
v89 <- CallFunction v88, [v87]
v90 <- LoadInteger '42'
v91 <- CallFunction v83, [v90]
v92 <- LoadString 'object'
v93 <- LoadInteger '42'
v94 <- CallFunction v83, [v93]
v95 <- TypeOf v94
v96 <- LoadInteger '42'
v97 <- CallFunction v83, [v96]
v98 <- CreateNamedVariable 'Number', 'none'
v99 <- LoadThis
v100 <- LoadNull
v101 <- CallFunction v83, [v100]
v102 <- LoadThis
v103 <- LoadInteger '0'
v104 <- Void_ v103
v105 <- CallFunction v83, [v104]
v106 <- BeginPlainFunction -> 
    v107 <- LoadArguments
    v108 <- CallMethod v2, 'apply', [v88, v107]
    Return v108
EndPlainFunction
v109 <- CallFunction v106, []
v110 <- Compare v88, '===', v109
v111 <- BeginPlainFunction -> 
    v112 <- BeginPlainFunction -> 
        v113 <- LoadInteger '42'
        Return v113
    EndPlainFunction
    v114 <- BeginPlainFunction -> 
        v115 <- LoadInteger '87'
        Return v115
    EndPlainFunction
    SetProperty v112, 'apply', v114
    v116 <- LoadThis
    v117 <- LoadArguments
    v118 <- CallMethod v112, 'apply', [v116, v117]
    Return v118
EndPlainFunction
v119 <- LoadInteger '87'
v120 <- CallFunction v111, []
v121 <- LoadInteger '87'
v122 <- LoadInteger '1'
v123 <- CallFunction v111, [v122]
v124 <- LoadInteger '87'
v125 <- LoadInteger '1'
v126 <- LoadInteger '2'
v127 <- CallFunction v111, [v125, v126]
v128 <- BeginPlainFunction -> 
    v129 <- CreateNamedVariable 'Function', 'none'
    v130 <- GetProperty v129, 'prototype'
    v131 <- GetProperty v130, 'apply'
    BeginObjectLiteral
        ObjectLiteralAddProperty `apply`, v131
    v132 <- EndObjectLiteral
    v133 <- CreateNamedVariable 'object', 'var', v132
    v134 <- LoadThis
    v135 <- LoadArguments
    v136 <- CallMethod v133, 'apply', [v134, v135]
    Return v136
EndPlainFunction
v137 <- CallFunction v128, []
v138 <- CreateNamedVariable 'TypeError', 'none'
v139 <- BeginPlainFunction -> 
    v140 <- LoadInteger '42'
    v141 <- CreateNamedVariable 'sentinel', 'var', v140
    v142 <- LoadThis
    v143 <- LoadArguments
    v144 <- CallMethod v0, 'apply', [v142, v143]
    v145 <- CreateNamedVariable 'result', 'var', v144
    v146 <- LoadNull
    v147 <- Compare v145, '!=', v146
    v148 <- LoadInteger '42'
EndPlainFunction
v149 <- CallFunction v139, []
v150 <- BeginPlainFunction -> 
    v151 <- LoadNull
    v152 <- CreateNamedVariable 'arguments', 'var', v151
    v153 <- LoadThis
    v154 <- CallMethod v0, 'apply', [v153, v152]
    Return v154
EndPlainFunction
v155 <- LoadInteger '0'
v156 <- CallFunction v150, []
v157 <- GetProperty v156, 'length'
v158 <- LoadInteger '0'
v159 <- LoadInteger '1'
v160 <- CallFunction v150, [v159]
v161 <- GetProperty v160, 'length'
v162 <- LoadInteger '0'
v163 <- LoadInteger '1'
v164 <- LoadInteger '2'
v165 <- CallFunction v150, [v163, v164]
v166 <- GetProperty v165, 'length'
v167 <- CreateNamedVariable 'Array', 'none'
v168 <- LoadInteger '2048'
v169 <- Construct v167, [v168]
v170 <- CreateNamedVariable 'array', 'var', v169
v171 <- LoadInteger '2048'
v172 <- LoadThis
v173 <- CallMethod v4, 'apply', [v172, v170]
v174 <- GetProperty v173, 'length'


function ReturnArguments() {
    return arguments;
}
function ReturnReceiver() {
    return this;
}
function Global() {
    return ReturnArguments.apply(this, arguments);
}
Global().length;
Global(1).length;
Global(2)[0];
Global(3, 4).length;
Global(3, 4)[0];
Global(3, 4)[1];
function Local() {
    var object = { f: ReturnArguments };
    return object.f.apply(this, arguments);
}
Local().length;
Local(1).length;
Local(2)[0];
Local(3, 4).length;
Local(3, 4)[0];
Local(3, 4)[1];
function ShadowArguments() {
    var arguments = [3,4];
    return ReturnArguments.apply(this, arguments);
}
ShadowArguments().length;
ShadowArguments()[0];
ShadowArguments()[1];
function NonObjectReceiver(a84) {
    return ReturnReceiver.apply(a84, arguments);
}
Object(42);
NonObjectReceiver(42);
typeof NonObjectReceiver(42);
NonObjectReceiver(42);
NonObjectReceiver(null);
NonObjectReceiver(void 0);
function FunctionReceiver() {
    return ReturnReceiver.apply(Object, arguments);
}
Object === FunctionReceiver();
function ShadowApply() {
    function f() {
        return 42;
    }
    function f114() {
        return 87;
    }
    f.apply = f114;
    return f.apply(this, arguments);
}
ShadowApply();
ShadowApply(1);
ShadowApply(1, 2);
function CallNonFunction() {
    const v131 = Function.prototype.apply;
    var object = { apply: v131 };
    return object.apply(this, arguments);
}
CallNonFunction();
function SimpleStackCheck() {
    var sentinel = 42;
    var result = ReturnArguments.apply(this, arguments);
    result != null;
}
SimpleStackCheck();
function ShadowArgumentsWithConstant() {
    var arguments = null;
    return ReturnArguments.apply(this, arguments);
}
ShadowArgumentsWithConstant().length;
ShadowArgumentsWithConstant(1).length;
ShadowArgumentsWithConstant(1, 2).length;
const v169 = new Array(2048);
var array = v169;
Global.apply(this, array).length;

FuzzIL program written to corpus/arguments-apply.fzil
