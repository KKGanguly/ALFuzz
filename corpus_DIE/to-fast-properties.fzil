BeginForLoopInitializer
    v0 <- LoadInteger '0'
BeginForLoopCondition -> v1
    v2 <- LoadInteger '3'
    v3 <- Compare v1, '<', v2
BeginForLoopAfterthought v3 -> v4
    v5 <- UnaryOperation v4, '++'
BeginForLoopBody -> v6
    v7 <- BeginPlainFunction -> 
        Return v6
    EndPlainFunction
    v8 <- LoadInteger '0'
    BeginObjectLiteral
        ObjectLiteralAddProperty `index`, v7
        ObjectLiteralAddProperty `x`, v8
    v9 <- EndObjectLiteral
    v10 <- CreateNamedVariable 'obj', 'var', v9
    v11 <- LoadInteger '10000'
    v12 <- CreateNamedVariable 'n', 'var', v11
    BeginForLoopInitializer
        v13 <- LoadInteger '0'
    BeginForLoopCondition -> v14
        v15 <- Compare v14, '<', v12
    BeginForLoopAfterthought v15 -> v16
        v17 <- UnaryOperation v16, '++'
    BeginForLoopBody -> v18
        UpdateProperty v10, '+', v6
    EndForLoop
    v19 <- CallMethod v10, 'index', []
    v20 <- BinaryOperation v19, '*', v12
    v21 <- GetProperty v10, 'x'
EndForLoop


for (let i1 = 0; i1 < 3; i1++) {
    function f7() {
        return i1;
    }
    var obj = { index: f7, x: 0 };
    var n = 10000;
    for (let i14 = 0; i14 < n; i14++) {
        obj.x += i1;
    }
    obj.index() * n;
    obj.x;
}

FuzzIL program written to corpus/to-fast-properties.fzil
