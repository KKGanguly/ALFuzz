v0 <- BeginPlainFunction -> 
    v1 <- BeginPlainFunction -> v2
        v3 <- UnaryOperation '+', v2
        Reassign v2, v3
        v4 <- CreateNamedVariable 'Math', 'none'
        v5 <- CallMethod v4, 'round', [v2]
        Reassign v2, v5
        v6 <- LoadInteger '0'
        v7 <- UnaryOperation '-', v6
        v8 <- LoadInteger '1'
        v9 <- CallMethod v4, 'max', [v8, v2]
        v10 <- CreateNamedVariable 'Object', 'none'
        v11 <- CallMethod v10, 'is', [v7, v9]
        Return v11
    EndPlainFunction
    v12 <- LoadInteger '0'
    v13 <- UnaryOperation '-', v12
    v14 <- CallFunction v1, [v13]
    v15 <- LoadInteger '1'
    v16 <- UnaryOperation '-', v15
    v17 <- CallFunction v1, [v16]
    v18 <- LoadInteger '0'
    v19 <- UnaryOperation '-', v18
    v20 <- CallFunction v1, [v19]
    v21 <- LoadInteger '1'
    v22 <- UnaryOperation '-', v21
    v23 <- CallFunction v1, [v22]
EndPlainFunction
v24 <- CallFunction v0, []
v25 <- BeginPlainFunction -> 
    v26 <- BeginPlainFunction -> v27
        v28 <- UnaryOperation '+', v27
        Reassign v27, v28
        v29 <- CreateNamedVariable 'Math', 'none'
        v30 <- CallMethod v29, 'round', [v27]
        Reassign v27, v30
        v31 <- LoadInteger '0'
        v32 <- UnaryOperation '-', v31
        v33 <- LoadInteger '0'
        v34 <- CallMethod v29, 'max', [v33, v27]
        v35 <- CreateNamedVariable 'Object', 'none'
        v36 <- CallMethod v35, 'is', [v32, v34]
        Return v36
    EndPlainFunction
    v37 <- LoadInteger '0'
    v38 <- UnaryOperation '-', v37
    v39 <- CallFunction v26, [v38]
    v40 <- LoadInteger '1'
    v41 <- UnaryOperation '-', v40
    v42 <- CallFunction v26, [v41]
    v43 <- LoadInteger '0'
    v44 <- UnaryOperation '-', v43
    v45 <- CallFunction v26, [v44]
    v46 <- LoadInteger '1'
    v47 <- UnaryOperation '-', v46
    v48 <- CallFunction v26, [v47]
EndPlainFunction
v49 <- CallFunction v25, []


function f0() {
    function foo(a2) {
        a2 = +a2;
        a2 = Math.round(a2);
        return Object.is(-0, Math.max(1, a2));
    }
    foo(-0);
    foo(-1);
    foo(-0);
    foo(-1);
}
f0();
function f25() {
    function foo(a27) {
        a27 = +a27;
        a27 = Math.round(a27);
        return Object.is(-0, Math.max(0, a27));
    }
    foo(-0);
    foo(-1);
    foo(-0);
    foo(-1);
}
f25();

FuzzIL program written to corpus/math-max.fzil
