v0 <- BeginPlainFunction -> v1, v2, v3, v4
    v5 <- CreateNamedVariable 'baz', 'none'
    v6 <- CallFunction v5, []
    Return v6
EndPlainFunction
v7 <- BeginPlainFunction -> 
    v8 <- LoadInteger '11'
    v9 <- CallFunction v0, [v8]
    Return v9
EndPlainFunction
v10 <- BeginPlainFunction -> 
    v11 <- GetProperty v0, 'arguments'
    v12 <- GetProperty v11, 'length'
    v13 <- LoadInteger '1'
    v14 <- Compare v12, '==', v13
    v15 <- GetProperty v0, 'arguments'
    v16 <- GetElement v15, '0'
    v17 <- LoadInteger '11'
    v18 <- Compare v16, '==', v17
    v19 <- BinaryOperation v14, '&&', v18
    Return v19
EndPlainFunction
v20 <- LoadBoolean 'true'
v21 <- LoadInteger '12'
v22 <- LoadInteger '14'
v23 <- CallFunction v7, [v21, v22]


function foo(a1, a2, a3, a4) {
    return baz();
}
function bar() {
    return foo(11);
}
function baz() {
    return (foo.arguments.length == 1) && (foo.arguments[0] == 11);
}
bar(12, 14);

FuzzIL program written to corpus/inline-omit-arguments-deopt.fzil
