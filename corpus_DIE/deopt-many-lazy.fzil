v0 <- BeginPlainFunction -> 
    v1 <- CreateNamedVariable 'g', 'none'
    v2 <- CallFunction v1, []
EndPlainFunction
v3 <- BeginPlainFunction -> 
EndPlainFunction
v4 <- BeginPlainFunction -> 
    v5 <- CreateNamedVariable 'b', 'none'
    v6 <- CallFunction v5, []
EndPlainFunction
v7 <- BeginPlainFunction -> 
EndPlainFunction
v8 <- CallFunction v0, []
v9 <- CallFunction v0, []
v10 <- CallFunction v4, []
v11 <- CallFunction v4, []
BeginForLoopInitializer
    v12 <- LoadInteger '0'
BeginForLoopCondition -> v13
    v14 <- LoadInteger '5'
    v15 <- Compare v13, '<', v14
BeginForLoopAfterthought v15 -> v16
    v17 <- UnaryOperation v16, '++'
BeginForLoopBody -> v18
    v19 <- CallFunction v0, []
    v20 <- CallFunction v4, []
EndForLoop


function f() {
    g();
}
function g() {
}
function a() {
    b();
}
function b() {
}
f();
f();
a();
a();
for (let i13 = 0; i13 < 5; i13++) {
    f();
    a();
}

FuzzIL program written to corpus/deopt-many-lazy.fzil
