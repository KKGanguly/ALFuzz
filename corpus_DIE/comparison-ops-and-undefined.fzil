v0 <- BeginPlainFunction -> v1, v2, v3, v4, v5
    v6 <- LoadFloat '0.5'
    v7 <- LoadFloat '0.5'
    v8 <- CallFunction v1, [v6, v7]
    v9 <- LoadFloat '0.5'
    v10 <- LoadUndefined
    v11 <- CallFunction v1, [v9, v10]
    v12 <- LoadUndefined
    v13 <- LoadFloat '0.5'
    v14 <- CallFunction v1, [v12, v13]
    v15 <- LoadUndefined
    v16 <- LoadUndefined
    v17 <- CallFunction v1, [v15, v16]
EndPlainFunction
v18 <- BeginPlainFunction -> v19, v20, v21, v22, v23
    v24 <- LoadFloat '0.5'
    v25 <- LoadFloat '0.5'
    v26 <- CallFunction v19, [v24, v25]
    v27 <- LoadFloat '0.5'
    v28 <- LoadFloat '0.5'
    v29 <- CallFunction v19, [v27, v28]
    v30 <- LoadFloat '0.5'
    v31 <- LoadUndefined
    v32 <- CallFunction v19, [v30, v31]
    v33 <- LoadUndefined
    v34 <- LoadFloat '0.5'
    v35 <- CallFunction v19, [v33, v34]
    v36 <- LoadUndefined
    v37 <- LoadUndefined
    v38 <- CallFunction v19, [v36, v37]
EndPlainFunction
v39 <- BeginPlainFunction -> v40, v41
    v42 <- Compare v40, '<', v41
    Return v42
EndPlainFunction
v43 <- LoadBoolean 'false'
v44 <- LoadBoolean 'false'
v45 <- LoadBoolean 'false'
v46 <- LoadBoolean 'false'
v47 <- CallFunction v0, [v39, v43, v44, v45, v46]
v48 <- BeginPlainFunction -> v49, v50
    v51 <- Compare v49, '<', v50
    Return v51
EndPlainFunction
v52 <- LoadBoolean 'false'
v53 <- LoadBoolean 'false'
v54 <- LoadBoolean 'false'
v55 <- LoadBoolean 'false'
v56 <- CallFunction v18, [v39, v52, v53, v54, v55]
v57 <- BeginPlainFunction -> v58, v59
    v60 <- Compare v58, '>', v59
    Return v60
EndPlainFunction
v61 <- LoadBoolean 'false'
v62 <- LoadBoolean 'false'
v63 <- LoadBoolean 'false'
v64 <- LoadBoolean 'false'
v65 <- CallFunction v0, [v57, v61, v62, v63, v64]
v66 <- BeginPlainFunction -> v67, v68
    v69 <- Compare v67, '>', v68
    Return v69
EndPlainFunction
v70 <- LoadBoolean 'false'
v71 <- LoadBoolean 'false'
v72 <- LoadBoolean 'false'
v73 <- LoadBoolean 'false'
v74 <- CallFunction v18, [v57, v70, v71, v72, v73]
v75 <- BeginPlainFunction -> v76, v77
    v78 <- Compare v76, '<=', v77
    Return v78
EndPlainFunction
v79 <- LoadBoolean 'true'
v80 <- LoadBoolean 'false'
v81 <- LoadBoolean 'false'
v82 <- LoadBoolean 'false'
v83 <- CallFunction v0, [v75, v79, v80, v81, v82]
v84 <- BeginPlainFunction -> v85, v86
    v87 <- Compare v85, '<=', v86
    Return v87
EndPlainFunction
v88 <- LoadBoolean 'true'
v89 <- LoadBoolean 'false'
v90 <- LoadBoolean 'false'
v91 <- LoadBoolean 'false'
v92 <- CallFunction v18, [v75, v88, v89, v90, v91]
v93 <- BeginPlainFunction -> v94, v95
    v96 <- Compare v94, '>=', v95
    Return v96
EndPlainFunction
v97 <- LoadBoolean 'true'
v98 <- LoadBoolean 'false'
v99 <- LoadBoolean 'false'
v100 <- LoadBoolean 'false'
v101 <- CallFunction v0, [v93, v97, v98, v99, v100]
v102 <- BeginPlainFunction -> v103, v104
    v105 <- Compare v103, '>=', v104
    Return v105
EndPlainFunction
v106 <- LoadBoolean 'true'
v107 <- LoadBoolean 'false'
v108 <- LoadBoolean 'false'
v109 <- LoadBoolean 'false'
v110 <- CallFunction v18, [v93, v106, v107, v108, v109]
v111 <- BeginPlainFunction -> v112, v113
    v114 <- Compare v112, '==', v113
    Return v114
EndPlainFunction
v115 <- LoadBoolean 'true'
v116 <- LoadBoolean 'false'
v117 <- LoadBoolean 'false'
v118 <- LoadBoolean 'true'
v119 <- CallFunction v0, [v111, v115, v116, v117, v118]
v120 <- BeginPlainFunction -> v121, v122
    v123 <- Compare v121, '==', v122
    Return v123
EndPlainFunction
v124 <- LoadBoolean 'true'
v125 <- LoadBoolean 'false'
v126 <- LoadBoolean 'false'
v127 <- LoadBoolean 'true'
v128 <- CallFunction v18, [v120, v124, v125, v126, v127]
v129 <- BeginPlainFunction -> v130, v131
    v132 <- Compare v130, '===', v131
    Return v132
EndPlainFunction
v133 <- LoadBoolean 'true'
v134 <- LoadBoolean 'false'
v135 <- LoadBoolean 'false'
v136 <- LoadBoolean 'true'
v137 <- CallFunction v0, [v129, v133, v134, v135, v136]
v138 <- BeginPlainFunction -> v139, v140
    v141 <- Compare v139, '===', v140
    Return v141
EndPlainFunction
v142 <- LoadBoolean 'true'
v143 <- LoadBoolean 'false'
v144 <- LoadBoolean 'false'
v145 <- LoadBoolean 'true'
v146 <- CallFunction v18, [v138, v142, v143, v144, v145]
v147 <- BeginPlainFunction -> v148, v149
    v150 <- Compare v148, '!=', v149
    Return v150
EndPlainFunction
v151 <- LoadBoolean 'false'
v152 <- LoadBoolean 'true'
v153 <- LoadBoolean 'true'
v154 <- LoadBoolean 'false'
v155 <- CallFunction v0, [v147, v151, v152, v153, v154]
v156 <- BeginPlainFunction -> v157, v158
    v159 <- Compare v157, '!=', v158
    Return v159
EndPlainFunction
v160 <- LoadBoolean 'false'
v161 <- LoadBoolean 'true'
v162 <- LoadBoolean 'true'
v163 <- LoadBoolean 'false'
v164 <- CallFunction v18, [v156, v160, v161, v162, v163]


function test_helper_for_ics(a1, a2, a3, a4, a5) {
    a1(0.5, 0.5);
    a1(0.5, undefined);
    a1(undefined, 0.5);
    a1(undefined, undefined);
}
function test_helper_for_crankshaft(a19, a20, a21, a22, a23) {
    a19(0.5, 0.5);
    a19(0.5, 0.5);
    a19(0.5, undefined);
    a19(undefined, 0.5);
    a19(undefined, undefined);
}
function less_1(a40, a41) {
    return a40 < a41;
}
test_helper_for_ics(less_1, false, false, false, false);
function less_2(a49, a50) {
    return a49 < a50;
}
test_helper_for_crankshaft(less_1, false, false, false, false);
function greater_1(a58, a59) {
    return a58 > a59;
}
test_helper_for_ics(greater_1, false, false, false, false);
function greater_2(a67, a68) {
    return a67 > a68;
}
test_helper_for_crankshaft(greater_1, false, false, false, false);
function less_equal_1(a76, a77) {
    return a76 <= a77;
}
test_helper_for_ics(less_equal_1, true, false, false, false);
function less_equal_2(a85, a86) {
    return a85 <= a86;
}
test_helper_for_crankshaft(less_equal_1, true, false, false, false);
function greater_equal_1(a94, a95) {
    return a94 >= a95;
}
test_helper_for_ics(greater_equal_1, true, false, false, false);
function greater_equal_2(a103, a104) {
    return a103 >= a104;
}
test_helper_for_crankshaft(greater_equal_1, true, false, false, false);
function equal_1(a112, a113) {
    return a112 == a113;
}
test_helper_for_ics(equal_1, true, false, false, true);
function equal_2(a121, a122) {
    return a121 == a122;
}
test_helper_for_crankshaft(equal_2, true, false, false, true);
function strict_equal_1(a130, a131) {
    return a130 === a131;
}
test_helper_for_ics(strict_equal_1, true, false, false, true);
function strict_equal_2(a139, a140) {
    return a139 === a140;
}
test_helper_for_crankshaft(strict_equal_2, true, false, false, true);
function not_equal_1(a148, a149) {
    return a148 != a149;
}
test_helper_for_ics(not_equal_1, false, true, true, false);
function not_equal_2(a157, a158) {
    return a157 != a158;
}
test_helper_for_crankshaft(not_equal_2, false, true, true, false);

FuzzIL program written to corpus/comparison-ops-and-undefined.fzil
