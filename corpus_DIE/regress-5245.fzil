BeginObjectLiteral
v0 <- EndObjectLiteral
v1 <- CreateNamedVariable 'a', 'var', v0
v2 <- CreateNamedVariable 'Error', 'none'
v3 <- CallMethod v2, 'captureStackTrace', [v1, v2]
v4 <- LoadInteger '1'
SetProperty v1, 'stack', v4
v5 <- Construct v2, []
v6 <- CreateNamedVariable 'b', 'var', v5
v7 <- LoadInteger '1'
SetProperty v6, 'stack', v7
v8 <- LoadInteger '1'
SetProperty v6, 'stack', v8
v9 <- Construct v2, []
v10 <- CreateNamedVariable 'c', 'var', v9
v11 <- GetProperty v10, 'stack'
v12 <- CreateNamedVariable 'old_stack', 'var', v11
v13 <- LoadInteger '1'
SetProperty v10, 'stack', v13
v14 <- LoadInteger '1'
SetProperty v10, 'stack', v14


var a = {};
Error.captureStackTrace(a, Error);
a.stack = 1;
const v5 = new Error();
var b = v5;
b.stack = 1;
b.stack = 1;
const v9 = new Error();
var c = v9;
var old_stack = c.stack;
c.stack = 1;
c.stack = 1;

FuzzIL program written to corpus/regress-5245.fzil
