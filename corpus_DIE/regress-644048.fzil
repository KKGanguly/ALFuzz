v0 <- BeginPlainFunction -> v1
    v2 <- LoadInteger '0'
    v3 <- UnaryOperation '!', v2
    v4 <- LoadInteger '0'
    v5 <- BinaryOperation v3, '/', v4
    v6 <- TernaryOperation v1, v5, v1
    v7 <- LoadInteger '0'
    v8 <- BinaryOperation v6, '|', v7
EndPlainFunction
v9 <- LoadInteger '1'
v10 <- CallFunction v0, [v9]
v11 <- LoadInteger '2'
v12 <- CallFunction v0, [v11]
v13 <- LoadInteger '3'
v14 <- CallFunction v0, [v13]


function foo(a1) {
    (a1 ? !0 / 0 : a1) | 0;
}
foo(1);
foo(2);
foo(3);

FuzzIL program written to corpus/regress-644048.fzil
