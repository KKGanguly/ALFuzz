v0 <- BeginPlainFunction -> v1, v2
    v3 <- BeginPlainFunction -> 
        v4 <- LoadThis
        SetProperty v4, 'constructor', v1
    EndPlainFunction
    v5 <- GetProperty v2, 'prototype'
    SetProperty v3, 'prototype', v5
    v6 <- Construct v3, []
    SetProperty v1, 'prototype', v6
EndPlainFunction
v7 <- CreateNamedVariable 'extend', 'var', v0
v8 <- CreateNamedVariable 'Object', 'none'
v9 <- BeginPlainFunction -> v10
    v11 <- BeginPlainFunction -> 
        v12 <- LoadThis
        v13 <- CreateNamedVariable 'self', 'var', v12
        v14 <- CallMethod v10, 'call', [v13]
        v15 <- LoadBoolean 'true'
        v16 <- LoadBoolean 'true'
        v17 <- BeginPlainFunction -> 
            v18 <- LoadString 'Ford'
            Return v18
        EndPlainFunction
        BeginObjectLiteral
            ObjectLiteralAddProperty `enumerable`, v15
            ObjectLiteralAddProperty `configurable`, v16
            ObjectLiteralAddProperty `get`, v17
        v19 <- EndObjectLiteral
        BeginObjectLiteral
            ObjectLiteralAddProperty `make`, v19
        v20 <- EndObjectLiteral
        v21 <- CallMethod v8, 'defineProperties', [v13, v20]
        v22 <- BeginPlainFunction -> 
            v23 <- CreateNamedVariable 'Error', 'none'
            v24 <- LoadString 'Meant to be overriden'
            v25 <- Construct v23, [v24]
            ThrowException v25
        EndPlainFunction
        SetProperty v13, 'copy', v22
        Return v13
    EndPlainFunction
    v26 <- CreateNamedVariable 'Car', 'var', v11
    v27 <- CallFunction v7, [v26, v10]
    Return v26
EndPlainFunction
v28 <- CallFunction v9, [v8]
v29 <- CreateNamedVariable 'Car', 'var', v28
v30 <- BeginPlainFunction -> v31
    v32 <- BeginPlainFunction -> v33
        v34 <- LoadThis
        v35 <- CreateNamedVariable 'self', 'var', v34
        v36 <- CallMethod v31, 'call', [v35]
        v37 <- LoadBoolean 'true'
        v38 <- LoadBoolean 'true'
        v39 <- BeginPlainFunction -> 
            Return v33
        EndPlainFunction
        BeginObjectLiteral
            ObjectLiteralAddProperty `enumerable`, v37
            ObjectLiteralAddProperty `configurable`, v38
            ObjectLiteralAddProperty `get`, v39
        v40 <- EndObjectLiteral
        BeginObjectLiteral
            ObjectLiteralAddProperty `make`, v40
        v41 <- EndObjectLiteral
        v42 <- CallMethod v8, 'defineProperties', [v35, v41]
        v43 <- BeginPlainFunction -> 
        EndPlainFunction
        SetProperty v35, 'copy', v43
        Return v35
    EndPlainFunction
    v44 <- CreateNamedVariable 'SuperCar', 'var', v32
    v45 <- CallFunction v7, [v44, v31]
    Return v44
EndPlainFunction
v46 <- CallFunction v30, [v29]
v47 <- CreateNamedVariable 'SuperCar', 'var', v46
v48 <- LoadString 'Ford'
v49 <- Construct v29, []
v50 <- GetProperty v49, 'make'
v51 <- LoadString 'Bugatti'
v52 <- LoadString 'Bugatti'
v53 <- Construct v47, [v52]
v54 <- GetProperty v53, 'make'
v55 <- LoadString 'Lambo'
v56 <- LoadString 'Lambo'
v57 <- Construct v47, [v56]
v58 <- GetProperty v57, 'make'
v59 <- LoadString 'Shelby'
v60 <- LoadString 'Shelby'
v61 <- Construct v47, [v60]
v62 <- GetProperty v61, 'make'


function f0(a1, a2) {
    function __() {
        this.constructor = a1;
    }
    __.prototype = a2.prototype;
    const v6 = new __();
    a1.prototype = v6;
}
var extend = f0;
function f9(a10) {
    function f11() {
        var self = this;
        a10.call(self);
        function f17() {
            return "Ford";
        }
        const v19 = { enumerable: true, configurable: true, get: f17 };
        Object.defineProperties(self, { make: v19 });
        function f22() {
            const v25 = new Error("Meant to be overriden");
            throw v25;
        }
        self.copy = f22;
        return self;
    }
    var Car = f11;
    extend(Car, a10);
    return Car;
}
var Car = f9(Object);
function f30(a31) {
    function f32(a33) {
        var self = this;
        a31.call(self);
        function f39() {
            return a33;
        }
        const v40 = { enumerable: true, configurable: true, get: f39 };
        Object.defineProperties(self, { make: v40 });
        function f43() {
        }
        self.copy = f43;
        return self;
    }
    var SuperCar = f32;
    extend(SuperCar, a31);
    return SuperCar;
}
var SuperCar = f30(Car);
const v49 = new Car();
v49.make;
const v53 = new SuperCar("Bugatti");
v53.make;
const v57 = new SuperCar("Lambo");
v57.make;
const v61 = new SuperCar("Shelby");
v61.make;

FuzzIL program written to corpus/regress-merge-descriptors.fzil
