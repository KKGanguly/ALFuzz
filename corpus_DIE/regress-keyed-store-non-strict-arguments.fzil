v0 <- BeginPlainFunction -> v1
    v2 <- LoadArguments
    Return v2
EndPlainFunction
v3 <- LoadBoolean 'false'
v4 <- CallFunction v0, [v3]
v5 <- CreateNamedVariable 'a', 'var', v4
v6 <- BeginPlainFunction -> 
    Directive 'use strict'
    v7 <- LoadInteger '0'
    v8 <- LoadString 'const'
    v9 <- LoadInteger '0'
    v10 <- BinaryOperation v8, '+', v9
    SetComputedProperty v5, v10, v7
EndPlainFunction
v11 <- CallFunction v6, []
v12 <- BeginPlainFunction -> 
    Directive 'use strict'
    v13 <- LoadInteger '0'
    SetElement v5, '0', v13
EndPlainFunction
v14 <- CallFunction v12, []


function args(a1) {
    return arguments;
}
var a = args(false);
function f6() {
    'use strict';
    a["const" + 0] = 0;
}
f6();
function f12() {
    'use strict';
    a[0] = 0;
}
f12();

FuzzIL program written to corpus/regress-keyed-store-non-strict-arguments.fzil
