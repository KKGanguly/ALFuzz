v0 <- CreateNamedVariable 'Array', 'none'
v1 <- GetProperty v0, 'prototype'
v2 <- GetProperty v1, 'pop'
v3 <- CreateNamedVariable 'pop', 'var', v2
v4 <- BeginPlainFunction -> v5
    v6 <- GetProperty v5, 'length'
    v7 <- CallMethod v3, 'call', [v5]
    Return v7
EndPlainFunction
v8 <- LoadInteger '4'
v9 <- Construct v0, [v8]
v10 <- CreateNamedVariable 'a', 'var', v9
BeginObjectLiteral
v11 <- EndObjectLiteral
v12 <- CreateNamedVariable 'o', 'var', v11
v13 <- LoadInteger '0'
v14 <- BeginPlainFunction -> 
    v15 <- LoadInteger '1'
    Return v15
EndPlainFunction
v16 <- CallMethod v12, '__defineGetter__', [v13, v14]
v17 <- LoadUndefined
v18 <- CallFunction v4, [v10]
v19 <- LoadUndefined
v20 <- CallFunction v4, [v10]
v21 <- LoadUndefined
v22 <- CallFunction v4, [v10]
v23 <- GetProperty v0, 'prototype'
SetProperty v23, '__proto__', v12
v24 <- LoadInteger '1'
v25 <- CallFunction v4, [v10]


var pop = Array.prototype.pop;
function foo(a5) {
    a5.length;
    return pop.call(a5);
}
const v9 = new Array(4);
var a = v9;
var o = {};
function f14() {
    return 1;
}
o.__defineGetter__(0, f14);
foo(a);
foo(a);
foo(a);
const t11 = Array.prototype;
t11.__proto__ = o;
foo(a);

FuzzIL program written to corpus/inlined-array-pop-getter2.fzil
