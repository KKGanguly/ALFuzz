v0 <- BeginPlainFunction -> v1
    v2 <- BeginPlainFunction -> 
        Return v1
    EndPlainFunction
    Return v2
EndPlainFunction
BeginForLoopInitializer
    v3 <- LoadInteger '0'
BeginForLoopCondition -> v4
    v5 <- LoadInteger '10'
    v6 <- Compare v4, '<', v5
BeginForLoopAfterthought v6 -> v7
    v8 <- UnaryOperation v7, '++'
BeginForLoopBody -> v9
    v10 <- CallFunction v0, [v9]
    v11 <- CreateNamedVariable 'a', 'var', v10
    v12 <- CallFunction v11, []
EndForLoop


function f(a1) {
    function f2() {
        return a1;
    }
    return f2;
}
for (let i4 = 0; i4 < 10; i4++) {
    var a = f(i4);
    a();
}

FuzzIL program written to corpus/closure.fzil
