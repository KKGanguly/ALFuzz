v0 <- BeginPlainFunction -> v1
    v2 <- BeginPlainFunction -> 
        BeginTry
            v3 <- CallFunction v2, []
        BeginCatch -> v4
            v5 <- CallFunction v1, []
        EndTryCatch
    EndPlainFunction
    BeginTry
        v6 <- CallFunction v2, []
    BeginCatch -> v7
    EndTryCatch
EndPlainFunction
v8 <- BeginPlainFunction -> 
    v9 <- CreateNamedVariable 'a', 'none'
    v10 <- GetElement v9, '0'
    v11 <- CreateNamedVariable '__v_5', 'var', v10
EndPlainFunction
v12 <- BeginPlainFunction -> 
    v13 <- CallFunction v8, []
EndPlainFunction
v14 <- CallFunction v0, [v12]


function runNearStackLimit(a1) {
    function t() {
        try {
            t();
        } catch(e4) {
            a1();
        }
    }
    try {
        t();
    } catch(e7) {
    }
}
function __f_3() {
    var __v_5 = a[0];
}
function f12() {
    __f_3();
}
runNearStackLimit(f12);

FuzzIL program written to corpus/regress-446389.fzil
