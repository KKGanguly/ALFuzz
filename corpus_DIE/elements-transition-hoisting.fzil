v0 <- BeginPlainFunction -> 
    v1 <- BeginPlainFunction -> v2
        v3 <- CreateNamedVariable 'Object', 'none'
        v4 <- Construct v3, []
        v5 <- CreateNamedVariable 'object', 'var', v4
        v6 <- LoadInteger '0'
        SetElement v2, '0', v6
        v7 <- LoadInteger '3'
        v8 <- CreateNamedVariable 'count', 'var', v7
        BeginDoWhileLoopBody
            SetElement v2, '0', v5
        BeginDoWhileLoopHeader
            v9 <- UnaryOperation '--', v8
            v10 <- LoadInteger '0'
            v11 <- Compare v9, '>', v10
        EndDoWhileLoop v11
    EndPlainFunction
    v12 <- CreateNamedVariable 'Array', 'none'
    v13 <- LoadInteger '5'
    v14 <- Construct v12, [v13]
    v15 <- CallFunction v1, [v14]
    v16 <- LoadInteger '5'
    v17 <- Construct v12, [v16]
    v18 <- CallFunction v1, [v17]
    v19 <- LoadInteger '5'
    v20 <- Construct v12, [v19]
    v21 <- CallFunction v1, [v20]
    v22 <- LoadInteger '5'
    v23 <- Construct v12, [v22]
    v24 <- CallFunction v1, [v23]
    v25 <- CallFunction v1, []
    v26 <- BeginPlainFunction -> v27
        v28 <- CreateNamedVariable 'Object', 'none'
        v29 <- Construct v28, []
        v30 <- CreateNamedVariable 'object', 'var', v29
        BeginObjectLiteral
        v31 <- EndObjectLiteral
        SetProperty v27, 'foo', v31
        v32 <- LoadInteger '0'
        SetElement v27, '0', v32
        v33 <- LoadInteger '1'
        SetElement v27, '1', v33
        v34 <- LoadInteger '3'
        v35 <- CreateNamedVariable 'count', 'var', v34
        BeginDoWhileLoopBody
            SetProperty v27, 'foo', v30
            SetElement v27, '1', v30
            v36 <- GetProperty v27, 'foo'
            v37 <- Compare v36, '==', v30
            v38 <- GetElement v27, '1'
            v39 <- Compare v38, '==', v30
            v40 <- BinaryOperation v37, '&&', v39
            v41 <- CreateNamedVariable 'result', 'none'
            Reassign v41, v40
        BeginDoWhileLoopHeader
            v42 <- UnaryOperation '--', v35
            v43 <- LoadInteger '0'
            v44 <- Compare v42, '>', v43
        EndDoWhileLoop v44
    EndPlainFunction
    v45 <- LoadInteger '5'
    v46 <- Construct v12, [v45]
    v47 <- CallFunction v26, [v46]
    v48 <- LoadInteger '5'
    v49 <- Construct v12, [v48]
    v50 <- CallFunction v26, [v49]
    v51 <- LoadInteger '5'
    v52 <- Construct v12, [v51]
    v53 <- CallFunction v26, [v52]
    v54 <- LoadInteger '5'
    v55 <- Construct v12, [v54]
    v56 <- CallFunction v26, [v55]
    v57 <- CallFunction v26, []
    v58 <- BeginPlainFunction -> v59
        v60 <- CreateNamedVariable 'Object', 'none'
        v61 <- Construct v60, []
        v62 <- CreateNamedVariable 'object', 'var', v61
        v63 <- LoadInteger '0'
        SetProperty v59, 'foo', v63
        v64 <- LoadInteger '0'
        SetElement v59, '0', v64
        v65 <- LoadInteger '1'
        SetElement v59, '1', v65
        v66 <- LoadInteger '3'
        v67 <- CreateNamedVariable 'count', 'var', v66
        BeginDoWhileLoopBody
            v68 <- GetProperty v59, 'bar'
            v69 <- LoadUndefined
            v70 <- Compare v68, '===', v69
            BeginIf v70
                v71 <- LoadFloat '2.5'
                SetElement v59, '1', v71
            EndIf
            SetProperty v59, 'foo', v62
        BeginDoWhileLoopHeader
            v72 <- UnaryOperation '--', v67
            v73 <- LoadInteger '0'
            v74 <- Compare v72, '>', v73
        EndDoWhileLoop v74
    EndPlainFunction
    v75 <- LoadInteger '5'
    v76 <- Construct v12, [v75]
    v77 <- CallFunction v58, [v76]
    v78 <- LoadInteger '5'
    v79 <- Construct v12, [v78]
    v80 <- CallFunction v58, [v79]
    v81 <- LoadInteger '5'
    v82 <- Construct v12, [v81]
    v83 <- CallFunction v58, [v82]
    v84 <- LoadInteger '5'
    v85 <- Construct v12, [v84]
    v86 <- CallFunction v58, [v85]
    v87 <- BeginPlainFunction -> v88
        v89 <- CreateNamedVariable 'Object', 'none'
        v90 <- Construct v89, []
        v91 <- CreateNamedVariable 'object', 'var', v90
        v92 <- LoadNull
        SetProperty v88, 'foo', v92
        v93 <- LoadInteger '0'
        SetElement v88, '0', v93
        v94 <- LoadInteger '1'
        SetElement v88, '1', v94
        v95 <- LoadInteger '3'
        v96 <- CreateNamedVariable 'count', 'var', v95
        BeginDoWhileLoopBody
            v97 <- LoadFloat '2.5'
            SetElement v88, '1', v97
            SetProperty v88, 'foo', v91
        BeginDoWhileLoopHeader
            v98 <- UnaryOperation '--', v96
            v99 <- LoadInteger '0'
            v100 <- Compare v98, '>', v99
        EndDoWhileLoop v100
    EndPlainFunction
    v101 <- LoadInteger '5'
    v102 <- Construct v12, [v101]
    v103 <- CreateNamedVariable 'add_transition', 'var', v102
    v104 <- LoadInteger '0'
    SetProperty v103, 'foo', v104
    v105 <- CreateNamedVariable 'Object', 'none'
    v106 <- Construct v105, []
    SetElement v103, '0', v106
    v107 <- LoadInteger '5'
    v108 <- Construct v12, [v107]
    v109 <- CallFunction v87, [v108]
    v110 <- LoadInteger '5'
    v111 <- Construct v12, [v110]
    v112 <- CallFunction v87, [v111]
    v113 <- LoadInteger '5'
    v114 <- Construct v12, [v113]
    v115 <- CallFunction v87, [v114]
    v116 <- LoadInteger '5'
    v117 <- Construct v12, [v116]
    v118 <- CallFunction v87, [v117]
    v119 <- CallFunction v87, []
    v120 <- BeginPlainFunction -> v121
        v122 <- Construct v105, []
        v123 <- CreateNamedVariable 'object', 'var', v122
        v124 <- LoadInteger '0'
        SetElement v121, '0', v124
        v125 <- LoadInteger '3'
        v126 <- CreateNamedVariable 'count', 'var', v125
        BeginDoWhileLoopBody
            v127 <- GetProperty v121, 'baz'
            v128 <- LoadBoolean 'true'
            v129 <- Compare v127, '!=', v128
            BeginIf v129
                v130 <- LoadFloat '2.5'
                SetElement v121, '1', v130
            EndIf
            SetElement v121, '0', v123
        BeginDoWhileLoopHeader
            v131 <- UnaryOperation '--', v126
            v132 <- LoadInteger '3'
            v133 <- Compare v131, '>', v132
        EndDoWhileLoop v133
    EndPlainFunction
    v134 <- BeginPlainFunction -> v135
        v136 <- Construct v105, []
        v137 <- CreateNamedVariable 'object', 'var', v136
        v138 <- LoadInteger '0'
        SetElement v135, '0', v138
        v139 <- LoadInteger '3'
        v140 <- CreateNamedVariable 'count', 'var', v139
        BeginDoWhileLoopBody
            v141 <- LoadBoolean 'true'
            SetElement v135, '0', v137
        BeginDoWhileLoopHeader
            v142 <- UnaryOperation '--', v140
            v143 <- LoadInteger '3'
            v144 <- Compare v142, '>', v143
        EndDoWhileLoop v144
    EndPlainFunction
    v145 <- LoadInteger '5'
    v146 <- Construct v12, [v145]
    v147 <- CallFunction v134, [v146]
    v148 <- LoadInteger '5'
    v149 <- Construct v12, [v148]
    v150 <- CallFunction v134, [v149]
    v151 <- LoadInteger '5'
    v152 <- Construct v12, [v151]
    v153 <- CallFunction v134, [v152]
    v154 <- LoadInteger '5'
    v155 <- Construct v12, [v154]
    v156 <- CallFunction v134, [v155]
    v157 <- CallFunction v134, []
    v158 <- BeginPlainFunction -> v159, v160, v161, v162, v163, v164
        v165 <- LoadInteger '3'
        v166 <- CreateNamedVariable 'count', 'var', v165
        BeginDoWhileLoopBody
            v167 <- LoadBoolean 'true'
            SetElement v159, '0', v160
            SetElement v159, '1', v161
            SetElement v159, '2', v162
            v168 <- LoadBoolean 'true'
            SetElement v159, '3', v163
            SetElement v159, '4', v164
        BeginDoWhileLoopHeader
            v169 <- UnaryOperation '--', v166
            v170 <- LoadInteger '3'
            v171 <- Compare v169, '>', v170
        EndDoWhileLoop v171
    EndPlainFunction
    v172 <- LoadInteger '0'
    v173 <- LoadInteger '0'
    v174 <- LoadInteger '0'
    v175 <- LoadInteger '0'
    v176 <- LoadInteger '0'
    v177 <- Construct v12, [v172, v173, v174, v175, v176]
    v178 <- LoadInteger '0'
    v179 <- LoadInteger '0'
    v180 <- LoadInteger '0'
    v181 <- LoadInteger '0'
    v182 <- LoadFloat '0.5'
    v183 <- CallFunction v158, [v177, v178, v179, v180, v181, v182]
    v184 <- LoadInteger '0'
    v185 <- LoadInteger '0'
    v186 <- LoadInteger '0'
    v187 <- LoadInteger '0'
    v188 <- LoadInteger '0'
    v189 <- Construct v12, [v184, v185, v186, v187, v188]
    v190 <- LoadInteger '0'
    v191 <- LoadInteger '0'
    v192 <- LoadInteger '0'
    v193 <- LoadFloat '0.5'
    v194 <- LoadInteger '0'
    v195 <- CallFunction v158, [v189, v190, v191, v192, v193, v194]
    v196 <- LoadInteger '0'
    v197 <- LoadInteger '0'
    v198 <- LoadInteger '0'
    v199 <- LoadInteger '0'
    v200 <- LoadInteger '0'
    v201 <- Construct v12, [v196, v197, v198, v199, v200]
    v202 <- LoadInteger '0'
    v203 <- LoadInteger '0'
    v204 <- LoadFloat '0.5'
    v205 <- LoadInteger '0'
    v206 <- LoadInteger '0'
    v207 <- CallFunction v158, [v201, v202, v203, v204, v205, v206]
    v208 <- LoadInteger '0'
    v209 <- LoadInteger '0'
    v210 <- LoadInteger '0'
    v211 <- LoadInteger '0'
    v212 <- LoadInteger '0'
    v213 <- Construct v12, [v208, v209, v210, v211, v212]
    v214 <- LoadInteger '0'
    v215 <- LoadFloat '0.5'
    v216 <- LoadInteger '0'
    v217 <- LoadInteger '0'
    v218 <- LoadInteger '0'
    v219 <- CallFunction v158, [v213, v214, v215, v216, v217, v218]
    v220 <- LoadInteger '0'
    v221 <- LoadInteger '0'
    v222 <- LoadInteger '0'
    v223 <- LoadInteger '0'
    v224 <- LoadInteger '0'
    v225 <- Construct v12, [v220, v221, v222, v223, v224]
    v226 <- LoadFloat '0.5'
    v227 <- LoadInteger '0'
    v228 <- LoadInteger '0'
    v229 <- LoadInteger '0'
    v230 <- LoadInteger '0'
    v231 <- CallFunction v158, [v225, v226, v227, v228, v229, v230]
    v232 <- LoadFloat '0.1'
    v233 <- LoadFloat '0.1'
    v234 <- LoadFloat '0.1'
    v235 <- LoadFloat '0.1'
    v236 <- LoadFloat '0.1'
    v237 <- Construct v12, [v232, v233, v234, v235, v236]
    v238 <- LoadInteger '0'
    v239 <- LoadInteger '0'
    v240 <- LoadInteger '0'
    v241 <- LoadInteger '0'
    v242 <- LoadFloat '0.5'
    v243 <- CallFunction v158, [v237, v238, v239, v240, v241, v242]
    v244 <- LoadFloat '0.1'
    v245 <- LoadFloat '0.1'
    v246 <- LoadFloat '0.1'
    v247 <- LoadFloat '0.1'
    v248 <- LoadFloat '0.1'
    v249 <- Construct v12, [v244, v245, v246, v247, v248]
    v250 <- LoadInteger '0'
    v251 <- LoadInteger '0'
    v252 <- LoadInteger '0'
    v253 <- LoadFloat '0.5'
    v254 <- LoadInteger '0'
    v255 <- CallFunction v158, [v249, v250, v251, v252, v253, v254]
    v256 <- LoadFloat '0.1'
    v257 <- LoadFloat '0.1'
    v258 <- LoadFloat '0.1'
    v259 <- LoadFloat '0.1'
    v260 <- LoadFloat '0.1'
    v261 <- Construct v12, [v256, v257, v258, v259, v260]
    v262 <- LoadInteger '0'
    v263 <- LoadInteger '0'
    v264 <- LoadFloat '0.5'
    v265 <- LoadInteger '0'
    v266 <- LoadInteger '0'
    v267 <- CallFunction v158, [v261, v262, v263, v264, v265, v266]
    v268 <- LoadFloat '0.1'
    v269 <- LoadFloat '0.1'
    v270 <- LoadFloat '0.1'
    v271 <- LoadFloat '0.1'
    v272 <- LoadFloat '0.1'
    v273 <- Construct v12, [v268, v269, v270, v271, v272]
    v274 <- LoadInteger '0'
    v275 <- LoadFloat '0.5'
    v276 <- LoadInteger '0'
    v277 <- LoadInteger '0'
    v278 <- LoadInteger '0'
    v279 <- CallFunction v158, [v273, v274, v275, v276, v277, v278]
    v280 <- LoadFloat '0.1'
    v281 <- LoadFloat '0.1'
    v282 <- LoadFloat '0.1'
    v283 <- LoadFloat '0.1'
    v284 <- LoadFloat '0.1'
    v285 <- Construct v12, [v280, v281, v282, v283, v284]
    v286 <- LoadFloat '0.5'
    v287 <- LoadInteger '0'
    v288 <- LoadInteger '0'
    v289 <- LoadInteger '0'
    v290 <- LoadInteger '0'
    v291 <- CallFunction v158, [v285, v286, v287, v288, v289, v290]
    v292 <- LoadInteger '5'
    v293 <- Construct v12, [v292]
    v294 <- LoadFloat '0.5'
    v295 <- LoadInteger '0'
    v296 <- LoadInteger '0'
    v297 <- LoadInteger '0'
    v298 <- LoadInteger '0'
    v299 <- CallFunction v158, [v293, v294, v295, v296, v297, v298]
    v300 <- LoadInteger '5'
    v301 <- Construct v12, [v300]
    v302 <- LoadInteger '0'
    v303 <- LoadFloat '0.5'
    v304 <- LoadInteger '0'
    v305 <- LoadInteger '0'
    v306 <- LoadInteger '0'
    v307 <- CallFunction v158, [v301, v302, v303, v304, v305, v306]
    v308 <- LoadInteger '5'
    v309 <- Construct v12, [v308]
    v310 <- LoadInteger '0'
    v311 <- LoadInteger '0'
    v312 <- LoadFloat '0.5'
    v313 <- LoadInteger '0'
    v314 <- LoadInteger '0'
    v315 <- CallFunction v158, [v309, v310, v311, v312, v313, v314]
    v316 <- LoadInteger '5'
    v317 <- Construct v12, [v316]
    v318 <- LoadInteger '0'
    v319 <- LoadInteger '0'
    v320 <- LoadInteger '0'
    v321 <- LoadFloat '0.5'
    v322 <- LoadInteger '0'
    v323 <- CallFunction v158, [v317, v318, v319, v320, v321, v322]
    v324 <- LoadInteger '5'
    v325 <- Construct v12, [v324]
    v326 <- LoadInteger '0'
    v327 <- LoadInteger '0'
    v328 <- LoadInteger '0'
    v329 <- LoadInteger '0'
    v330 <- LoadFloat '0.5'
    v331 <- CallFunction v158, [v325, v326, v327, v328, v329, v330]
    v332 <- LoadInteger '5'
    v333 <- Construct v12, [v332]
    v334 <- LoadFloat '0.5'
    v335 <- LoadInteger '0'
    v336 <- LoadInteger '0'
    v337 <- LoadInteger '0'
    v338 <- LoadInteger '0'
    v339 <- CallFunction v158, [v333, v334, v335, v336, v337, v338]
    v340 <- LoadInteger '5'
    v341 <- Construct v12, [v340]
    v342 <- LoadInteger '0'
    v343 <- LoadFloat '0.5'
    v344 <- LoadInteger '0'
    v345 <- LoadInteger '0'
    v346 <- LoadInteger '0'
    v347 <- CallFunction v158, [v341, v342, v343, v344, v345, v346]
    v348 <- LoadInteger '5'
    v349 <- Construct v12, [v348]
    v350 <- LoadInteger '0'
    v351 <- LoadInteger '0'
    v352 <- LoadFloat '0.5'
    v353 <- LoadInteger '0'
    v354 <- LoadInteger '0'
    v355 <- CallFunction v158, [v349, v350, v351, v352, v353, v354]
    v356 <- LoadInteger '5'
    v357 <- Construct v12, [v356]
    v358 <- LoadInteger '0'
    v359 <- LoadInteger '0'
    v360 <- LoadInteger '0'
    v361 <- LoadFloat '0.5'
    v362 <- LoadInteger '0'
    v363 <- CallFunction v158, [v357, v358, v359, v360, v361, v362]
    v364 <- LoadInteger '5'
    v365 <- Construct v12, [v364]
    v366 <- LoadInteger '0'
    v367 <- LoadInteger '0'
    v368 <- LoadInteger '0'
    v369 <- LoadInteger '0'
    v370 <- LoadFloat '0.5'
    v371 <- CallFunction v158, [v365, v366, v367, v368, v369, v370]
    v372 <- LoadInteger '5'
    v373 <- Construct v12, [v372]
    v374 <- LoadInteger '0'
    v375 <- LoadInteger '0'
    v376 <- LoadInteger '0'
    v377 <- LoadInteger '0'
    v378 <- LoadInteger '0'
    v379 <- CallFunction v158, [v373, v374, v375, v376, v377, v378]
    v380 <- LoadInteger '5'
    v381 <- Construct v12, [v380]
    v382 <- LoadInteger '0'
    v383 <- LoadInteger '0'
    v384 <- LoadInteger '0'
    v385 <- LoadInteger '0'
    v386 <- LoadInteger '0'
    v387 <- CallFunction v158, [v381, v382, v383, v384, v385, v386]
    v388 <- CallFunction v158, []
EndPlainFunction
v389 <- CallFunction v0, []


function test_wrapper() {
    function testDoubleConversion4(a2) {
        const v4 = new Object();
        var object = v4;
        a2[0] = 0;
        var count = 3;
        do {
            a2[0] = object;
        } while (--count > 0)
    }
    const v14 = new Array(5);
    testDoubleConversion4(v14);
    const v17 = new Array(5);
    testDoubleConversion4(v17);
    const v20 = new Array(5);
    testDoubleConversion4(v20);
    const v23 = new Array(5);
    testDoubleConversion4(v23);
    testDoubleConversion4();
    function testExactMapHoisting(a27) {
        const v29 = new Object();
        var object = v29;
        a27.foo = {};
        a27[0] = 0;
        a27[1] = 1;
        var count = 3;
        do {
            a27.foo = object;
            a27[1] = object;
            result = (a27.foo == object) && (a27[1] == object);
        } while (--count > 0)
    }
    const v46 = new Array(5);
    testExactMapHoisting(v46);
    const v49 = new Array(5);
    testExactMapHoisting(v49);
    const v52 = new Array(5);
    testExactMapHoisting(v52);
    const v55 = new Array(5);
    testExactMapHoisting(v55);
    testExactMapHoisting();
    function testExactMapHoisting2(a59) {
        const v61 = new Object();
        var object = v61;
        a59.foo = 0;
        a59[0] = 0;
        a59[1] = 1;
        var count = 3;
        do {
            if (a59.bar === undefined) {
                a59[1] = 2.5;
            }
            a59.foo = object;
        } while (--count > 0)
    }
    const v76 = new Array(5);
    testExactMapHoisting2(v76);
    const v79 = new Array(5);
    testExactMapHoisting2(v79);
    const v82 = new Array(5);
    testExactMapHoisting2(v82);
    const v85 = new Array(5);
    testExactMapHoisting2(v85);
    function testExactMapHoisting3(a88) {
        const v90 = new Object();
        var object = v90;
        a88.foo = null;
        a88[0] = 0;
        a88[1] = 1;
        var count = 3;
        do {
            a88[1] = 2.5;
            a88.foo = object;
        } while (--count > 0)
    }
    const v102 = new Array(5);
    var add_transition = v102;
    add_transition.foo = 0;
    const v106 = new Object();
    add_transition[0] = v106;
    const v108 = new Array(5);
    testExactMapHoisting3(v108);
    const v111 = new Array(5);
    testExactMapHoisting3(v111);
    const v114 = new Array(5);
    testExactMapHoisting3(v114);
    const v117 = new Array(5);
    testExactMapHoisting3(v117);
    testExactMapHoisting3();
    function testDominatingTransitionHoisting1(a121) {
        const v122 = new Object();
        var object = v122;
        a121[0] = 0;
        var count = 3;
        do {
            if (a121.baz != true) {
                a121[1] = 2.5;
            }
            a121[0] = object;
        } while (--count > 3)
    }
    function testHoistingWithSideEffect(a135) {
        const v136 = new Object();
        var object = v136;
        a135[0] = 0;
        var count = 3;
        do {
            a135[0] = object;
        } while (--count > 3)
    }
    const v146 = new Array(5);
    testHoistingWithSideEffect(v146);
    const v149 = new Array(5);
    testHoistingWithSideEffect(v149);
    const v152 = new Array(5);
    testHoistingWithSideEffect(v152);
    const v155 = new Array(5);
    testHoistingWithSideEffect(v155);
    testHoistingWithSideEffect();
    function testStraightLineDupeElinination(a159, a160, a161, a162, a163, a164) {
        var count = 3;
        do {
            a159[0] = a160;
            a159[1] = a161;
            a159[2] = a162;
            a159[3] = a163;
            a159[4] = a164;
        } while (--count > 3)
    }
    const v177 = new Array(0, 0, 0, 0, 0);
    testStraightLineDupeElinination(v177, 0, 0, 0, 0, 0.5);
    const v189 = new Array(0, 0, 0, 0, 0);
    testStraightLineDupeElinination(v189, 0, 0, 0, 0.5, 0);
    const v201 = new Array(0, 0, 0, 0, 0);
    testStraightLineDupeElinination(v201, 0, 0, 0.5, 0, 0);
    const v213 = new Array(0, 0, 0, 0, 0);
    testStraightLineDupeElinination(v213, 0, 0.5, 0, 0, 0);
    const v225 = new Array(0, 0, 0, 0, 0);
    testStraightLineDupeElinination(v225, 0.5, 0, 0, 0, 0);
    const v237 = new Array(0.1, 0.1, 0.1, 0.1, 0.1);
    testStraightLineDupeElinination(v237, 0, 0, 0, 0, 0.5);
    const v249 = new Array(0.1, 0.1, 0.1, 0.1, 0.1);
    testStraightLineDupeElinination(v249, 0, 0, 0, 0.5, 0);
    const v261 = new Array(0.1, 0.1, 0.1, 0.1, 0.1);
    testStraightLineDupeElinination(v261, 0, 0, 0.5, 0, 0);
    const v273 = new Array(0.1, 0.1, 0.1, 0.1, 0.1);
    testStraightLineDupeElinination(v273, 0, 0.5, 0, 0, 0);
    const v285 = new Array(0.1, 0.1, 0.1, 0.1, 0.1);
    testStraightLineDupeElinination(v285, 0.5, 0, 0, 0, 0);
    const v293 = new Array(5);
    testStraightLineDupeElinination(v293, 0.5, 0, 0, 0, 0);
    const v301 = new Array(5);
    testStraightLineDupeElinination(v301, 0, 0.5, 0, 0, 0);
    const v309 = new Array(5);
    testStraightLineDupeElinination(v309, 0, 0, 0.5, 0, 0);
    const v317 = new Array(5);
    testStraightLineDupeElinination(v317, 0, 0, 0, 0.5, 0);
    const v325 = new Array(5);
    testStraightLineDupeElinination(v325, 0, 0, 0, 0, 0.5);
    const v333 = new Array(5);
    testStraightLineDupeElinination(v333, 0.5, 0, 0, 0, 0);
    const v341 = new Array(5);
    testStraightLineDupeElinination(v341, 0, 0.5, 0, 0, 0);
    const v349 = new Array(5);
    testStraightLineDupeElinination(v349, 0, 0, 0.5, 0, 0);
    const v357 = new Array(5);
    testStraightLineDupeElinination(v357, 0, 0, 0, 0.5, 0);
    const v365 = new Array(5);
    testStraightLineDupeElinination(v365, 0, 0, 0, 0, 0.5);
    const v373 = new Array(5);
    testStraightLineDupeElinination(v373, 0, 0, 0, 0, 0);
    const v381 = new Array(5);
    testStraightLineDupeElinination(v381, 0, 0, 0, 0, 0);
    testStraightLineDupeElinination();
}
test_wrapper();

FuzzIL program written to corpus/elements-transition-hoisting.fzil
