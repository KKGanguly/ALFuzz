v0 <- BeginArrowFunction -> 
    v1 <- BeginPlainFunction -> v2
        v3 <- LoadInteger '1'
        v4 <- CallMethod v2, 'charAt', [v3]
        v5 <- LoadString ''
        v6 <- Compare v4, '==', v5
        Return v6
    EndPlainFunction
    v7 <- LoadBoolean 'false'
    v8 <- LoadString 'aaa'
    v9 <- CallFunction v1, [v8]
    v10 <- LoadBoolean 'false'
    v11 <- LoadString 'aaa'
    v12 <- CallFunction v1, [v11]
EndArrowFunction
v13 <- CallFunction v0, []
v14 <- BeginArrowFunction -> 
    v15 <- BeginPlainFunction -> v16
        v17 <- LoadInteger '1'
        v18 <- CallMethod v16, 'charAt', [v17]
        v19 <- LoadString ''
        v20 <- Compare v18, '<', v19
        Return v20
    EndPlainFunction
    v21 <- LoadBoolean 'false'
    v22 <- LoadString 'aaa'
    v23 <- CallFunction v15, [v22]
    v24 <- LoadBoolean 'false'
    v25 <- LoadString 'aaa'
    v26 <- CallFunction v15, [v25]
EndArrowFunction
v27 <- CallFunction v14, []
v28 <- BeginArrowFunction -> 
    v29 <- BeginPlainFunction -> v30
        v31 <- LoadInteger '1'
        v32 <- CallMethod v30, 'charAt', [v31]
        v33 <- LoadString ''
        v34 <- Compare v32, '<=', v33
        Return v34
    EndPlainFunction
    v35 <- LoadBoolean 'false'
    v36 <- LoadString 'aaa'
    v37 <- CallFunction v29, [v36]
    v38 <- LoadBoolean 'false'
    v39 <- LoadString 'aaa'
    v40 <- CallFunction v29, [v39]
EndArrowFunction
v41 <- CallFunction v28, []
v42 <- BeginArrowFunction -> 
    v43 <- BeginPlainFunction -> v44
        v45 <- LoadInteger '1'
        v46 <- CallMethod v44, 'charAt', [v45]
        v47 <- LoadString ''
        v48 <- Compare v46, '>', v47
        Return v48
    EndPlainFunction
    v49 <- LoadBoolean 'true'
    v50 <- LoadString 'aaa'
    v51 <- CallFunction v43, [v50]
    v52 <- LoadBoolean 'true'
    v53 <- LoadString 'aaa'
    v54 <- CallFunction v43, [v53]
EndArrowFunction
v55 <- CallFunction v42, []
v56 <- BeginArrowFunction -> 
    v57 <- BeginPlainFunction -> v58
        v59 <- LoadInteger '1'
        v60 <- CallMethod v58, 'charAt', [v59]
        v61 <- LoadString ''
        v62 <- Compare v60, '>=', v61
        Return v62
    EndPlainFunction
    v63 <- LoadBoolean 'true'
    v64 <- LoadString 'aaa'
    v65 <- CallFunction v57, [v64]
    v66 <- LoadBoolean 'true'
    v67 <- LoadString 'aaa'
    v68 <- CallFunction v57, [v67]
EndArrowFunction
v69 <- CallFunction v56, []
v70 <- BeginArrowFunction -> 
    v71 <- BeginPlainFunction -> v72
        v73 <- LoadInteger '1'
        v74 <- CallMethod v72, 'charAt', [v73]
        v75 <- LoadInteger '2'
        v76 <- CallMethod v72, 'charAt', [v75]
        v77 <- Compare v74, '==', v76
        Return v77
    EndPlainFunction
    v78 <- LoadBoolean 'false'
    v79 <- LoadString 'aab'
    v80 <- CallFunction v71, [v79]
    v81 <- LoadBoolean 'true'
    v82 <- LoadString 'aaa'
    v83 <- CallFunction v71, [v82]
    v84 <- LoadBoolean 'false'
    v85 <- LoadString 'acb'
    v86 <- CallFunction v71, [v85]
    v87 <- LoadBoolean 'false'
    v88 <- LoadString 'aab'
    v89 <- CallFunction v71, [v88]
    v90 <- LoadBoolean 'true'
    v91 <- LoadString 'aaa'
    v92 <- CallFunction v71, [v91]
    v93 <- LoadBoolean 'false'
    v94 <- LoadString 'acb'
    v95 <- CallFunction v71, [v94]
EndArrowFunction
v96 <- CallFunction v70, []
v97 <- BeginArrowFunction -> 
    v98 <- BeginPlainFunction -> v99
        v100 <- LoadInteger '1'
        v101 <- CallMethod v99, 'charAt', [v100]
        v102 <- LoadInteger '2'
        v103 <- CallMethod v99, 'charAt', [v102]
        v104 <- Compare v101, '<', v103
        Return v104
    EndPlainFunction
    v105 <- LoadBoolean 'true'
    v106 <- LoadString 'aab'
    v107 <- CallFunction v98, [v106]
    v108 <- LoadBoolean 'false'
    v109 <- LoadString 'aaa'
    v110 <- CallFunction v98, [v109]
    v111 <- LoadBoolean 'false'
    v112 <- LoadString 'acb'
    v113 <- CallFunction v98, [v112]
    v114 <- LoadBoolean 'true'
    v115 <- LoadString 'aab'
    v116 <- CallFunction v98, [v115]
    v117 <- LoadBoolean 'false'
    v118 <- LoadString 'aaa'
    v119 <- CallFunction v98, [v118]
    v120 <- LoadBoolean 'false'
    v121 <- LoadString 'acb'
    v122 <- CallFunction v98, [v121]
EndArrowFunction
v123 <- CallFunction v97, []
v124 <- BeginArrowFunction -> 
    v125 <- BeginPlainFunction -> v126
        v127 <- LoadInteger '1'
        v128 <- CallMethod v126, 'charAt', [v127]
        v129 <- LoadInteger '2'
        v130 <- CallMethod v126, 'charAt', [v129]
        v131 <- Compare v128, '<=', v130
        Return v131
    EndPlainFunction
    v132 <- LoadBoolean 'true'
    v133 <- LoadString 'aab'
    v134 <- CallFunction v125, [v133]
    v135 <- LoadBoolean 'true'
    v136 <- LoadString 'aaa'
    v137 <- CallFunction v125, [v136]
    v138 <- LoadBoolean 'false'
    v139 <- LoadString 'acb'
    v140 <- CallFunction v125, [v139]
    v141 <- LoadBoolean 'true'
    v142 <- LoadString 'aab'
    v143 <- CallFunction v125, [v142]
    v144 <- LoadBoolean 'true'
    v145 <- LoadString 'aaa'
    v146 <- CallFunction v125, [v145]
    v147 <- LoadBoolean 'false'
    v148 <- LoadString 'acb'
    v149 <- CallFunction v125, [v148]
EndArrowFunction
v150 <- CallFunction v124, []
v151 <- BeginArrowFunction -> 
    v152 <- BeginPlainFunction -> v153
        v154 <- LoadInteger '1'
        v155 <- CallMethod v153, 'charAt', [v154]
        v156 <- LoadInteger '2'
        v157 <- CallMethod v153, 'charAt', [v156]
        v158 <- Compare v155, '>', v157
        Return v158
    EndPlainFunction
    v159 <- LoadBoolean 'false'
    v160 <- LoadString 'aab'
    v161 <- CallFunction v152, [v160]
    v162 <- LoadBoolean 'false'
    v163 <- LoadString 'aaa'
    v164 <- CallFunction v152, [v163]
    v165 <- LoadBoolean 'true'
    v166 <- LoadString 'acb'
    v167 <- CallFunction v152, [v166]
    v168 <- LoadBoolean 'false'
    v169 <- LoadString 'aab'
    v170 <- CallFunction v152, [v169]
    v171 <- LoadBoolean 'false'
    v172 <- LoadString 'aaa'
    v173 <- CallFunction v152, [v172]
    v174 <- LoadBoolean 'true'
    v175 <- LoadString 'acb'
    v176 <- CallFunction v152, [v175]
EndArrowFunction
v177 <- CallFunction v151, []
v178 <- BeginArrowFunction -> 
    v179 <- BeginPlainFunction -> v180
        v181 <- LoadInteger '1'
        v182 <- CallMethod v180, 'charAt', [v181]
        v183 <- LoadInteger '2'
        v184 <- CallMethod v180, 'charAt', [v183]
        v185 <- Compare v182, '>=', v184
        Return v185
    EndPlainFunction
    v186 <- LoadBoolean 'false'
    v187 <- LoadString 'aab'
    v188 <- CallFunction v179, [v187]
    v189 <- LoadBoolean 'true'
    v190 <- LoadString 'aaa'
    v191 <- CallFunction v179, [v190]
    v192 <- LoadBoolean 'true'
    v193 <- LoadString 'acb'
    v194 <- CallFunction v179, [v193]
    v195 <- LoadBoolean 'false'
    v196 <- LoadString 'aab'
    v197 <- CallFunction v179, [v196]
    v198 <- LoadBoolean 'true'
    v199 <- LoadString 'aaa'
    v200 <- CallFunction v179, [v199]
    v201 <- LoadBoolean 'true'
    v202 <- LoadString 'acb'
    v203 <- CallFunction v179, [v202]
EndArrowFunction
v204 <- CallFunction v178, []
v205 <- BeginArrowFunction -> 
    v206 <- BeginPlainFunction -> v207
        v208 <- LoadInteger '1'
        v209 <- CallMethod v207, 'charAt', [v208]
        v210 <- LoadString 'b'
        v211 <- Compare v209, '==', v210
        Return v211
    EndPlainFunction
    v212 <- LoadBoolean 'false'
    v213 <- LoadString 'aaa'
    v214 <- CallFunction v206, [v213]
    v215 <- LoadBoolean 'true'
    v216 <- LoadString 'bbb'
    v217 <- CallFunction v206, [v216]
    v218 <- LoadBoolean 'false'
    v219 <- LoadString 'ccc'
    v220 <- CallFunction v206, [v219]
    v221 <- LoadBoolean 'false'
    v222 <- LoadString 'aaa'
    v223 <- CallFunction v206, [v222]
    v224 <- LoadBoolean 'true'
    v225 <- LoadString 'bbb'
    v226 <- CallFunction v206, [v225]
    v227 <- LoadBoolean 'false'
    v228 <- LoadString 'ccc'
    v229 <- CallFunction v206, [v228]
EndArrowFunction
v230 <- CallFunction v205, []
v231 <- BeginArrowFunction -> 
    v232 <- BeginPlainFunction -> v233
        v234 <- LoadInteger '1'
        v235 <- CallMethod v233, 'charAt', [v234]
        v236 <- LoadString 'bb'
        v237 <- Compare v235, '==', v236
        Return v237
    EndPlainFunction
    v238 <- LoadBoolean 'false'
    v239 <- LoadString 'aaa'
    v240 <- CallFunction v232, [v239]
    v241 <- LoadBoolean 'false'
    v242 <- LoadString 'aaa'
    v243 <- CallFunction v232, [v242]
EndArrowFunction
v244 <- CallFunction v231, []
v245 <- BeginArrowFunction -> 
    v246 <- BeginPlainFunction -> v247
        v248 <- LoadInteger '1'
        v249 <- CallMethod v247, 'charAt', [v248]
        v250 <- LoadString 'b'
        v251 <- Compare v249, '<', v250
        Return v251
    EndPlainFunction
    v252 <- LoadBoolean 'true'
    v253 <- LoadString 'aaa'
    v254 <- CallFunction v246, [v253]
    v255 <- LoadBoolean 'false'
    v256 <- LoadString 'bbb'
    v257 <- CallFunction v246, [v256]
    v258 <- LoadBoolean 'false'
    v259 <- LoadString 'ccc'
    v260 <- CallFunction v246, [v259]
    v261 <- LoadBoolean 'true'
    v262 <- LoadString 'aaa'
    v263 <- CallFunction v246, [v262]
    v264 <- LoadBoolean 'false'
    v265 <- LoadString 'bbb'
    v266 <- CallFunction v246, [v265]
    v267 <- LoadBoolean 'false'
    v268 <- LoadString 'ccc'
    v269 <- CallFunction v246, [v268]
EndArrowFunction
v270 <- CallFunction v245, []
v271 <- BeginArrowFunction -> 
    v272 <- BeginPlainFunction -> v273
        v274 <- LoadInteger '1'
        v275 <- CallMethod v273, 'charAt', [v274]
        v276 <- LoadString 'bb'
        v277 <- Compare v275, '<', v276
        Return v277
    EndPlainFunction
    v278 <- LoadBoolean 'true'
    v279 <- LoadString 'aaa'
    v280 <- CallFunction v272, [v279]
    v281 <- LoadBoolean 'true'
    v282 <- LoadString 'bbb'
    v283 <- CallFunction v272, [v282]
    v284 <- LoadBoolean 'false'
    v285 <- LoadString 'ccc'
    v286 <- CallFunction v272, [v285]
    v287 <- LoadBoolean 'true'
    v288 <- LoadString 'aaa'
    v289 <- CallFunction v272, [v288]
    v290 <- LoadBoolean 'true'
    v291 <- LoadString 'bbb'
    v292 <- CallFunction v272, [v291]
    v293 <- LoadBoolean 'false'
    v294 <- LoadString 'ccc'
    v295 <- CallFunction v272, [v294]
EndArrowFunction
v296 <- CallFunction v271, []
v297 <- BeginArrowFunction -> 
    v298 <- BeginPlainFunction -> v299
        v300 <- LoadInteger '1'
        v301 <- CallMethod v299, 'charAt', [v300]
        v302 <- LoadString 'b'
        v303 <- Compare v301, '<=', v302
        Return v303
    EndPlainFunction
    v304 <- LoadBoolean 'true'
    v305 <- LoadString 'aaa'
    v306 <- CallFunction v298, [v305]
    v307 <- LoadBoolean 'true'
    v308 <- LoadString 'bbb'
    v309 <- CallFunction v298, [v308]
    v310 <- LoadBoolean 'false'
    v311 <- LoadString 'ccc'
    v312 <- CallFunction v298, [v311]
    v313 <- LoadBoolean 'true'
    v314 <- LoadString 'aaa'
    v315 <- CallFunction v298, [v314]
    v316 <- LoadBoolean 'true'
    v317 <- LoadString 'bbb'
    v318 <- CallFunction v298, [v317]
    v319 <- LoadBoolean 'false'
    v320 <- LoadString 'ccc'
    v321 <- CallFunction v298, [v320]
EndArrowFunction
v322 <- CallFunction v297, []
v323 <- BeginArrowFunction -> 
    v324 <- BeginPlainFunction -> v325
        v326 <- LoadInteger '1'
        v327 <- CallMethod v325, 'charAt', [v326]
        v328 <- LoadString 'bb'
        v329 <- Compare v327, '<=', v328
        Return v329
    EndPlainFunction
    v330 <- LoadBoolean 'true'
    v331 <- LoadString 'aaa'
    v332 <- CallFunction v324, [v331]
    v333 <- LoadBoolean 'true'
    v334 <- LoadString 'bbb'
    v335 <- CallFunction v324, [v334]
    v336 <- LoadBoolean 'false'
    v337 <- LoadString 'ccc'
    v338 <- CallFunction v324, [v337]
    v339 <- LoadBoolean 'true'
    v340 <- LoadString 'aaa'
    v341 <- CallFunction v324, [v340]
    v342 <- LoadBoolean 'true'
    v343 <- LoadString 'bbb'
    v344 <- CallFunction v324, [v343]
    v345 <- LoadBoolean 'false'
    v346 <- LoadString 'ccc'
    v347 <- CallFunction v324, [v346]
EndArrowFunction
v348 <- CallFunction v323, []
v349 <- BeginArrowFunction -> 
    v350 <- BeginPlainFunction -> v351
        v352 <- LoadInteger '1'
        v353 <- CallMethod v351, 'charAt', [v352]
        v354 <- LoadString 'b'
        v355 <- Compare v353, '>', v354
        Return v355
    EndPlainFunction
    v356 <- LoadBoolean 'false'
    v357 <- LoadString 'aaa'
    v358 <- CallFunction v350, [v357]
    v359 <- LoadBoolean 'false'
    v360 <- LoadString 'bbb'
    v361 <- CallFunction v350, [v360]
    v362 <- LoadBoolean 'true'
    v363 <- LoadString 'ccc'
    v364 <- CallFunction v350, [v363]
    v365 <- LoadBoolean 'false'
    v366 <- LoadString 'aaa'
    v367 <- CallFunction v350, [v366]
    v368 <- LoadBoolean 'false'
    v369 <- LoadString 'bbb'
    v370 <- CallFunction v350, [v369]
    v371 <- LoadBoolean 'true'
    v372 <- LoadString 'ccc'
    v373 <- CallFunction v350, [v372]
EndArrowFunction
v374 <- CallFunction v349, []
v375 <- BeginArrowFunction -> 
    v376 <- BeginPlainFunction -> v377
        v378 <- LoadInteger '1'
        v379 <- CallMethod v377, 'charAt', [v378]
        v380 <- LoadString 'bb'
        v381 <- Compare v379, '>', v380
        Return v381
    EndPlainFunction
    v382 <- LoadBoolean 'false'
    v383 <- LoadString 'aaa'
    v384 <- CallFunction v376, [v383]
    v385 <- LoadBoolean 'false'
    v386 <- LoadString 'bbb'
    v387 <- CallFunction v376, [v386]
    v388 <- LoadBoolean 'true'
    v389 <- LoadString 'ccc'
    v390 <- CallFunction v376, [v389]
    v391 <- LoadBoolean 'false'
    v392 <- LoadString 'aaa'
    v393 <- CallFunction v376, [v392]
    v394 <- LoadBoolean 'false'
    v395 <- LoadString 'bbb'
    v396 <- CallFunction v376, [v395]
    v397 <- LoadBoolean 'true'
    v398 <- LoadString 'ccc'
    v399 <- CallFunction v376, [v398]
EndArrowFunction
v400 <- CallFunction v375, []
v401 <- BeginArrowFunction -> 
    v402 <- BeginPlainFunction -> v403
        v404 <- LoadInteger '1'
        v405 <- CallMethod v403, 'charAt', [v404]
        v406 <- LoadString 'b'
        v407 <- Compare v405, '>=', v406
        Return v407
    EndPlainFunction
    v408 <- LoadBoolean 'false'
    v409 <- LoadString 'aaa'
    v410 <- CallFunction v402, [v409]
    v411 <- LoadBoolean 'true'
    v412 <- LoadString 'bbb'
    v413 <- CallFunction v402, [v412]
    v414 <- LoadBoolean 'true'
    v415 <- LoadString 'ccc'
    v416 <- CallFunction v402, [v415]
    v417 <- LoadBoolean 'false'
    v418 <- LoadString 'aaa'
    v419 <- CallFunction v402, [v418]
    v420 <- LoadBoolean 'true'
    v421 <- LoadString 'bbb'
    v422 <- CallFunction v402, [v421]
    v423 <- LoadBoolean 'true'
    v424 <- LoadString 'ccc'
    v425 <- CallFunction v402, [v424]
EndArrowFunction
v426 <- CallFunction v401, []
v427 <- BeginArrowFunction -> 
    v428 <- BeginPlainFunction -> v429
        v430 <- LoadInteger '1'
        v431 <- CallMethod v429, 'charAt', [v430]
        v432 <- LoadString 'bb'
        v433 <- Compare v431, '>=', v432
        Return v433
    EndPlainFunction
    v434 <- LoadBoolean 'false'
    v435 <- LoadString 'aaa'
    v436 <- CallFunction v428, [v435]
    v437 <- LoadBoolean 'false'
    v438 <- LoadString 'bbb'
    v439 <- CallFunction v428, [v438]
    v440 <- LoadBoolean 'true'
    v441 <- LoadString 'ccc'
    v442 <- CallFunction v428, [v441]
    v443 <- LoadBoolean 'false'
    v444 <- LoadString 'aaa'
    v445 <- CallFunction v428, [v444]
    v446 <- LoadBoolean 'false'
    v447 <- LoadString 'bbb'
    v448 <- CallFunction v428, [v447]
    v449 <- LoadBoolean 'true'
    v450 <- LoadString 'ccc'
    v451 <- CallFunction v428, [v450]
EndArrowFunction
v452 <- CallFunction v427, []


const v0 = () => {
    function f(a2) {
        return a2.charAt(1) == "";
    }
    f("aaa");
    f("aaa");
};
v0();
const v14 = () => {
    function f(a16) {
        return a16.charAt(1) < "";
    }
    f("aaa");
    f("aaa");
};
v14();
const v28 = () => {
    function f(a30) {
        return a30.charAt(1) <= "";
    }
    f("aaa");
    f("aaa");
};
v28();
const v42 = () => {
    function f(a44) {
        return a44.charAt(1) > "";
    }
    f("aaa");
    f("aaa");
};
v42();
const v56 = () => {
    function f(a58) {
        return a58.charAt(1) >= "";
    }
    f("aaa");
    f("aaa");
};
v56();
const v70 = () => {
    function f(a72) {
        return a72.charAt(1) == a72.charAt(2);
    }
    f("aab");
    f("aaa");
    f("acb");
    f("aab");
    f("aaa");
    f("acb");
};
v70();
const v97 = () => {
    function f(a99) {
        return a99.charAt(1) < a99.charAt(2);
    }
    f("aab");
    f("aaa");
    f("acb");
    f("aab");
    f("aaa");
    f("acb");
};
v97();
const v124 = () => {
    function f(a126) {
        return a126.charAt(1) <= a126.charAt(2);
    }
    f("aab");
    f("aaa");
    f("acb");
    f("aab");
    f("aaa");
    f("acb");
};
v124();
const v151 = () => {
    function f(a153) {
        return a153.charAt(1) > a153.charAt(2);
    }
    f("aab");
    f("aaa");
    f("acb");
    f("aab");
    f("aaa");
    f("acb");
};
v151();
const v178 = () => {
    function f(a180) {
        return a180.charAt(1) >= a180.charAt(2);
    }
    f("aab");
    f("aaa");
    f("acb");
    f("aab");
    f("aaa");
    f("acb");
};
v178();
const v205 = () => {
    function f(a207) {
        return a207.charAt(1) == "b";
    }
    f("aaa");
    f("bbb");
    f("ccc");
    f("aaa");
    f("bbb");
    f("ccc");
};
v205();
const v231 = () => {
    function f(a233) {
        return a233.charAt(1) == "bb";
    }
    f("aaa");
    f("aaa");
};
v231();
const v245 = () => {
    function f(a247) {
        return a247.charAt(1) < "b";
    }
    f("aaa");
    f("bbb");
    f("ccc");
    f("aaa");
    f("bbb");
    f("ccc");
};
v245();
const v271 = () => {
    function f(a273) {
        return a273.charAt(1) < "bb";
    }
    f("aaa");
    f("bbb");
    f("ccc");
    f("aaa");
    f("bbb");
    f("ccc");
};
v271();
const v297 = () => {
    function f(a299) {
        return a299.charAt(1) <= "b";
    }
    f("aaa");
    f("bbb");
    f("ccc");
    f("aaa");
    f("bbb");
    f("ccc");
};
v297();
const v323 = () => {
    function f(a325) {
        return a325.charAt(1) <= "bb";
    }
    f("aaa");
    f("bbb");
    f("ccc");
    f("aaa");
    f("bbb");
    f("ccc");
};
v323();
const v349 = () => {
    function f(a351) {
        return a351.charAt(1) > "b";
    }
    f("aaa");
    f("bbb");
    f("ccc");
    f("aaa");
    f("bbb");
    f("ccc");
};
v349();
const v375 = () => {
    function f(a377) {
        return a377.charAt(1) > "bb";
    }
    f("aaa");
    f("bbb");
    f("ccc");
    f("aaa");
    f("bbb");
    f("ccc");
};
v375();
const v401 = () => {
    function f(a403) {
        return a403.charAt(1) >= "b";
    }
    f("aaa");
    f("bbb");
    f("ccc");
    f("aaa");
    f("bbb");
    f("ccc");
};
v401();
const v427 = () => {
    function f(a429) {
        return a429.charAt(1) >= "bb";
    }
    f("aaa");
    f("bbb");
    f("ccc");
    f("aaa");
    f("bbb");
    f("ccc");
};
v427();

FuzzIL program written to corpus/string-comparison-opt.fzil
