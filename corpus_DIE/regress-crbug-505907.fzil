BeginTry
    v0 <- CreateNamedVariable 'Proxy', 'none'
    BeginObjectLiteral
    v1 <- EndObjectLiteral
    v2 <- BeginPlainFunction -> 
        v3 <- CreateArray []
        Return v3
    EndPlainFunction
    BeginObjectLiteral
        ObjectLiteralAddProperty `getPropertyDescriptor`, v2
    v4 <- EndObjectLiteral
    v5 <- Construct v0, [v1, v4]
    v6 <- CreateNamedVariable 'p', 'var', v5
    v7 <- CreateNamedVariable 'Object', 'none'
    v8 <- CallMethod v7, 'create', [v6]
    v9 <- CreateNamedVariable 'o', 'var', v8
    BeginWith v9
        v10 <- CreateNamedVariable 'unresolved_name', 'none'
        v11 <- CallFunction v10, []
    EndWith
BeginCatch -> v12
EndTryCatch


try {
    const v1 = {};
    function f2() {
        return [];
    }
    const v5 = new Proxy(v1, { getPropertyDescriptor: f2 });
    var p = v5;
    var o = Object.create(p);
    with (o) {
        unresolved_name();
    }
} catch(e12) {
}

FuzzIL program written to corpus/regress-crbug-505907.fzil
