v0 <- BeginPlainFunction -> v1
    v2 <- LoadInteger '1'
    v3 <- LoadInteger '2'
    v4 <- LoadInteger '3'
    BeginSwitch v1
        BeginSwitchCase v2
            v5 <- LoadFloat '1.4'
            Return v5
        EndSwitchCase fallsThrough
        BeginSwitchCase v3
            v6 <- LoadFloat '1.5'
            Return v6
        EndSwitchCase fallsThrough
        BeginSwitchCase v4
            BeginObjectLiteral
            v7 <- EndObjectLiteral
            Return v7
        EndSwitchCase fallsThrough
        BeginSwitchDefaultCase
            v8 <- CreateNamedVariable 'gc', 'none'
            v9 <- CallFunction v8, []
        EndSwitchCase fallsThrough
    EndSwitch
EndPlainFunction
v10 <- BeginPlainFunction -> v11
    v12 <- LoadFloat '1.1'
    v13 <- LoadFloat '1.2'
    v14 <- LoadFloat '1.3'
    v15 <- CallFunction v0, [v11]
    v16 <- CreateArray [v12, v13, v14, v15]
    Return v16
EndPlainFunction
v17 <- LoadFloat '1.1'
v18 <- LoadFloat '1.2'
v19 <- LoadFloat '1.3'
v20 <- LoadFloat '1.4'
v21 <- CreateArray [v17, v18, v19, v20]
v22 <- LoadInteger '1'
v23 <- CallFunction v10, [v22]
v24 <- LoadFloat '1.1'
v25 <- LoadFloat '1.2'
v26 <- LoadFloat '1.3'
v27 <- LoadFloat '1.5'
v28 <- CreateArray [v24, v25, v26, v27]
v29 <- LoadInteger '2'
v30 <- CallFunction v10, [v29]
v31 <- LoadFloat '1.1'
v32 <- LoadFloat '1.2'
v33 <- LoadFloat '1.3'
BeginObjectLiteral
v34 <- EndObjectLiteral
v35 <- CreateArray [v31, v32, v33, v34]
v36 <- LoadInteger '3'
v37 <- CallFunction v10, [v36]
v38 <- LoadFloat '1.1'
v39 <- LoadFloat '1.2'
v40 <- LoadFloat '1.3'
v41 <- LoadUndefined
v42 <- CreateArray [v38, v39, v40, v41]
v43 <- LoadInteger '4'
v44 <- CallFunction v10, [v43]


function f(a1) {
    switch (a1) {
        case 1:
            return 1.4;
        case 2:
            return 1.5;
        case 3:
            return {};
        default:
            gc();
    }
}
function g(a11) {
    return [1.1,1.2,1.3,f(a11)];
}
[1.1,1.2,1.3,1.4];
g(1);
[1.1,1.2,1.3,1.5];
g(2);
[1.1,1.2,1.3,{}];
g(3);
[1.1,1.2,1.3,,];
g(4);

FuzzIL program written to corpus/regress-fast-literal-transition.fzil
