v0 <- LoadInteger '0'
v1 <- CreateNamedVariable 'g', 'var', v0
v2 <- BeginPlainFunction -> 
EndPlainFunction
Reassign v1, v2
v3 <- BeginPlainFunction -> 
    v4 <- LoadRegExp '[abc]' 'i'
    v5 <- CreateNamedVariable 'r', 'var', v4
    v6 <- CallFunction v1, [v5]
EndPlainFunction
v7 <- LoadUndefined
v8 <- CreateNamedVariable 're', 'var', v7
v9 <- BeginPlainFunction -> v10
    Reassign v8, v10
EndPlainFunction
Reassign v1, v9
v11 <- CallFunction v3, []
v12 <- LoadUndefined
v13 <- LoadString '[abc]'
v14 <- GetProperty v8, 'source'
v15 <- LoadString 'i'
v16 <- GetProperty v8, 'flags'
v17 <- LoadInteger '0'
v18 <- GetProperty v8, 'lastIndex'
v19 <- LoadString 'a'
v20 <- CreateArray [v19]
v21 <- LoadString 'a'
v22 <- CallMethod v8, 'exec', [v21]
v23 <- LoadString 'A'
v24 <- CreateArray [v23]
v25 <- LoadString 'A'
v26 <- CallMethod v8, 'exec', [v25]
v27 <- LoadString 'd'
v28 <- CallMethod v8, 'exec', [v27]


var g = 0;
function f2() {
}
g = f2;
function f() {
    var r = /[abc]/i;
    g(r);
}
var re;
function f9(a10) {
    re = a10;
}
g = f9;
f();
re.source;
re.flags;
re.lastIndex;
["a"];
re.exec("a");
["A"];
re.exec("A");
re.exec("d");

FuzzIL program written to corpus/regress-747825.fzil
