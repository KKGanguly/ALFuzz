v0 <- LoadInteger '42'
v1 <- CreateNamedVariable 'a', 'var', v0
v2 <- BeginPlainFunction -> v3
    BeginWhileLoopHeader
        v4 <- LoadInteger '0'
        v5 <- Compare v3, '>', v4
    BeginWhileLoopBody v5
        v6 <- CreateNamedVariable 'Array', 'none'
        v7 <- Construct v6, [v3]
        Reassign v1, v7
        v8 <- UnaryOperation v3, '--'
    EndWhileLoop
EndPlainFunction
v9 <- LoadInteger '1'
v10 <- CallFunction v2, [v9]
v11 <- BeginPlainFunction -> 
    v12 <- CallFunction v2, []
EndPlainFunction
v13 <- CallFunction v11, []
v14 <- CallFunction v11, []
v15 <- LoadInteger '1'
v16 <- GetProperty v1, 'length'


var a = 42;
function g(a3) {
    while (a3 > 0) {
        const v7 = new Array(a3);
        a = v7;
        a3--;
    }
}
g(1);
function f() {
    g();
}
f();
f();
a.length;

FuzzIL program written to corpus/regress-890620.fzil
