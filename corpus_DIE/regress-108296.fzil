v0 <- BeginPlainFunction -> v1, v2, v3
    v4 <- GetProperty v2, 'foo'
    v5 <- GetProperty v2, 'foo'
    v6 <- TernaryOperation v1, v4, v5
    v7 <- CreateNamedVariable 'x', 'var', v6
    v8 <- GetProperty v7, 'prototype'
    Return v8
EndPlainFunction
BeginObjectLiteral
v9 <- EndObjectLiteral
v10 <- CreateNamedVariable 'a', 'var', v9
v11 <- BeginPlainFunction -> 
    v12 <- BeginPlainFunction -> 
    EndPlainFunction
    Return v12
EndPlainFunction
v13 <- CallFunction v11, []
SetProperty v10, 'foo', v13
v14 <- LoadBoolean 'true'
v15 <- CallFunction v0, [v14, v10, v10]
v16 <- LoadBoolean 'true'
v17 <- CallFunction v0, [v16, v10, v10]
v18 <- LoadBoolean 'false'
v19 <- CallFunction v0, [v18, v10, v10]
v20 <- LoadBoolean 'false'
v21 <- CallFunction v0, [v20, v10, v10]
v22 <- LoadBoolean 'true'
v23 <- CallFunction v0, [v22, v10, v10]


function f(a1, a2, a3) {
    var x = a1 ? a2.foo : a2.foo;
    return x.prototype;
}
var a = {};
function f11() {
    function f12() {
    }
    return f12;
}
a.foo = f11();
f(true, a, a);
f(true, a, a);
f(false, a, a);
f(false, a, a);
f(true, a, a);

FuzzIL program written to corpus/regress-108296.fzil
