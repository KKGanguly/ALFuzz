v0 <- BeginArrowFunction -> 
    v1 <- BeginPlainFunction -> v2
        v3 <- UnaryOperation '!', v2
        v4 <- UnaryOperation '!', v3
        v5 <- CreateNamedVariable 'Array', 'none'
        v6 <- CallFunction v5, [v4]
        Return v6
    EndPlainFunction
    v7 <- LoadBoolean 'true'
    v8 <- CreateArray [v7]
    v9 <- LoadBoolean 'true'
    v10 <- CallFunction v1, [v9]
    v11 <- LoadBoolean 'false'
    v12 <- CreateArray [v11]
    v13 <- LoadBoolean 'false'
    v14 <- CallFunction v1, [v13]
    v15 <- LoadBoolean 'true'
    v16 <- CreateArray [v15]
    v17 <- LoadBoolean 'true'
    v18 <- CallFunction v1, [v17]
    v19 <- LoadBoolean 'false'
    v20 <- CreateArray [v19]
    v21 <- LoadBoolean 'false'
    v22 <- CallFunction v1, [v21]
EndArrowFunction
v23 <- CallFunction v0, []
v24 <- BeginArrowFunction -> 
    v25 <- BeginPlainFunction -> v26
        v27 <- CreateNamedVariable 'Array', 'none'
        v28 <- UnaryOperation '!', v26
        v29 <- UnaryOperation '!', v28
        v30 <- Construct v27, [v29]
        Return v30
    EndPlainFunction
    v31 <- LoadBoolean 'true'
    v32 <- CreateArray [v31]
    v33 <- LoadBoolean 'true'
    v34 <- CallFunction v25, [v33]
    v35 <- LoadBoolean 'false'
    v36 <- CreateArray [v35]
    v37 <- LoadBoolean 'false'
    v38 <- CallFunction v25, [v37]
    v39 <- LoadBoolean 'true'
    v40 <- CreateArray [v39]
    v41 <- LoadBoolean 'true'
    v42 <- CallFunction v25, [v41]
    v43 <- LoadBoolean 'false'
    v44 <- CreateArray [v43]
    v45 <- LoadBoolean 'false'
    v46 <- CallFunction v25, [v45]
EndArrowFunction
v47 <- CallFunction v24, []
v48 <- BeginArrowFunction -> 
    v49 <- BeginPlainFunction -> v50
        v51 <- LoadString ''
        v52 <- BinaryOperation v51, '+', v50
        v53 <- CreateNamedVariable 'Array', 'none'
        v54 <- CallFunction v53, [v52]
        Return v54
    EndPlainFunction
    v55 <- LoadString 'a'
    v56 <- CreateArray [v55]
    v57 <- LoadString 'a'
    v58 <- CallFunction v49, [v57]
    v59 <- LoadString 'b'
    v60 <- CreateArray [v59]
    v61 <- LoadString 'b'
    v62 <- CallFunction v49, [v61]
    v63 <- LoadString 'a'
    v64 <- CreateArray [v63]
    v65 <- LoadString 'a'
    v66 <- CallFunction v49, [v65]
    v67 <- LoadString 'b'
    v68 <- CreateArray [v67]
    v69 <- LoadString 'b'
    v70 <- CallFunction v49, [v69]
EndArrowFunction
v71 <- CallFunction v48, []
v72 <- BeginArrowFunction -> 
    v73 <- BeginPlainFunction -> v74
        v75 <- CreateNamedVariable 'Array', 'none'
        v76 <- LoadString ''
        v77 <- BinaryOperation v76, '+', v74
        v78 <- Construct v75, [v77]
        Return v78
    EndPlainFunction
    v79 <- LoadString 'a'
    v80 <- CreateArray [v79]
    v81 <- LoadString 'a'
    v82 <- CallFunction v73, [v81]
    v83 <- LoadString 'b'
    v84 <- CreateArray [v83]
    v85 <- LoadString 'b'
    v86 <- CallFunction v73, [v85]
    v87 <- LoadString 'a'
    v88 <- CreateArray [v87]
    v89 <- LoadString 'a'
    v90 <- CallFunction v73, [v89]
    v91 <- LoadString 'b'
    v92 <- CreateArray [v91]
    v93 <- LoadString 'b'
    v94 <- CallFunction v73, [v93]
EndArrowFunction
v95 <- CallFunction v72, []
v96 <- BeginArrowFunction -> 
    v97 <- BeginPlainFunction -> 
        v98 <- LoadInteger '2'
        v99 <- CreateNamedVariable 'Array', 'none'
        v100 <- CallFunction v99, [v98]
        Return v100
    EndPlainFunction
    v101 <- LoadInteger '2'
    v102 <- CallFunction v97, []
    v103 <- GetProperty v102, 'length'
    v104 <- LoadInteger '2'
    v105 <- CallFunction v97, []
    v106 <- GetProperty v105, 'length'
    v107 <- LoadInteger '2'
    v108 <- CallFunction v97, []
    v109 <- GetProperty v108, 'length'
EndArrowFunction
v110 <- CallFunction v96, []
v111 <- BeginArrowFunction -> 
    v112 <- BeginPlainFunction -> 
        v113 <- CreateNamedVariable 'Array', 'none'
        v114 <- LoadInteger '2'
        v115 <- Construct v113, [v114]
        Return v115
    EndPlainFunction
    v116 <- LoadInteger '2'
    v117 <- CallFunction v112, []
    v118 <- GetProperty v117, 'length'
    v119 <- LoadInteger '2'
    v120 <- CallFunction v112, []
    v121 <- GetProperty v120, 'length'
    v122 <- LoadInteger '2'
    v123 <- CallFunction v112, []
    v124 <- GetProperty v123, 'length'
EndArrowFunction
v125 <- CallFunction v111, []
v126 <- BeginArrowFunction -> 
    v127 <- BeginPlainFunction -> v128, v129, v130
        v131 <- CreateNamedVariable 'Array', 'none'
        v132 <- CallFunction v131, [v128, v129, v130]
        Return v132
    EndPlainFunction
    v133 <- LoadInteger '1'
    v134 <- LoadInteger '2'
    v135 <- LoadInteger '3'
    v136 <- CreateArray [v133, v134, v135]
    v137 <- LoadInteger '1'
    v138 <- LoadInteger '2'
    v139 <- LoadInteger '3'
    v140 <- CallFunction v127, [v137, v138, v139]
    v141 <- LoadInteger '1'
    v142 <- LoadInteger '2'
    v143 <- LoadInteger '3'
    v144 <- CreateArray [v141, v142, v143]
    v145 <- LoadInteger '1'
    v146 <- LoadInteger '2'
    v147 <- LoadInteger '3'
    v148 <- CallFunction v127, [v145, v146, v147]
    v149 <- LoadInteger '1'
    v150 <- LoadInteger '2'
    v151 <- LoadInteger '3'
    v152 <- CreateArray [v149, v150, v151]
    v153 <- LoadInteger '1'
    v154 <- LoadInteger '2'
    v155 <- LoadInteger '3'
    v156 <- CallFunction v127, [v153, v154, v155]
EndArrowFunction
v157 <- CallFunction v126, []
v158 <- BeginArrowFunction -> 
    v159 <- BeginPlainFunction -> v160, v161, v162
        v163 <- CreateNamedVariable 'Array', 'none'
        v164 <- Construct v163, [v160, v161, v162]
        Return v164
    EndPlainFunction
    v165 <- LoadInteger '1'
    v166 <- LoadInteger '2'
    v167 <- LoadInteger '3'
    v168 <- CreateArray [v165, v166, v167]
    v169 <- LoadInteger '1'
    v170 <- LoadInteger '2'
    v171 <- LoadInteger '3'
    v172 <- CallFunction v159, [v169, v170, v171]
    v173 <- LoadInteger '1'
    v174 <- LoadInteger '2'
    v175 <- LoadInteger '3'
    v176 <- CreateArray [v173, v174, v175]
    v177 <- LoadInteger '1'
    v178 <- LoadInteger '2'
    v179 <- LoadInteger '3'
    v180 <- CallFunction v159, [v177, v178, v179]
    v181 <- LoadInteger '1'
    v182 <- LoadInteger '2'
    v183 <- LoadInteger '3'
    v184 <- CreateArray [v181, v182, v183]
    v185 <- LoadInteger '1'
    v186 <- LoadInteger '2'
    v187 <- LoadInteger '3'
    v188 <- CallFunction v159, [v185, v186, v187]
EndArrowFunction
v189 <- CallFunction v158, []
v190 <- BeginArrowFunction -> 
    v191 <- BeginPlainFunction -> v192
        BeginTry
            v193 <- CreateNamedVariable 'Array', 'none'
            v194 <- Construct v193, [v192]
            Return v194
        BeginCatch -> v195
            Return v195
        EndTryCatch
    EndPlainFunction
    v196 <- CreateArray []
    v197 <- LoadInteger '0'
    v198 <- CallFunction v191, [v197]
    v199 <- CreateArray []
    v200 <- LoadInteger '0'
    v201 <- CallFunction v191, [v200]
    v202 <- CreateArray []
    v203 <- LoadInteger '0'
    v204 <- CallFunction v191, [v203]
    v205 <- LoadInteger '1'
    v206 <- UnaryOperation '-', v205
    v207 <- CallFunction v191, [v206]
    v208 <- CreateNamedVariable 'RangeError', 'none'
EndArrowFunction
v209 <- CallFunction v190, []


const v0 = () => {
    function foo(a2) {
        return Array(!(!a2));
    }
    [true];
    foo(true);
    [false];
    foo(false);
    [true];
    foo(true);
    [false];
    foo(false);
};
v0();
const v24 = () => {
    function foo(a26) {
        const v30 = new Array(!(!a26));
        return v30;
    }
    [true];
    foo(true);
    [false];
    foo(false);
    [true];
    foo(true);
    [false];
    foo(false);
};
v24();
const v48 = () => {
    function foo(a50) {
        return Array("" + a50);
    }
    ["a"];
    foo("a");
    ["b"];
    foo("b");
    ["a"];
    foo("a");
    ["b"];
    foo("b");
};
v48();
const v72 = () => {
    function foo(a74) {
        const v78 = new Array("" + a74);
        return v78;
    }
    ["a"];
    foo("a");
    ["b"];
    foo("b");
    ["a"];
    foo("a");
    ["b"];
    foo("b");
};
v72();
const v96 = () => {
    function foo() {
        return Array(2);
    }
    foo().length;
    foo().length;
    foo().length;
};
v96();
const v111 = () => {
    function foo() {
        const v115 = new Array(2);
        return v115;
    }
    foo().length;
    foo().length;
    foo().length;
};
v111();
const v126 = () => {
    function foo(a128, a129, a130) {
        return Array(a128, a129, a130);
    }
    [1,2,3];
    foo(1, 2, 3);
    [1,2,3];
    foo(1, 2, 3);
    [1,2,3];
    foo(1, 2, 3);
};
v126();
const v158 = () => {
    function foo(a160, a161, a162) {
        const v164 = new Array(a160, a161, a162);
        return v164;
    }
    [1,2,3];
    foo(1, 2, 3);
    [1,2,3];
    foo(1, 2, 3);
    [1,2,3];
    foo(1, 2, 3);
};
v158();
const v190 = () => {
    function foo(a192) {
        try {
            const v194 = new Array(a192);
            return v194;
        } catch(e195) {
            return e195;
        }
    }
    [];
    foo(0);
    [];
    foo(0);
    [];
    foo(0);
    foo(-1);
};
v190();

FuzzIL program written to corpus/array-constructor.fzil
