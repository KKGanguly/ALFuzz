v0 <- BeginPlainFunction -> 
    v1 <- BeginPlainFunction -> v2
        v3 <- GetProperty v2, 'length'
        v4 <- LoadInteger '1'
        v5 <- BinaryOperation v3, '+', v4
        Return v5
    EndPlainFunction
    v6 <- CreateArray []
    v7 <- CreateNamedVariable 'a', 'var', v6
    v8 <- LoadInteger '65535'
    SetProperty v7, 'length', v8
    v9 <- LoadInteger '65536'
    v10 <- CallFunction v1, [v7]
    v11 <- LoadInteger '65536'
    v12 <- CallFunction v1, [v7]
    v13 <- LoadInteger '4294967295'
    SetProperty v7, 'length', v13
    v14 <- LoadInteger '4294967296'
    v15 <- CallFunction v1, [v7]
EndPlainFunction
v16 <- CallFunction v0, []


function TestNonSmiArrayLength() {
    function f(a2) {
        return a2.length + 1;
    }
    var a = [];
    a.length = 65535;
    f(a);
    f(a);
    a.length = 4294967295;
    f(a);
}
TestNonSmiArrayLength();

FuzzIL program written to corpus/array-non-smi-length.fzil
