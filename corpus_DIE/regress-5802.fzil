v0 <- BeginPlainFunction -> 
    v1 <- BeginPlainFunction -> v2, v3
        v4 <- Compare v2, '==', v3
        Return v4
    EndPlainFunction
    v5 <- BeginArrowFunction -> 
        v6 <- LoadString 'o'
        Return v6
    EndArrowFunction
    v7 <- CreateNamedVariable 'Symbol', 'none'
    v8 <- GetProperty v7, 'toPrimitive'
    BeginObjectLiteral
        ObjectLiteralAddComputedProperty v8, v5
    v9 <- EndObjectLiteral
    v10 <- CreateNamedVariable 'o', 'var', v9
    v11 <- CallFunction v1, [v10, v10]
    v12 <- CallFunction v1, [v10, v10]
    v13 <- CallFunction v1, [v10, v10]
    v14 <- LoadString 'o'
    v15 <- CallFunction v1, [v14, v10]
    v16 <- LoadString 'o'
    v17 <- CallFunction v1, [v10, v16]
    v18 <- CallFunction v1, [v10, v10]
    v19 <- LoadString 'o'
    v20 <- CallFunction v1, [v19, v10]
    v21 <- LoadString 'o'
    v22 <- CallFunction v1, [v10, v21]
    v23 <- CallFunction v1, []
EndPlainFunction
v24 <- CallFunction v0, []
v25 <- BeginPlainFunction -> 
    v26 <- BeginPlainFunction -> v27, v28
        v29 <- Compare v27, '!=', v28
        Return v29
    EndPlainFunction
    v30 <- BeginArrowFunction -> 
        v31 <- LoadString 'o'
        Return v31
    EndArrowFunction
    v32 <- CreateNamedVariable 'Symbol', 'none'
    v33 <- GetProperty v32, 'toPrimitive'
    BeginObjectLiteral
        ObjectLiteralAddComputedProperty v33, v30
    v34 <- EndObjectLiteral
    v35 <- CreateNamedVariable 'o', 'var', v34
    v36 <- CallFunction v26, [v35, v35]
    v37 <- CallFunction v26, [v35, v35]
    v38 <- CallFunction v26, [v35, v35]
    v39 <- LoadString 'o'
    v40 <- CallFunction v26, [v39, v35]
    v41 <- LoadString 'o'
    v42 <- CallFunction v26, [v35, v41]
    v43 <- CallFunction v26, [v35, v35]
    v44 <- LoadString 'o'
    v45 <- CallFunction v26, [v44, v35]
    v46 <- LoadString 'o'
    v47 <- CallFunction v26, [v35, v46]
    v48 <- CallFunction v26, []
EndPlainFunction
v49 <- CallFunction v25, []
v50 <- BeginPlainFunction -> 
    v51 <- BeginPlainFunction -> v52, v53
        v54 <- Compare v52, '==', v53
        Return v54
    EndPlainFunction
    BeginObjectLiteral
    v55 <- EndObjectLiteral
    v56 <- CreateNamedVariable 'a', 'var', v55
    v57 <- CreateNamedVariable 'b', 'none'
    BeginObjectLiteral
        ObjectLiteralAddProperty `b`, v57
    v58 <- EndObjectLiteral
    v59 <- CreateNamedVariable 'b', 'var', v58
    v60 <- BeginPlainFunction -> 
    EndPlainFunction
    v61 <- CreateNamedVariable 'u', 'var', v60
    v62 <- CallFunction v51, [v56, v56]
    v63 <- CallFunction v51, [v59, v59]
    v64 <- CallFunction v51, [v56, v59]
    v65 <- CallFunction v51, [v59, v56]
    v66 <- CallFunction v51, [v56, v56]
    v67 <- CallFunction v51, [v59, v59]
    v68 <- CallFunction v51, [v56, v59]
    v69 <- CallFunction v51, [v59, v56]
    v70 <- CallFunction v51, [v56, v56]
    v71 <- CallFunction v51, [v59, v59]
    v72 <- CallFunction v51, [v56, v59]
    v73 <- CallFunction v51, [v59, v56]
    v74 <- LoadNull
    v75 <- CallFunction v51, [v74, v61]
    v76 <- LoadUndefined
    v77 <- CallFunction v51, [v76, v61]
    v78 <- LoadNull
    v79 <- CallFunction v51, [v61, v78]
    v80 <- LoadUndefined
    v81 <- CallFunction v51, [v61, v80]
    v82 <- CallFunction v51, [v56, v56]
    v83 <- CallFunction v51, [v59, v59]
    v84 <- CallFunction v51, [v56, v59]
    v85 <- CallFunction v51, [v59, v56]
    v86 <- LoadNull
    v87 <- CallFunction v51, [v86, v61]
    v88 <- LoadUndefined
    v89 <- CallFunction v51, [v88, v61]
    v90 <- LoadNull
    v91 <- CallFunction v51, [v61, v90]
    v92 <- LoadUndefined
    v93 <- CallFunction v51, [v61, v92]
    v94 <- CallFunction v51, []
EndPlainFunction
v95 <- CallFunction v50, []
v96 <- BeginPlainFunction -> 
    v97 <- BeginPlainFunction -> v98, v99
        v100 <- Compare v98, '!=', v99
        Return v100
    EndPlainFunction
    BeginObjectLiteral
    v101 <- EndObjectLiteral
    v102 <- CreateNamedVariable 'a', 'var', v101
    v103 <- CreateNamedVariable 'b', 'none'
    BeginObjectLiteral
        ObjectLiteralAddProperty `b`, v103
    v104 <- EndObjectLiteral
    v105 <- CreateNamedVariable 'b', 'var', v104
    v106 <- BeginPlainFunction -> 
    EndPlainFunction
    v107 <- CreateNamedVariable 'u', 'var', v106
    v108 <- CallFunction v97, [v102, v102]
    v109 <- CallFunction v97, [v105, v105]
    v110 <- CallFunction v97, [v102, v105]
    v111 <- CallFunction v97, [v105, v102]
    v112 <- CallFunction v97, [v102, v102]
    v113 <- CallFunction v97, [v105, v105]
    v114 <- CallFunction v97, [v102, v105]
    v115 <- CallFunction v97, [v105, v102]
    v116 <- CallFunction v97, [v102, v102]
    v117 <- CallFunction v97, [v105, v105]
    v118 <- CallFunction v97, [v102, v105]
    v119 <- CallFunction v97, [v105, v102]
    v120 <- LoadNull
    v121 <- CallFunction v97, [v120, v107]
    v122 <- LoadUndefined
    v123 <- CallFunction v97, [v122, v107]
    v124 <- LoadNull
    v125 <- CallFunction v97, [v107, v124]
    v126 <- LoadUndefined
    v127 <- CallFunction v97, [v107, v126]
    v128 <- CallFunction v97, [v102, v102]
    v129 <- CallFunction v97, [v105, v105]
    v130 <- CallFunction v97, [v102, v105]
    v131 <- CallFunction v97, [v105, v102]
    v132 <- LoadNull
    v133 <- CallFunction v97, [v132, v107]
    v134 <- LoadUndefined
    v135 <- CallFunction v97, [v134, v107]
    v136 <- LoadNull
    v137 <- CallFunction v97, [v107, v136]
    v138 <- LoadUndefined
    v139 <- CallFunction v97, [v107, v138]
    v140 <- CallFunction v97, []
EndPlainFunction
v141 <- CallFunction v96, []


function f0() {
    function eq(a2, a3) {
        return a2 == a3;
    }
    const v5 = () => {
        return "o";
    };
    const v8 = Symbol.toPrimitive;
    var o = { [v8]: v5 };
    eq(o, o);
    eq(o, o);
    eq(o, o);
    eq("o", o);
    eq(o, "o");
    eq(o, o);
    eq("o", o);
    eq(o, "o");
    eq();
}
f0();
function f25() {
    function ne(a27, a28) {
        return a27 != a28;
    }
    const v30 = () => {
        return "o";
    };
    const v33 = Symbol.toPrimitive;
    var o = { [v33]: v30 };
    ne(o, o);
    ne(o, o);
    ne(o, o);
    ne("o", o);
    ne(o, "o");
    ne(o, o);
    ne("o", o);
    ne(o, "o");
    ne();
}
f25();
function f50() {
    function eq(a52, a53) {
        return a52 == a53;
    }
    var a = {};
    var b = { b: b };
    function f60() {
    }
    var u = f60;
    eq(a, a);
    eq(b, b);
    eq(a, b);
    eq(b, a);
    eq(a, a);
    eq(b, b);
    eq(a, b);
    eq(b, a);
    eq(a, a);
    eq(b, b);
    eq(a, b);
    eq(b, a);
    eq(null, u);
    eq(undefined, u);
    eq(u, null);
    eq(u, undefined);
    eq(a, a);
    eq(b, b);
    eq(a, b);
    eq(b, a);
    eq(null, u);
    eq(undefined, u);
    eq(u, null);
    eq(u, undefined);
    eq();
}
f50();
function f96() {
    function ne(a98, a99) {
        return a98 != a99;
    }
    var a = {};
    var b = { b: b };
    function f106() {
    }
    var u = f106;
    ne(a, a);
    ne(b, b);
    ne(a, b);
    ne(b, a);
    ne(a, a);
    ne(b, b);
    ne(a, b);
    ne(b, a);
    ne(a, a);
    ne(b, b);
    ne(a, b);
    ne(b, a);
    ne(null, u);
    ne(undefined, u);
    ne(u, null);
    ne(u, undefined);
    ne(a, a);
    ne(b, b);
    ne(a, b);
    ne(b, a);
    ne(null, u);
    ne(undefined, u);
    ne(u, null);
    ne(u, undefined);
    ne();
}
f96();

FuzzIL program written to corpus/regress-5802.fzil
