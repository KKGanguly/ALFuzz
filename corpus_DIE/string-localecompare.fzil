v0 <- LoadString 'asdf'
v1 <- LoadString 'asdf'
v2 <- CallMethod v1, 'localeCompare', [v0]
v3 <- LoadInteger '0'
v4 <- Compare v2, '==', v3
v5 <- LoadString 'asdf'
v6 <- LoadString 'asd'
v7 <- CallMethod v6, 'localeCompare', [v5]
v8 <- LoadInteger '0'
v9 <- Compare v7, '<', v8
v10 <- LoadString 'asdf'
v11 <- LoadString 'asdff'
v12 <- CallMethod v11, 'localeCompare', [v10]
v13 <- LoadInteger '0'
v14 <- Compare v12, '>', v13
v15 <- LoadString 'asdq'
v16 <- LoadString 'asdf'
v17 <- CallMethod v16, 'localeCompare', [v15]
v18 <- LoadInteger '0'
v19 <- Compare v17, '<', v18
v20 <- LoadString 'asdf'
v21 <- LoadString 'asdq'
v22 <- CallMethod v21, 'localeCompare', [v20]
v23 <- LoadInteger '0'
v24 <- Compare v22, '>', v23


("asdf").localeCompare("asdf") == 0;
("asd").localeCompare("asdf") < 0;
("asdff").localeCompare("asdf") > 0;
("asdf").localeCompare("asdq") < 0;
("asdq").localeCompare("asdf") > 0;

FuzzIL program written to corpus/string-localecompare.fzil
