v0 <- BeginPlainFunction -> v1, v2
    v3 <- CallFunction v2, []
    v4 <- CallFunction v2, []
    v5 <- CallFunction v2, []
    v6 <- CallFunction v2, []
EndPlainFunction
v7 <- BeginPlainFunction -> v8
EndPlainFunction
v9 <- BeginPlainFunction -> 
    v10 <- CreateNamedVariable 'NaN', 'none'
    Return v10
EndPlainFunction
v11 <- LoadInteger '0'
v12 <- LoadInteger '0'
v13 <- BinaryOperation v11, '/', v12
v14 <- CallFunction v0, [v13, v9]
v15 <- BeginPlainFunction -> 
    v16 <- LoadInteger '0'
    v17 <- LoadInteger '0'
    v18 <- BinaryOperation v16, '/', v17
    Return v18
EndPlainFunction
v19 <- LoadInteger '0'
v20 <- LoadInteger '0'
v21 <- BinaryOperation v19, '/', v20
v22 <- CallFunction v0, [v21, v15]
v23 <- BeginPlainFunction -> 
    v24 <- LoadInteger '0'
    v25 <- LoadInteger '0'
    v26 <- BinaryOperation v24, '/', v25
    v27 <- LoadInteger '0'
    v28 <- LoadInteger '0'
    v29 <- BinaryOperation v27, '/', v28
    v30 <- Compare v26, '==', v29
    Return v30
EndPlainFunction
v31 <- LoadBoolean 'false'
v32 <- CallFunction v0, [v31, v23]
v33 <- BeginPlainFunction -> 
    v34 <- LoadInteger '0'
    v35 <- LoadInteger '0'
    v36 <- BinaryOperation v34, '/', v35
    v37 <- CreateNamedVariable 'NaN', 'none'
    v38 <- Compare v36, '==', v37
    Return v38
EndPlainFunction
v39 <- LoadBoolean 'false'
v40 <- CallFunction v0, [v39, v33]
v41 <- BeginPlainFunction -> 
    v42 <- CreateNamedVariable 'NaN', 'none'
    v43 <- LoadInteger '0'
    v44 <- LoadInteger '0'
    v45 <- BinaryOperation v43, '/', v44
    v46 <- Compare v42, '==', v45
    Return v46
EndPlainFunction
v47 <- LoadBoolean 'false'
v48 <- CallFunction v0, [v47, v41]
v49 <- BeginPlainFunction -> 
    v50 <- LoadString ''
    v51 <- CreateNamedVariable 'NaN', 'none'
    v52 <- BinaryOperation v50, '+', v51
    Return v52
EndPlainFunction
v53 <- LoadString 'NaN'
v54 <- CallFunction v0, [v53, v49]
v55 <- BeginPlainFunction -> 
    v56 <- LoadInteger '0'
    v57 <- LoadInteger '0'
    v58 <- BinaryOperation v56, '/', v57
    v59 <- LoadInteger '0'
    v60 <- LoadInteger '0'
    v61 <- BinaryOperation v59, '/', v60
    v62 <- Compare v58, '===', v61
    Return v62
EndPlainFunction
v63 <- LoadBoolean 'false'
v64 <- CallFunction v0, [v63, v55]
v65 <- BeginPlainFunction -> 
    v66 <- LoadInteger '0'
    v67 <- LoadInteger '0'
    v68 <- BinaryOperation v66, '/', v67
    v69 <- CreateNamedVariable 'NaN', 'none'
    v70 <- Compare v68, '===', v69
    Return v70
EndPlainFunction
v71 <- LoadBoolean 'false'
v72 <- CallFunction v0, [v71, v65]
v73 <- BeginPlainFunction -> 
    v74 <- CreateNamedVariable 'NaN', 'none'
    v75 <- LoadInteger '0'
    v76 <- LoadInteger '0'
    v77 <- BinaryOperation v75, '/', v76
    v78 <- Compare v74, '===', v77
    Return v78
EndPlainFunction
v79 <- LoadBoolean 'false'
v80 <- CallFunction v0, [v79, v73]
v81 <- BeginPlainFunction -> 
    v82 <- CreateNamedVariable 'NaN', 'none'
    Return v82
EndPlainFunction
v83 <- LoadInteger '0'
v84 <- LoadInteger '0'
v85 <- BinaryOperation v83, '/', v84
v86 <- CallFunction v0, [v85, v81]
v87 <- BeginPlainFunction -> 
    v88 <- LoadInteger '0'
    v89 <- LoadInteger '0'
    v90 <- BinaryOperation v88, '/', v89
    Return v90
EndPlainFunction
v91 <- LoadInteger '0'
v92 <- LoadInteger '0'
v93 <- BinaryOperation v91, '/', v92
v94 <- CallFunction v0, [v93, v87]
v95 <- BeginPlainFunction -> 
    v96 <- LoadInteger '0'
    v97 <- LoadInteger '0'
    v98 <- BinaryOperation v96, '/', v97
    v99 <- LoadInteger '0'
    v100 <- LoadInteger '0'
    v101 <- BinaryOperation v99, '/', v100
    v102 <- Compare v98, '==', v101
    Return v102
EndPlainFunction
v103 <- LoadBoolean 'false'
v104 <- CallFunction v0, [v103, v95]
v105 <- BeginPlainFunction -> 
    v106 <- LoadInteger '0'
    v107 <- LoadInteger '0'
    v108 <- BinaryOperation v106, '/', v107
    v109 <- CreateNamedVariable 'NaN', 'none'
    v110 <- Compare v108, '==', v109
    Return v110
EndPlainFunction
v111 <- LoadBoolean 'false'
v112 <- CallFunction v0, [v111, v105]
v113 <- BeginPlainFunction -> 
    v114 <- CreateNamedVariable 'NaN', 'none'
    v115 <- LoadInteger '0'
    v116 <- LoadInteger '0'
    v117 <- BinaryOperation v115, '/', v116
    v118 <- Compare v114, '==', v117
    Return v118
EndPlainFunction
v119 <- LoadBoolean 'false'
v120 <- CallFunction v0, [v119, v113]
v121 <- BeginPlainFunction -> 
    v122 <- LoadString ''
    v123 <- CreateNamedVariable 'NaN', 'none'
    v124 <- BinaryOperation v122, '+', v123
    Return v124
EndPlainFunction
v125 <- LoadString 'NaN'
v126 <- CallFunction v0, [v125, v121]
v127 <- BeginPlainFunction -> 
    v128 <- LoadInteger '0'
    v129 <- LoadInteger '0'
    v130 <- BinaryOperation v128, '/', v129
    v131 <- LoadInteger '0'
    v132 <- LoadInteger '0'
    v133 <- BinaryOperation v131, '/', v132
    v134 <- Compare v130, '===', v133
    Return v134
EndPlainFunction
v135 <- LoadBoolean 'false'
v136 <- CallFunction v0, [v135, v127]
v137 <- BeginPlainFunction -> 
    v138 <- LoadInteger '0'
    v139 <- LoadInteger '0'
    v140 <- BinaryOperation v138, '/', v139
    v141 <- CreateNamedVariable 'NaN', 'none'
    v142 <- Compare v140, '===', v141
    Return v142
EndPlainFunction
v143 <- LoadBoolean 'false'
v144 <- CallFunction v0, [v143, v137]
v145 <- BeginPlainFunction -> 
    v146 <- CreateNamedVariable 'NaN', 'none'
    v147 <- LoadInteger '0'
    v148 <- LoadInteger '0'
    v149 <- BinaryOperation v147, '/', v148
    v150 <- Compare v146, '===', v149
    Return v150
EndPlainFunction
v151 <- LoadBoolean 'false'
v152 <- CallFunction v0, [v151, v145]
v153 <- BeginPlainFunction -> 
    v154 <- LoadInteger '111'
    v155 <- CreateNamedVariable 'NaN', 'none'
    Reassign v155, v154
EndPlainFunction
v156 <- CallFunction v7, [v153]
v157 <- BeginPlainFunction -> 
    v158 <- CreateNamedVariable 'NaN', 'none'
    Return v158
EndPlainFunction
v159 <- LoadInteger '0'
v160 <- LoadInteger '0'
v161 <- BinaryOperation v159, '/', v160
v162 <- CallFunction v0, [v161, v157]
v163 <- BeginPlainFunction -> 
    v164 <- LoadInteger '0'
    v165 <- LoadInteger '0'
    v166 <- BinaryOperation v164, '/', v165
    Return v166
EndPlainFunction
v167 <- LoadInteger '0'
v168 <- LoadInteger '0'
v169 <- BinaryOperation v167, '/', v168
v170 <- CallFunction v0, [v169, v163]
v171 <- BeginPlainFunction -> 
    v172 <- LoadInteger '0'
    v173 <- LoadInteger '0'
    v174 <- BinaryOperation v172, '/', v173
    v175 <- LoadInteger '0'
    v176 <- LoadInteger '0'
    v177 <- BinaryOperation v175, '/', v176
    v178 <- Compare v174, '==', v177
    Return v178
EndPlainFunction
v179 <- LoadBoolean 'false'
v180 <- CallFunction v0, [v179, v171]
v181 <- BeginPlainFunction -> 
    v182 <- LoadInteger '0'
    v183 <- LoadInteger '0'
    v184 <- BinaryOperation v182, '/', v183
    v185 <- CreateNamedVariable 'NaN', 'none'
    v186 <- Compare v184, '==', v185
    Return v186
EndPlainFunction
v187 <- LoadBoolean 'false'
v188 <- CallFunction v0, [v187, v181]
v189 <- BeginPlainFunction -> 
    v190 <- CreateNamedVariable 'NaN', 'none'
    v191 <- LoadInteger '0'
    v192 <- LoadInteger '0'
    v193 <- BinaryOperation v191, '/', v192
    v194 <- Compare v190, '==', v193
    Return v194
EndPlainFunction
v195 <- LoadBoolean 'false'
v196 <- CallFunction v0, [v195, v189]
v197 <- BeginPlainFunction -> 
    v198 <- LoadString ''
    v199 <- CreateNamedVariable 'NaN', 'none'
    v200 <- BinaryOperation v198, '+', v199
    Return v200
EndPlainFunction
v201 <- LoadString 'NaN'
v202 <- CallFunction v0, [v201, v197]
v203 <- BeginPlainFunction -> 
    v204 <- LoadInteger '0'
    v205 <- LoadInteger '0'
    v206 <- BinaryOperation v204, '/', v205
    v207 <- LoadInteger '0'
    v208 <- LoadInteger '0'
    v209 <- BinaryOperation v207, '/', v208
    v210 <- Compare v206, '===', v209
    Return v210
EndPlainFunction
v211 <- LoadBoolean 'false'
v212 <- CallFunction v0, [v211, v203]
v213 <- BeginPlainFunction -> 
    v214 <- LoadInteger '0'
    v215 <- LoadInteger '0'
    v216 <- BinaryOperation v214, '/', v215
    v217 <- CreateNamedVariable 'NaN', 'none'
    v218 <- Compare v216, '===', v217
    Return v218
EndPlainFunction
v219 <- LoadBoolean 'false'
v220 <- CallFunction v0, [v219, v213]
v221 <- BeginPlainFunction -> 
    v222 <- CreateNamedVariable 'NaN', 'none'
    v223 <- LoadInteger '0'
    v224 <- LoadInteger '0'
    v225 <- BinaryOperation v223, '/', v224
    v226 <- Compare v222, '===', v225
    Return v226
EndPlainFunction
v227 <- LoadBoolean 'false'
v228 <- CallFunction v0, [v227, v221]
v229 <- BeginPlainFunction -> 
    v230 <- LoadThis
    v231 <- GetProperty v230, 'NaN'
    Return v231
EndPlainFunction
v232 <- CallFunction v7, [v229]
v233 <- BeginPlainFunction -> 
    v234 <- LoadInteger '0'
    v235 <- LoadInteger '0'
    v236 <- BinaryOperation v234, '/', v235
    Return v236
EndPlainFunction
v237 <- LoadInteger '0'
v238 <- LoadInteger '0'
v239 <- BinaryOperation v237, '/', v238
v240 <- CallFunction v0, [v239, v233]
v241 <- BeginPlainFunction -> 
    v242 <- LoadInteger '0'
    v243 <- LoadInteger '0'
    v244 <- BinaryOperation v242, '/', v243
    v245 <- LoadInteger '0'
    v246 <- LoadInteger '0'
    v247 <- BinaryOperation v245, '/', v246
    v248 <- Compare v244, '==', v247
    Return v248
EndPlainFunction
v249 <- LoadBoolean 'false'
v250 <- CallFunction v0, [v249, v241]
v251 <- BeginPlainFunction -> 
    v252 <- LoadInteger '0'
    v253 <- LoadInteger '0'
    v254 <- BinaryOperation v252, '/', v253
    v255 <- LoadThis
    v256 <- GetProperty v255, 'NaN'
    v257 <- Compare v254, '==', v256
    Return v257
EndPlainFunction
v258 <- CallFunction v7, [v251]
v259 <- BeginPlainFunction -> 
    v260 <- LoadThis
    v261 <- GetProperty v260, 'NaN'
    v262 <- LoadInteger '0'
    v263 <- LoadInteger '0'
    v264 <- BinaryOperation v262, '/', v263
    v265 <- Compare v261, '==', v264
    Return v265
EndPlainFunction
v266 <- CallFunction v7, [v259]
v267 <- BeginPlainFunction -> 
    v268 <- LoadString ''
    v269 <- LoadThis
    v270 <- GetProperty v269, 'NaN'
    v271 <- BinaryOperation v268, '+', v270
    Return v271
EndPlainFunction
v272 <- CallFunction v7, [v267]
v273 <- BeginPlainFunction -> 
    v274 <- LoadInteger '0'
    v275 <- LoadInteger '0'
    v276 <- BinaryOperation v274, '/', v275
    v277 <- LoadInteger '0'
    v278 <- LoadInteger '0'
    v279 <- BinaryOperation v277, '/', v278
    v280 <- Compare v276, '===', v279
    Return v280
EndPlainFunction
v281 <- LoadBoolean 'false'
v282 <- CallFunction v0, [v281, v273]
v283 <- BeginPlainFunction -> 
    v284 <- LoadInteger '0'
    v285 <- LoadInteger '0'
    v286 <- BinaryOperation v284, '/', v285
    v287 <- LoadThis
    v288 <- GetProperty v287, 'NaN'
    v289 <- Compare v286, '===', v288
    Return v289
EndPlainFunction
v290 <- CallFunction v7, [v283]
v291 <- BeginPlainFunction -> 
    v292 <- LoadThis
    v293 <- GetProperty v292, 'NaN'
    v294 <- LoadInteger '0'
    v295 <- LoadInteger '0'
    v296 <- BinaryOperation v294, '/', v295
    v297 <- Compare v293, '===', v296
    Return v297
EndPlainFunction
v298 <- CallFunction v7, [v291]


function test(a1, a2) {
    a2();
    a2();
    a2();
    a2();
}
function testThrows(a8) {
}
function f1() {
    return NaN;
}
test(0 / 0, f1);
function f2() {
    return 0 / 0;
}
test(0 / 0, f2);
function f3() {
    return (0 / 0) == (0 / 0);
}
test(false, f3);
function f4() {
    return (0 / 0) == NaN;
}
test(false, f4);
function f5() {
    return NaN == (0 / 0);
}
test(false, f5);
function f6() {
    return "" + NaN;
}
test("NaN", f6);
function f7() {
    return (0 / 0) === (0 / 0);
}
test(false, f7);
function f8() {
    return (0 / 0) === NaN;
}
test(false, f8);
function f9() {
    return NaN === (0 / 0);
}
test(false, f9);
function g1() {
    return NaN;
}
test(0 / 0, g1);
function g2() {
    return 0 / 0;
}
test(0 / 0, g2);
function g3() {
    return (0 / 0) == (0 / 0);
}
test(false, g3);
function g4() {
    return (0 / 0) == NaN;
}
test(false, g4);
function g5() {
    return NaN == (0 / 0);
}
test(false, g5);
function g6() {
    return "" + NaN;
}
test("NaN", g6);
function g7() {
    return (0 / 0) === (0 / 0);
}
test(false, g7);
function g8() {
    return (0 / 0) === NaN;
}
test(false, g8);
function g9() {
    return NaN === (0 / 0);
}
test(false, g9);
function f153() {
    NaN = 111;
}
testThrows(f153);
function h1() {
    return NaN;
}
test(0 / 0, h1);
function h2() {
    return 0 / 0;
}
test(0 / 0, h2);
function h3() {
    return (0 / 0) == (0 / 0);
}
test(false, h3);
function h4() {
    return (0 / 0) == NaN;
}
test(false, h4);
function h5() {
    return NaN == (0 / 0);
}
test(false, h5);
function h6() {
    return "" + NaN;
}
test("NaN", h6);
function h7() {
    return (0 / 0) === (0 / 0);
}
test(false, h7);
function h8() {
    return (0 / 0) === NaN;
}
test(false, h8);
function h9() {
    return NaN === (0 / 0);
}
test(false, h9);
function k1() {
    return this.NaN;
}
testThrows(k1);
function k2() {
    return 0 / 0;
}
test(0 / 0, k2);
function k3() {
    return (0 / 0) == (0 / 0);
}
test(false, k3);
function k4() {
    return (0 / 0) == this.NaN;
}
testThrows(k4);
function k5() {
    return this.NaN == (0 / 0);
}
testThrows(k5);
function k6() {
    return "" + this.NaN;
}
testThrows(k6);
function k7() {
    return (0 / 0) === (0 / 0);
}
test(false, k7);
function k8() {
    return (0 / 0) === this.NaN;
}
testThrows(k8);
function k9() {
    return this.NaN === (0 / 0);
}
testThrows(k9);

FuzzIL program written to corpus/global-nan-strict.fzil
