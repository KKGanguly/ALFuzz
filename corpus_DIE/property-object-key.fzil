v0 <- BeginPlainFunction -> 
    v1 <- LoadString 'baz'
    Return v1
EndPlainFunction
BeginObjectLiteral
    ObjectLiteralAddProperty `toString`, v0
v2 <- EndObjectLiteral
v3 <- CreateNamedVariable 'key', 'var', v2
v4 <- LoadInteger '42'
BeginObjectLiteral
    ObjectLiteralAddProperty `baz`, v4
v5 <- EndObjectLiteral
v6 <- CreateNamedVariable 'object', 'var', v5
v7 <- LoadInteger '42'
v8 <- GetComputedProperty v6, v3
v9 <- LoadInteger '87'
SetComputedProperty v6, v3, v9
v10 <- LoadInteger '87'
v11 <- GetComputedProperty v6, v3
v12 <- GetComputedProperty v6, v3
v13 <- UnaryOperation v12, '++'
v14 <- LoadInteger '88'
v15 <- GetComputedProperty v6, v3


function f0() {
    return "baz";
}
var key = { toString: f0 };
var object = { baz: 42 };
object[key];
object[key] = 87;
object[key];
let v12 = object[key];
v12++;
object[key];

FuzzIL program written to corpus/property-object-key.fzil
