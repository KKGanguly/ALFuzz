v0 <- LoadThis
v1 <- GetProperty v0, 'Worker'
BeginIf v1
    v2 <- BeginPlainFunction -> 
        v3 <- CreateNamedVariable 'Object', 'none'
        v4 <- Construct v3, []
        v5 <- LoadThis
        SetProperty v5, 's', v4
    EndPlainFunction
    v6 <- BeginPlainFunction -> 
        v7 <- Construct v2, []
        v8 <- Construct v2, []
        v9 <- CreateArray [v7, v8]
        v10 <- LoadThis
        SetProperty v10, 'l', v9
    EndPlainFunction
    v11 <- Construct v6, []
    v12 <- CreateNamedVariable '__v_6', 'none'
    Reassign v12, v11
    v13 <- CreateNamedVariable 'Worker', 'none'
    v14 <- LoadString ''
    v15 <- LoadString 'string'
    BeginObjectLiteral
        ObjectLiteralAddProperty `type`, v15
    v16 <- EndObjectLiteral
    v17 <- Construct v13, [v14, v16]
    v18 <- CreateNamedVariable '__v_9', 'var', v17
    v19 <- CreateNamedVariable '__v_6', 'none'
    v20 <- CallMethod v18, 'postMessage', [v19]
EndIf


if (this.Worker) {
    function __f_0() {
        const v4 = new Object();
        this.s = v4;
    }
    function __f_1() {
        const v7 = new __f_0();
        const v8 = new __f_0();
        this.l = [v7,v8];
    }
    const v11 = new __f_1();
    __v_6 = v11;
    const v17 = new Worker("", { type: "string" });
    var __v_9 = v17;
    __v_9.postMessage(__v_6);
}

FuzzIL program written to corpus/regress-crbug-503968.fzil
