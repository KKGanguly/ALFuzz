v0 <- BeginPlainFunction -> v1, v2, v3
    v4 <- CallFunction v1, [v2]
    v5 <- CreateNamedVariable 'v2', 'var', v4
    BeginForLoopInitializer
        v6 <- LoadInteger '0'
    BeginForLoopCondition -> v7
        v8 <- LoadInteger '13000'
        v9 <- Compare v7, '<', v8
    BeginForLoopAfterthought v9 -> v10
        v11 <- UnaryOperation v10, '++'
    BeginForLoopBody -> v12
        v13 <- CallFunction v1, [v12]
    EndForLoop
    v14 <- CallFunction v1, [v2]
    v15 <- CreateNamedVariable 'v1', 'var', v14
EndPlainFunction
v16 <- CreateNamedVariable 'Math', 'none'
v17 <- GetProperty v16, 'sin'
v18 <- LoadFloat '6.283185307179586'
v19 <- LoadString 'Math.sin'
v20 <- CallFunction v0, [v17, v18, v19]


function g(a1, a2, a3) {
    var v2 = a1(a2);
    for (let i7 = 0; i7 < 13000; i7++) {
        a1(i7);
    }
    var v1 = a1(a2);
}
g(Math.sin, 6.283185307179586, "Math.sin");

FuzzIL program written to corpus/regress-370384.fzil
