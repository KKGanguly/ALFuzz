v0 <- BeginPlainFunction -> 
    v1 <- LoadInteger '0'
    v2 <- CreateNamedVariable 'sum', 'var', v1
    BeginForLoopInitializer
        v3 <- LoadInteger '0'
    BeginForLoopCondition -> v4
        v5 <- LoadInteger '1000'
        v6 <- Compare v4, '<', v5
    BeginForLoopAfterthought v6 -> v7
        v8 <- UnaryOperation v7, '++'
    BeginForLoopBody -> v9
        v10 <- LoadInteger '2'
        v11 <- BinaryOperation v9, '+', v10
        v12 <- CreateNamedVariable 'x', 'var', v11
        v13 <- LoadInteger '5'
        v14 <- BinaryOperation v12, '+', v13
        v15 <- CreateNamedVariable 'y', 'var', v14
        v16 <- LoadInteger '3'
        v17 <- BinaryOperation v15, '+', v16
        v18 <- CreateNamedVariable 'z', 'var', v17
        Update v2, '+', v18
    EndForLoop
    Return v2
EndPlainFunction
v19 <- BeginPlainFunction -> 
    v20 <- LoadInteger '0'
    v21 <- CreateNamedVariable 'sum', 'var', v20
    BeginForLoopInitializer
        v22 <- LoadInteger '0'
    BeginForLoopCondition -> v23
        v24 <- LoadInteger '1000'
        v25 <- Compare v23, '<', v24
    BeginForLoopAfterthought v25 -> v26
        v27 <- UnaryOperation v26, '++'
    BeginForLoopBody -> v28
        v29 <- LoadInteger '2'
        v30 <- BinaryOperation v28, '+', v29
        v31 <- CreateNamedVariable 'x', 'var', v30
        v32 <- LoadInteger '5'
        v33 <- BinaryOperation v31, '+', v32
        v34 <- CreateNamedVariable 'y', 'var', v33
        v35 <- LoadInteger '3'
        v36 <- BinaryOperation v34, '+', v35
        v37 <- CreateNamedVariable 'z', 'var', v36
        Update v21, '+', v37
    EndForLoop
    Return v21
EndPlainFunction
v38 <- BeginPlainFunction -> 
    v39 <- LoadInteger '0'
    v40 <- CreateNamedVariable 'sum', 'var', v39
    BeginForLoopInitializer
        v41 <- LoadInteger '0'
    BeginForLoopCondition -> v42
        v43 <- LoadInteger '1000'
        v44 <- Compare v42, '<', v43
    BeginForLoopAfterthought v44 -> v45
        v46 <- UnaryOperation v45, '++'
    BeginForLoopBody -> v47
        v48 <- LoadInteger '2'
        v49 <- BinaryOperation v47, '+', v48
        v50 <- CreateNamedVariable 'x', 'var', v49
        v51 <- LoadInteger '5'
        v52 <- BinaryOperation v50, '+', v51
        v53 <- CreateNamedVariable 'y', 'var', v52
        v54 <- LoadInteger '3'
        v55 <- BinaryOperation v53, '+', v54
        v56 <- CreateNamedVariable 'z', 'var', v55
        Update v40, '+', v56
    EndForLoop
    Return v40
EndPlainFunction
v57 <- BeginPlainFunction -> 
    v58 <- LoadInteger '11'
    v59 <- CreateNamedVariable 'j', 'var', v58
    BeginForLoopInitializer
        v60 <- LoadInteger '0'
    BeginForLoopCondition -> v61
        v62 <- LoadInteger '2'
        v63 <- Compare v61, '<', v62
    BeginForLoopAfterthought v63 -> v64
        v65 <- UnaryOperation v64, '++'
    BeginForLoopBody -> v66
        v67 <- LoadInteger '509500'
        v68 <- CallFunction v0, []
    EndForLoop
EndPlainFunction
v69 <- BeginPlainFunction -> 
    BeginForLoopInitializer
        v70 <- LoadInteger '0'
    BeginForLoopCondition -> v71
        v72 <- LoadInteger '2'
        v73 <- Compare v71, '<', v72
    BeginForLoopAfterthought v73 -> v74
        v75 <- UnaryOperation v74, '++'
    BeginForLoopBody -> v76
        v77 <- LoadInteger '11'
        v78 <- CreateNamedVariable 'j', 'var', v77
        v79 <- LoadInteger '12'
        v80 <- CreateNamedVariable 'k', 'var', v79
        v81 <- LoadInteger '509500'
        v82 <- CallFunction v19, []
    EndForLoop
EndPlainFunction
v83 <- BeginPlainFunction -> 
    BeginForLoopInitializer
        v84 <- LoadInteger '0'
    BeginForLoopCondition -> v85
        v86 <- LoadInteger '2'
        v87 <- Compare v85, '<', v86
    BeginForLoopAfterthought v87 -> v88
        v89 <- UnaryOperation v88, '++'
    BeginForLoopBody -> v90
        v91 <- LoadInteger '11'
        v92 <- CreateNamedVariable 'j', 'var', v91
        v93 <- LoadInteger '13'
        v94 <- CreateNamedVariable 'k', 'var', v93
        v95 <- LoadInteger '14'
        v96 <- CreateNamedVariable 'm', 'var', v95
        v97 <- LoadInteger '509500'
        v98 <- CallFunction v38, []
    EndForLoop
EndPlainFunction
v99 <- CallFunction v57, []
v100 <- CallFunction v69, []
v101 <- CallFunction v83, []


function f1() {
    var sum = 0;
    for (let i4 = 0; i4 < 1000; i4++) {
        var x = i4 + 2;
        var y = x + 5;
        var z = y + 3;
        sum += z;
    }
    return sum;
}
function f2() {
    var sum = 0;
    for (let i23 = 0; i23 < 1000; i23++) {
        var x = i23 + 2;
        var y = x + 5;
        var z = y + 3;
        sum += z;
    }
    return sum;
}
function f3() {
    var sum = 0;
    for (let i42 = 0; i42 < 1000; i42++) {
        var x = i42 + 2;
        var y = x + 5;
        var z = y + 3;
        sum += z;
    }
    return sum;
}
function test1() {
    var j = 11;
    for (let i61 = 0; i61 < 2; i61++) {
        f1();
    }
}
function test2() {
    for (let i71 = 0; i71 < 2; i71++) {
        var j = 11;
        var k = 12;
        f2();
    }
}
function test3() {
    for (let i85 = 0; i85 < 2; i85++) {
        var j = 11;
        var k = 13;
        var m = 14;
        f3();
    }
}
test1();
test2();
test3();

FuzzIL program written to corpus/osr-alignment.fzil
