v0 <- BeginPlainFunction -> 
    v1 <- LoadFloat '1.5'
    v2 <- UnaryOperation '-', v1
    BeginObjectLiteral
        ObjectLiteralAddProperty `b`, v2
    v3 <- EndObjectLiteral
    v4 <- CreateNamedVariable 'a', 'var', v3
    BeginForLoopInitializer
        v5 <- LoadInteger '0'
    BeginForLoopCondition -> v6
        v7 <- LoadInteger '1'
        v8 <- Compare v6, '<', v7
    BeginForLoopAfterthought v8 -> v9
        v10 <- UnaryOperation v9, '++'
    BeginForLoopBody -> v11
        v12 <- LoadInteger '1'
        SetProperty v4, 'b', v12
    EndForLoop
    v13 <- LoadInteger '0'
    v14 <- GetProperty v4, 'b'
    v15 <- Compare v13, '<=', v14
EndPlainFunction
v16 <- CallFunction v0, []
v17 <- CallFunction v0, []
v18 <- CallFunction v0, []


function foo() {
    const v2 = -1.5;
    var a = { b: v2 };
    for (let i6 = 0; i6 < 1; i6++) {
        a.b = 1;
    }
    0 <= a.b;
}
foo();
foo();
foo();

FuzzIL program written to corpus/regress-3392.fzil
