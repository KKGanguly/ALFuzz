v0 <- BeginPlainFunction -> v1, v2
    v3 <- GetComputedProperty v1, v2
    v4 <- LoadFloat '0.5'
    v5 <- BinaryOperation v3, '+', v4
    Return v5
EndPlainFunction
v6 <- LoadInteger '0'
v7 <- LoadUndefined
v8 <- LoadFloat '2.5'
v9 <- CreateArray [v6, v7, v8]
v10 <- CreateNamedVariable 'arr', 'var', v9
v11 <- LoadFloat '0.5'
v12 <- LoadInteger '0'
v13 <- CallFunction v0, [v10, v12]
v14 <- LoadFloat '0.5'
v15 <- LoadInteger '0'
v16 <- CallFunction v0, [v10, v15]
v17 <- LoadFloat '1.5'
v18 <- CreateNamedVariable 'Array', 'none'
v19 <- GetProperty v18, 'prototype'
v20 <- GetProperty v19, '__proto__'
SetElement v20, '1', v17
v21 <- LoadInteger '2'
v22 <- LoadInteger '1'
v23 <- CallFunction v0, [v10, v22]
v24 <- LoadInteger '2'
v25 <- LoadInteger '1'
v26 <- CallFunction v0, [v10, v25]
v27 <- LoadFloat '0.5'
v28 <- LoadInteger '0'
v29 <- CallFunction v0, [v10, v28]


function f1(a1, a2) {
    return a1[a2] + 0.5;
}
var arr = [0,,2.5];
f1(arr, 0);
f1(arr, 0);
const t4 = Array.prototype.__proto__;
t4[1] = 1.5;
f1(arr, 1);
f1(arr, 1);
f1(arr, 0);

FuzzIL program written to corpus/elide-double-hole-check-7.fzil
