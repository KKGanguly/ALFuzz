v0 <- BeginPlainFunction -> v1, v2, v3
    v4 <- LoadInteger '0'
    v5 <- Compare v1, '==', v4
    v6 <- LoadInteger '0'
    v7 <- Compare v2, '==', v6
    v8 <- BinaryOperation v5, '||', v7
    BeginIf v8
        Return v1
    EndIf
    v9 <- BinaryOperation v1, '+', v3
    Return v9
EndPlainFunction
v10 <- LoadInteger '0'
v11 <- LoadInteger '0'
v12 <- LoadInteger '0'
v13 <- LoadInteger '0'
v14 <- CallFunction v0, [v11, v12, v13]
v15 <- LoadInteger '0'
v16 <- LoadInteger '0'
v17 <- LoadInteger '1'
v18 <- LoadInteger '0'
v19 <- CallFunction v0, [v16, v17, v18]
v20 <- LoadInteger '1'
v21 <- LoadInteger '1'
v22 <- LoadInteger '0'
v23 <- LoadInteger '0'
v24 <- CallFunction v0, [v21, v22, v23]
v25 <- LoadInteger '2'
v26 <- LoadInteger '2'
v27 <- LoadInteger '1'
v28 <- LoadInteger '0'
v29 <- CallFunction v0, [v26, v27, v28]
v30 <- LoadFloat '1.5'
v31 <- LoadInteger '1'
v32 <- LoadInteger '1'
v33 <- LoadFloat '0.5'
v34 <- CallFunction v0, [v31, v32, v33]
v35 <- LoadFloat '2.5'
v36 <- LoadInteger '2'
v37 <- LoadInteger '1'
v38 <- LoadFloat '0.5'
v39 <- CallFunction v0, [v36, v37, v38]


function f(a1, a2, a3) {
    if ((a1 == 0) || (a2 == 0)) {
        return a1;
    }
    return a1 + a3;
}
f(0, 0, 0);
f(0, 1, 0);
f(1, 0, 0);
f(2, 1, 0);
f(1, 1, 0.5);
f(2, 1, 0.5);

FuzzIL program written to corpus/regress-6.fzil
