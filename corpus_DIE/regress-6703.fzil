v0 <- LoadString 'µ'
v1 <- LoadRegExp '(\u039C)' 'i'
v2 <- CallMethod v1, 'test', [v0]
v3 <- LoadString 'µ'
v4 <- LoadRegExp '(\u039C)+' 'i'
v5 <- CallMethod v4, 'test', [v3]
v6 <- LoadString 'µ'
v7 <- LoadRegExp '(\u039C)' 'ui'
v8 <- CallMethod v7, 'test', [v6]
v9 <- LoadString 'µ'
v10 <- LoadRegExp '(\u039C)+' 'ui'
v11 <- CallMethod v10, 'test', [v9]
v12 <- LoadString 'µ'
v13 <- LoadRegExp '(\u03BC)' 'i'
v14 <- CallMethod v13, 'test', [v12]
v15 <- LoadString 'µ'
v16 <- LoadRegExp '(\u03BC)+' 'i'
v17 <- CallMethod v16, 'test', [v15]
v18 <- LoadString 'µ'
v19 <- LoadRegExp '(\u03BC)' 'ui'
v20 <- CallMethod v19, 'test', [v18]
v21 <- LoadString 'µ'
v22 <- LoadRegExp '(\u03BC)+' 'ui'
v23 <- CallMethod v22, 'test', [v21]
v24 <- LoadString 'Μ'
v25 <- LoadRegExp '(\u03BC)' 'i'
v26 <- CallMethod v25, 'test', [v24]
v27 <- LoadString 'Μ'
v28 <- LoadRegExp '(\u03BC)+' 'i'
v29 <- CallMethod v28, 'test', [v27]
v30 <- LoadString 'Μ'
v31 <- LoadRegExp '(\u03BC)' 'ui'
v32 <- CallMethod v31, 'test', [v30]
v33 <- LoadString 'Μ'
v34 <- LoadRegExp '(\u03BC)+' 'ui'
v35 <- CallMethod v34, 'test', [v33]
v36 <- LoadString 'ÿ'
v37 <- LoadRegExp '(\u0178)' 'i'
v38 <- CallMethod v37, 'test', [v36]
v39 <- LoadString 'ÿ'
v40 <- LoadRegExp '(\u0178)+' 'i'
v41 <- CallMethod v40, 'test', [v39]
v42 <- LoadString 'ÿ'
v43 <- LoadRegExp '(\u0178)' 'ui'
v44 <- CallMethod v43, 'test', [v42]
v45 <- LoadString 'ÿ'
v46 <- LoadRegExp '(\u0178)+' 'ui'
v47 <- CallMethod v46, 'test', [v45]


/(\u039C)/i.test("µ");
/(\u039C)+/i.test("µ");
/(\u039C)/ui.test("µ");
/(\u039C)+/ui.test("µ");
/(\u03BC)/i.test("µ");
/(\u03BC)+/i.test("µ");
/(\u03BC)/ui.test("µ");
/(\u03BC)+/ui.test("µ");
/(\u03BC)/i.test("Μ");
/(\u03BC)+/i.test("Μ");
/(\u03BC)/ui.test("Μ");
/(\u03BC)+/ui.test("Μ");
/(\u0178)/i.test("ÿ");
/(\u0178)+/i.test("ÿ");
/(\u0178)/ui.test("ÿ");
/(\u0178)+/ui.test("ÿ");

FuzzIL program written to corpus/regress-6703.fzil
