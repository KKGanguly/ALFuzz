v0 <- BeginPlainFunction -> 
    v1 <- LoadInteger '0'
    v2 <- CreateNamedVariable 'j', 'var', v1
    BeginForLoopInitializer
        v3 <- LoadInteger '0'
    BeginForLoopCondition -> v4
        v5 <- LoadInteger '80000'
        v6 <- Compare v4, '<', v5
    BeginForLoopAfterthought v6 -> v7
        v8 <- UnaryOperation v7, '++'
    BeginForLoopBody -> v9
        v10 <- UnaryOperation v2, '++'
    EndForLoop
    v11 <- BeginPlainFunction -> v12
        v13 <- LoadInteger '2'
        v14 <- UnaryOperation '-', v13
        v15 <- LoadInteger '0'
        v16 <- BinaryOperation v14, '>>>', v15
        v17 <- BinaryOperation v12, '>>', v16
        Return v17
    EndPlainFunction
    v18 <- LoadInteger '2147483648'
    v19 <- CreateNamedVariable 'K3', 'var', v18
    v20 <- LoadInteger '2'
    v21 <- UnaryOperation '-', v20
    v22 <- LoadInteger '0'
    v23 <- BinaryOperation v19, '|', v22
    v24 <- CallFunction v11, [v23]
    v25 <- LoadInteger '2'
    v26 <- UnaryOperation '-', v25
    v27 <- LoadInteger '0'
    v28 <- BinaryOperation v19, '|', v27
    v29 <- CallFunction v11, [v28]
    v30 <- LoadInteger '2'
    v31 <- UnaryOperation '-', v30
    v32 <- LoadInteger '0'
    v33 <- BinaryOperation v19, '|', v32
    v34 <- CallFunction v11, [v33]
EndPlainFunction
v35 <- CallFunction v0, []


function test() {
    var j = 0;
    for (let i4 = 0; i4 < 80000; i4++) {
        j++;
    }
    function SarShr(a12) {
        return a12 >> (-2 >>> 0);
    }
    var K3 = 2147483648;
    -2;
    SarShr(K3 | 0);
    -2;
    SarShr(K3 | 0);
    -2;
    SarShr(K3 | 0);
}
test();

FuzzIL program written to corpus/osr-sar.fzil
