v0 <- LoadThis
v1 <- GetProperty v0, 'Intl'
BeginIf v1
    v2 <- CreateNamedVariable 'Intl', 'none'
    v3 <- GetProperty v2, 'NumberFormat'
    v4 <- Construct v3, []
    v5 <- CreateNamedVariable 'v5', 'none'
    Reassign v5, v4
    v6 <- GetProperty v2, 'DateTimeFormat'
    v7 <- Construct v6, []
    v8 <- CreateNamedVariable 'v9', 'none'
    Reassign v8, v7
    v9 <- CreateNamedVariable 'v9', 'none'
    v10 <- LoadString 'formatToParts'
    v11 <- GetComputedProperty v9, v10
    v12 <- CreateNamedVariable 'v52', 'none'
    Reassign v12, v11
    BeginObjectLiteral
    v13 <- EndObjectLiteral
    v14 <- CreateNamedVariable 'v55', 'var', v13
    v15 <- BeginArrowFunction -> 
        v16 <- CreateNamedVariable 'v52', 'none'
        v17 <- CreateNamedVariable 'v5', 'none'
        v18 <- CreateNamedVariable 'Reflect', 'none'
        v19 <- CallMethod v18, 'apply', [v16, v17, v14]
        Return v19
    EndArrowFunction
    v20 <- CallFunction v15, []
    v21 <- CreateNamedVariable 'TypeError', 'none'
EndIf


if (this.Intl) {
    const t1 = Intl.NumberFormat;
    const v4 = new t1();
    v5 = v4;
    const t3 = Intl.DateTimeFormat;
    const v7 = new t3();
    v9 = v7;
    v52 = v9["formatToParts"];
    var v55 = {};
    const v15 = () => {
        return Reflect.apply(v52, v5, v55);
    };
    v15();
}

FuzzIL program written to corpus/regress-677055.fzil
