v0 <- BeginPlainFunction -> v1, v2
    v3 <- LoadInteger '0'
    v4 <- BinaryOperation v1, '|', v3
    Reassign v1, v4
    v5 <- LoadInteger '0'
    v6 <- BinaryOperation v2, '|', v5
    Reassign v2, v6
    v7 <- BinaryOperation v1, '-', v2
    v8 <- CreateNamedVariable '$sub', 'var', v7
    v9 <- LoadInteger '0'
    v10 <- BinaryOperation v8, '|', v9
    v11 <- LoadInteger '0'
    v12 <- Compare v10, '<', v11
    Return v12
EndPlainFunction
v13 <- LoadInteger '2147483647'
v14 <- LoadInteger '1'
v15 <- UnaryOperation '-', v14
v16 <- CallFunction v0, [v13, v15]


function foo(a1, a2) {
    var $sub = (a1 = a1 | 0) - (a2 = a2 | 0);
    return ($sub | 0) < 0;
}
foo(2147483647, -1);

FuzzIL program written to corpus/regress-5129.fzil
