v0 <- BeginPlainFunction -> v1, v2
    v3 <- BinaryOperation v1, '+', v2
    Return v3
EndPlainFunction
v4 <- BeginPlainFunction -> v5, v6
    v7 <- BinaryOperation v5, '-', v6
    Return v7
EndPlainFunction
v8 <- BeginPlainFunction -> v9, v10
    v11 <- BinaryOperation v9, '*', v10
    Return v11
EndPlainFunction
v12 <- BeginPlainFunction -> v13, v14
    v15 <- BinaryOperation v13, '/', v14
    Return v15
EndPlainFunction
BeginForLoopInitializer
    v16 <- LoadInteger '0'
BeginForLoopCondition -> v17
    v18 <- LoadInteger '10'
    v19 <- Compare v17, '<', v18
BeginForLoopAfterthought v19 -> v20
    v21 <- UnaryOperation v20, '++'
BeginForLoopBody -> v22
    v23 <- LoadInteger '0'
    v24 <- LoadInteger '0'
    v25 <- LoadInteger '0'
    v26 <- CallFunction v0, [v24, v25]
    v27 <- LoadInteger '0'
    v28 <- LoadInteger '0'
    v29 <- LoadInteger '0'
    v30 <- UnaryOperation '-', v29
    v31 <- CallFunction v0, [v28, v30]
    v32 <- LoadInteger '0'
    v33 <- LoadInteger '0'
    v34 <- UnaryOperation '-', v33
    v35 <- LoadInteger '0'
    v36 <- CallFunction v0, [v34, v35]
    v37 <- LoadInteger '0'
    v38 <- UnaryOperation '-', v37
    v39 <- LoadInteger '0'
    v40 <- UnaryOperation '-', v39
    v41 <- LoadInteger '0'
    v42 <- UnaryOperation '-', v41
    v43 <- CallFunction v0, [v40, v42]
    v44 <- LoadInteger '0'
    v45 <- LoadInteger '0'
    v46 <- LoadInteger '0'
    v47 <- CallFunction v4, [v45, v46]
    v48 <- LoadInteger '0'
    v49 <- LoadInteger '0'
    v50 <- LoadInteger '0'
    v51 <- UnaryOperation '-', v50
    v52 <- CallFunction v4, [v49, v51]
    v53 <- LoadInteger '0'
    v54 <- UnaryOperation '-', v53
    v55 <- LoadInteger '0'
    v56 <- UnaryOperation '-', v55
    v57 <- LoadInteger '0'
    v58 <- CallFunction v4, [v56, v57]
    v59 <- LoadInteger '0'
    v60 <- LoadInteger '0'
    v61 <- UnaryOperation '-', v60
    v62 <- LoadInteger '0'
    v63 <- UnaryOperation '-', v62
    v64 <- CallFunction v4, [v61, v63]
    v65 <- LoadInteger '0'
    v66 <- LoadInteger '0'
    v67 <- LoadInteger '0'
    v68 <- CallFunction v8, [v66, v67]
    v69 <- LoadInteger '0'
    v70 <- UnaryOperation '-', v69
    v71 <- LoadInteger '0'
    v72 <- LoadInteger '0'
    v73 <- UnaryOperation '-', v72
    v74 <- CallFunction v8, [v71, v73]
    v75 <- LoadInteger '0'
    v76 <- UnaryOperation '-', v75
    v77 <- LoadInteger '0'
    v78 <- UnaryOperation '-', v77
    v79 <- LoadInteger '0'
    v80 <- CallFunction v8, [v78, v79]
    v81 <- LoadInteger '0'
    v82 <- LoadInteger '0'
    v83 <- UnaryOperation '-', v82
    v84 <- LoadInteger '0'
    v85 <- UnaryOperation '-', v84
    v86 <- CallFunction v8, [v83, v85]
    v87 <- LoadInteger '0'
    v88 <- LoadInteger '0'
    v89 <- LoadInteger '1'
    v90 <- CallFunction v12, [v88, v89]
    v91 <- LoadInteger '0'
    v92 <- UnaryOperation '-', v91
    v93 <- LoadInteger '0'
    v94 <- LoadInteger '1'
    v95 <- UnaryOperation '-', v94
    v96 <- CallFunction v12, [v93, v95]
    v97 <- LoadInteger '0'
    v98 <- UnaryOperation '-', v97
    v99 <- LoadInteger '0'
    v100 <- UnaryOperation '-', v99
    v101 <- LoadInteger '1'
    v102 <- CallFunction v12, [v100, v101]
    v103 <- LoadInteger '0'
    v104 <- LoadInteger '0'
    v105 <- UnaryOperation '-', v104
    v106 <- LoadInteger '1'
    v107 <- UnaryOperation '-', v106
    v108 <- CallFunction v12, [v105, v107]
EndForLoop


function add(a1, a2) {
    return a1 + a2;
}
function sub(a5, a6) {
    return a5 - a6;
}
function mul(a9, a10) {
    return a9 * a10;
}
function div(a13, a14) {
    return a13 / a14;
}
for (let i17 = 0; i17 < 10; i17++) {
    add(0, 0);
    add(0, -0);
    add(-0, 0);
    -0;
    add(-0, -0);
    sub(0, 0);
    sub(0, -0);
    -0;
    sub(-0, 0);
    sub(-0, -0);
    mul(0, 0);
    -0;
    mul(0, -0);
    -0;
    mul(-0, 0);
    mul(-0, -0);
    div(0, 1);
    -0;
    div(0, -1);
    -0;
    div(-0, 1);
    div(-0, -1);
}

FuzzIL program written to corpus/regress-1278.fzil
