v0 <- CreateNamedVariable 'RegExp', 'none'
v1 <- BeginClassDefinition v0
    BeginClassInstanceMethod 'exec' -> v2, v3
        v4 <- GetSuperProperty 'exec'
        v5 <- CallMethod v4, 'call', [v2, v3]
        v6 <- CreateNamedVariable 'r', 'const', v5
        BeginIf v6
            v7 <- LoadInteger '0'
            SetElement v6, '0', v7
        EndIf
        Return v6
    EndClassInstanceMethod
EndClassDefinition
v8 <- LoadString '.'
v9 <- LoadString 'g'
v10 <- Construct v1, [v8, v9]
v11 <- LoadString 'a'
v12 <- CallMethod v11, 'match', [v10]
v13 <- CreateNamedVariable 'result', 'const', v12
v14 <- LoadString '0'
v15 <- CreateArray [v14]


class C1 extends RegExp {
    exec(a3) {
        const r = super.exec.call(this, a3);
        if (r) {
            r[0] = 0;
        }
        return r;
    }
}
const v10 = new C1(".", "g");
const result = ("a").match(v10);
["0"];

FuzzIL program written to corpus/regress-crbug-831943.fzil
