v0 <- LoadInteger '0'
v1 <- CreateNamedVariable 'x', 'var', v0
v2 <- LoadInteger '42'
Reassign v1, v2
v3 <- BeginPlainFunction -> v4, v5
    v6 <- Compare v4, '<', v4
    v7 <- CreateNamedVariable 'y', 'let', v6
    BeginIf v5
        Reassign v1, v7
    EndIf
EndPlainFunction
v8 <- LoadInteger '1'
v9 <- LoadBoolean 'false'
v10 <- CallFunction v3, [v8, v9]
v11 <- LoadInteger '1'
v12 <- LoadBoolean 'false'
v13 <- CallFunction v3, [v11, v12]
v14 <- LoadInteger '1'
v15 <- LoadBoolean 'true'
v16 <- CallFunction v3, [v14, v15]


var x = 0;
x = 42;
function foo(a4, a5) {
    let y = a4 < a4;
    if (a5) {
        x = y;
    }
}
foo(1, false);
foo(1, false);
foo(1, true);

FuzzIL program written to corpus/regress-7740.fzil
