v0 <- BeginPlainFunction -> v1, v2
    v3 <- CallMethod v1, 'push', [v2]
EndPlainFunction
v4 <- BeginPlainFunction -> v5
    v6 <- CallMethod v5, 'pop', []
    Return v6
EndPlainFunction
v7 <- LoadInteger '2'
v8 <- LoadInteger '2'
v9 <- CreateArray [v7, v8]
v10 <- CreateNamedVariable 'array', 'var', v9
v11 <- CreateNamedVariable 'Object', 'none'
v12 <- CallMethod v11, 'freeze', [v10]
BeginTry
    v13 <- LoadInteger '1'
    v14 <- CallFunction v0, [v10, v13]
BeginCatch -> v15
EndTryCatch
v16 <- LoadInteger '2'
v17 <- GetProperty v10, 'length'
BeginTry
    v18 <- LoadInteger '1'
    v19 <- CallFunction v0, [v10, v18]
BeginCatch -> v20
EndTryCatch
v21 <- LoadInteger '2'
v22 <- GetProperty v10, 'length'
BeginTry
    v23 <- LoadInteger '1'
    v24 <- CallFunction v0, [v10, v23]
BeginCatch -> v25
EndTryCatch
v26 <- LoadInteger '2'
v27 <- GetProperty v10, 'length'
BeginTry
    v28 <- LoadInteger '1'
    v29 <- CallFunction v0, [v10, v28]
BeginCatch -> v30
EndTryCatch
v31 <- LoadInteger '2'
v32 <- GetProperty v10, 'length'
BeginTry
    v33 <- CallFunction v4, [v10]
BeginCatch -> v34
EndTryCatch
v35 <- LoadInteger '2'
v36 <- GetProperty v10, 'length'
BeginTry
    v37 <- CallFunction v4, [v10]
BeginCatch -> v38
EndTryCatch
v39 <- LoadInteger '2'
v40 <- GetProperty v10, 'length'
BeginTry
    v41 <- CallFunction v4, [v10]
BeginCatch -> v42
EndTryCatch
v43 <- LoadInteger '2'
v44 <- GetProperty v10, 'length'
BeginTry
    v45 <- CallFunction v4, [v10]
BeginCatch -> v46
EndTryCatch
v47 <- LoadInteger '2'
v48 <- GetProperty v10, 'length'


function push_wrapper(a1, a2) {
    a1.push(a2);
}
function pop_wrapper(a5) {
    return a5.pop();
}
var array = [2,2];
Object.freeze(array);
try {
    push_wrapper(array, 1);
} catch(e15) {
}
array.length;
try {
    push_wrapper(array, 1);
} catch(e20) {
}
array.length;
try {
    push_wrapper(array, 1);
} catch(e25) {
}
array.length;
try {
    push_wrapper(array, 1);
} catch(e30) {
}
array.length;
try {
    pop_wrapper(array);
} catch(e34) {
}
array.length;
try {
    pop_wrapper(array);
} catch(e38) {
}
array.length;
try {
    pop_wrapper(array);
} catch(e42) {
}
array.length;
try {
    pop_wrapper(array);
} catch(e46) {
}
array.length;

FuzzIL program written to corpus/array-push8.fzil
