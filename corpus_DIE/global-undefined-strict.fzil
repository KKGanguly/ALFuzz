v0 <- BeginPlainFunction -> v1, v2
    v3 <- CallFunction v2, []
    v4 <- CallFunction v2, []
    v5 <- CallFunction v2, []
    v6 <- CallFunction v2, []
EndPlainFunction
v7 <- BeginPlainFunction -> v8
EndPlainFunction
v9 <- BeginPlainFunction -> 
    v10 <- LoadUndefined
    Return v10
EndPlainFunction
v11 <- LoadInteger '0'
v12 <- Void_ v11
v13 <- CallFunction v0, [v12, v9]
v14 <- BeginPlainFunction -> 
    v15 <- LoadInteger '0'
    v16 <- Void_ v15
    Return v16
EndPlainFunction
v17 <- LoadInteger '0'
v18 <- Void_ v17
v19 <- CallFunction v0, [v18, v14]
v20 <- BeginPlainFunction -> 
    v21 <- LoadInteger '0'
    v22 <- Void_ v21
    v23 <- LoadInteger '0'
    v24 <- Void_ v23
    v25 <- Compare v22, '==', v24
    Return v25
EndPlainFunction
v26 <- LoadBoolean 'true'
v27 <- CallFunction v0, [v26, v20]
v28 <- BeginPlainFunction -> 
    v29 <- LoadInteger '0'
    v30 <- Void_ v29
    v31 <- LoadUndefined
    v32 <- Compare v30, '==', v31
    Return v32
EndPlainFunction
v33 <- LoadBoolean 'true'
v34 <- CallFunction v0, [v33, v28]
v35 <- BeginPlainFunction -> 
    v36 <- LoadUndefined
    v37 <- LoadInteger '0'
    v38 <- Void_ v37
    v39 <- Compare v36, '==', v38
    Return v39
EndPlainFunction
v40 <- LoadBoolean 'true'
v41 <- CallFunction v0, [v40, v35]
v42 <- BeginPlainFunction -> 
    v43 <- LoadString ''
    v44 <- LoadUndefined
    v45 <- BinaryOperation v43, '+', v44
    Return v45
EndPlainFunction
v46 <- LoadString 'undefined'
v47 <- CallFunction v0, [v46, v42]
v48 <- BeginPlainFunction -> 
    v49 <- LoadInteger '0'
    v50 <- Void_ v49
    v51 <- LoadInteger '0'
    v52 <- Void_ v51
    v53 <- Compare v50, '===', v52
    Return v53
EndPlainFunction
v54 <- LoadBoolean 'true'
v55 <- CallFunction v0, [v54, v48]
v56 <- BeginPlainFunction -> 
    v57 <- LoadInteger '0'
    v58 <- Void_ v57
    v59 <- LoadUndefined
    v60 <- Compare v58, '===', v59
    Return v60
EndPlainFunction
v61 <- LoadBoolean 'true'
v62 <- CallFunction v0, [v61, v56]
v63 <- BeginPlainFunction -> 
    v64 <- LoadUndefined
    v65 <- LoadInteger '0'
    v66 <- Void_ v65
    v67 <- Compare v64, '===', v66
    Return v67
EndPlainFunction
v68 <- LoadBoolean 'true'
v69 <- CallFunction v0, [v68, v63]
v70 <- BeginPlainFunction -> 
    v71 <- LoadThis
    Return v71
EndPlainFunction
v72 <- LoadInteger '0'
v73 <- Void_ v72
v74 <- CallFunction v0, [v73, v70]
v75 <- BeginPlainFunction -> 
    v76 <- LoadInteger '0'
    v77 <- Void_ v76
    Return v77
EndPlainFunction
v78 <- LoadInteger '0'
v79 <- Void_ v78
v80 <- CallFunction v0, [v79, v75]
v81 <- BeginPlainFunction -> 
    v82 <- LoadInteger '0'
    v83 <- Void_ v82
    v84 <- LoadInteger '0'
    v85 <- Void_ v84
    v86 <- Compare v83, '==', v85
    Return v86
EndPlainFunction
v87 <- LoadBoolean 'true'
v88 <- CallFunction v0, [v87, v81]
v89 <- BeginPlainFunction -> 
    v90 <- LoadInteger '0'
    v91 <- Void_ v90
    v92 <- LoadThis
    v93 <- Compare v91, '==', v92
    Return v93
EndPlainFunction
v94 <- LoadBoolean 'true'
v95 <- CallFunction v0, [v94, v89]
v96 <- BeginPlainFunction -> 
    v97 <- LoadThis
    v98 <- LoadInteger '0'
    v99 <- Void_ v98
    v100 <- Compare v97, '==', v99
    Return v100
EndPlainFunction
v101 <- LoadBoolean 'true'
v102 <- CallFunction v0, [v101, v96]
v103 <- BeginPlainFunction -> 
    v104 <- LoadString ''
    v105 <- LoadThis
    v106 <- BinaryOperation v104, '+', v105
    Return v106
EndPlainFunction
v107 <- LoadString 'undefined'
v108 <- CallFunction v0, [v107, v103]
v109 <- BeginPlainFunction -> 
    v110 <- LoadInteger '0'
    v111 <- Void_ v110
    v112 <- LoadInteger '0'
    v113 <- Void_ v112
    v114 <- Compare v111, '===', v113
    Return v114
EndPlainFunction
v115 <- LoadBoolean 'true'
v116 <- CallFunction v0, [v115, v109]
v117 <- BeginPlainFunction -> 
    v118 <- LoadInteger '0'
    v119 <- Void_ v118
    v120 <- LoadThis
    v121 <- Compare v119, '===', v120
    Return v121
EndPlainFunction
v122 <- LoadBoolean 'true'
v123 <- CallFunction v0, [v122, v117]
v124 <- BeginPlainFunction -> 
    v125 <- LoadThis
    v126 <- LoadInteger '0'
    v127 <- Void_ v126
    v128 <- Compare v125, '===', v127
    Return v128
EndPlainFunction
v129 <- LoadBoolean 'true'
v130 <- CallFunction v0, [v129, v124]
v131 <- BeginPlainFunction -> 
    v132 <- LoadInteger '111'
    v133 <- CreateNamedVariable 'undefined', 'none'
    Reassign v133, v132
EndPlainFunction
v134 <- CallFunction v7, [v131]
v135 <- BeginPlainFunction -> 
    v136 <- LoadUndefined
    Return v136
EndPlainFunction
v137 <- LoadInteger '0'
v138 <- Void_ v137
v139 <- CallFunction v0, [v138, v135]
v140 <- BeginPlainFunction -> 
    v141 <- LoadInteger '0'
    v142 <- Void_ v141
    Return v142
EndPlainFunction
v143 <- LoadInteger '0'
v144 <- Void_ v143
v145 <- CallFunction v0, [v144, v140]
v146 <- BeginPlainFunction -> 
    v147 <- LoadInteger '0'
    v148 <- Void_ v147
    v149 <- LoadInteger '0'
    v150 <- Void_ v149
    v151 <- Compare v148, '==', v150
    Return v151
EndPlainFunction
v152 <- LoadBoolean 'true'
v153 <- CallFunction v0, [v152, v146]
v154 <- BeginPlainFunction -> 
    v155 <- LoadInteger '0'
    v156 <- Void_ v155
    v157 <- LoadUndefined
    v158 <- Compare v156, '==', v157
    Return v158
EndPlainFunction
v159 <- LoadBoolean 'true'
v160 <- CallFunction v0, [v159, v154]
v161 <- BeginPlainFunction -> 
    v162 <- LoadUndefined
    v163 <- LoadInteger '0'
    v164 <- Void_ v163
    v165 <- Compare v162, '==', v164
    Return v165
EndPlainFunction
v166 <- LoadBoolean 'true'
v167 <- CallFunction v0, [v166, v161]
v168 <- BeginPlainFunction -> 
    v169 <- LoadString ''
    v170 <- LoadUndefined
    v171 <- BinaryOperation v169, '+', v170
    Return v171
EndPlainFunction
v172 <- LoadString 'undefined'
v173 <- CallFunction v0, [v172, v168]
v174 <- BeginPlainFunction -> 
    v175 <- LoadInteger '0'
    v176 <- Void_ v175
    v177 <- LoadInteger '0'
    v178 <- Void_ v177
    v179 <- Compare v176, '===', v178
    Return v179
EndPlainFunction
v180 <- LoadBoolean 'true'
v181 <- CallFunction v0, [v180, v174]
v182 <- BeginPlainFunction -> 
    v183 <- LoadInteger '0'
    v184 <- Void_ v183
    v185 <- LoadUndefined
    v186 <- Compare v184, '===', v185
    Return v186
EndPlainFunction
v187 <- LoadBoolean 'true'
v188 <- CallFunction v0, [v187, v182]
v189 <- BeginPlainFunction -> 
    v190 <- LoadUndefined
    v191 <- LoadInteger '0'
    v192 <- Void_ v191
    v193 <- Compare v190, '===', v192
    Return v193
EndPlainFunction
v194 <- LoadBoolean 'true'
v195 <- CallFunction v0, [v194, v189]
v196 <- BeginPlainFunction -> 
    v197 <- LoadThis
    Return v197
EndPlainFunction
v198 <- LoadInteger '0'
v199 <- Void_ v198
v200 <- CallFunction v0, [v199, v196]
v201 <- BeginPlainFunction -> 
    v202 <- LoadInteger '0'
    v203 <- Void_ v202
    Return v203
EndPlainFunction
v204 <- LoadInteger '0'
v205 <- Void_ v204
v206 <- CallFunction v0, [v205, v201]
v207 <- BeginPlainFunction -> 
    v208 <- LoadThis
    v209 <- LoadUndefined
    v210 <- Compare v208, '===', v209
    Return v210
EndPlainFunction
v211 <- LoadBoolean 'true'
v212 <- CallFunction v0, [v211, v207]
v213 <- BeginPlainFunction -> 
    v214 <- LoadInteger '0'
    v215 <- Void_ v214
    v216 <- LoadThis
    v217 <- Compare v215, '===', v216
    Return v217
EndPlainFunction
v218 <- LoadBoolean 'true'
v219 <- CallFunction v0, [v218, v213]
v220 <- BeginPlainFunction -> 
    v221 <- LoadThis
    v222 <- LoadInteger '0'
    v223 <- Void_ v222
    v224 <- Compare v221, '===', v223
    Return v224
EndPlainFunction
v225 <- LoadBoolean 'true'
v226 <- CallFunction v0, [v225, v220]
v227 <- BeginPlainFunction -> 
    v228 <- LoadString ''
    v229 <- LoadThis
    v230 <- BinaryOperation v228, '+', v229
    Return v230
EndPlainFunction
v231 <- LoadString 'undefined'
v232 <- CallFunction v0, [v231, v227]
v233 <- BeginPlainFunction -> 
    v234 <- LoadInteger '0'
    v235 <- Void_ v234
    v236 <- LoadInteger '0'
    v237 <- Void_ v236
    v238 <- Compare v235, '===', v237
    Return v238
EndPlainFunction
v239 <- LoadBoolean 'true'
v240 <- CallFunction v0, [v239, v233]
v241 <- BeginPlainFunction -> 
    v242 <- LoadInteger '0'
    v243 <- Void_ v242
    v244 <- LoadThis
    v245 <- Compare v243, '===', v244
    Return v245
EndPlainFunction
v246 <- LoadBoolean 'true'
v247 <- CallFunction v0, [v246, v241]
v248 <- BeginPlainFunction -> 
    v249 <- LoadThis
    v250 <- LoadInteger '0'
    v251 <- Void_ v250
    v252 <- Compare v249, '===', v251
    Return v252
EndPlainFunction
v253 <- LoadBoolean 'true'
v254 <- CallFunction v0, [v253, v248]
v255 <- BeginPlainFunction -> 
    v256 <- LoadThis
    v257 <- GetProperty v256, 'undefined'
    Return v257
EndPlainFunction
v258 <- CallFunction v7, [v255]
v259 <- BeginPlainFunction -> 
    v260 <- LoadInteger '0'
    v261 <- Void_ v260
    Return v261
EndPlainFunction
v262 <- LoadInteger '0'
v263 <- Void_ v262
v264 <- CallFunction v0, [v263, v259]
v265 <- BeginPlainFunction -> 
    v266 <- LoadThis
    v267 <- LoadUndefined
    v268 <- Compare v266, '===', v267
    Return v268
EndPlainFunction
v269 <- LoadBoolean 'true'
v270 <- CallFunction v0, [v269, v265]
v271 <- BeginPlainFunction -> 
    v272 <- LoadInteger '0'
    v273 <- Void_ v272
    v274 <- LoadThis
    v275 <- GetProperty v274, 'undefined'
    v276 <- Compare v273, '===', v275
    Return v276
EndPlainFunction
v277 <- CallFunction v7, [v271]
v278 <- BeginPlainFunction -> 
    v279 <- LoadThis
    v280 <- GetProperty v279, 'undefined'
    v281 <- LoadInteger '0'
    v282 <- Void_ v281
    v283 <- Compare v280, '==', v282
    Return v283
EndPlainFunction
v284 <- CallFunction v7, [v278]
v285 <- BeginPlainFunction -> 
    v286 <- LoadString ''
    v287 <- LoadThis
    v288 <- GetProperty v287, 'undefined'
    v289 <- BinaryOperation v286, '+', v288
    Return v289
EndPlainFunction
v290 <- CallFunction v7, [v285]
v291 <- BeginPlainFunction -> 
    v292 <- LoadInteger '0'
    v293 <- Void_ v292
    v294 <- LoadInteger '0'
    v295 <- Void_ v294
    v296 <- Compare v293, '===', v295
    Return v296
EndPlainFunction
v297 <- LoadBoolean 'true'
v298 <- CallFunction v0, [v297, v291]
v299 <- BeginPlainFunction -> 
    v300 <- LoadInteger '0'
    v301 <- Void_ v300
    v302 <- LoadThis
    v303 <- GetProperty v302, 'undefined'
    v304 <- Compare v301, '===', v303
    Return v304
EndPlainFunction
v305 <- CallFunction v7, [v299]
v306 <- BeginPlainFunction -> 
    v307 <- LoadThis
    v308 <- GetProperty v307, 'undefined'
    v309 <- LoadInteger '0'
    v310 <- Void_ v309
    v311 <- Compare v308, '===', v310
    Return v311
EndPlainFunction
v312 <- CallFunction v7, [v306]


function test(a1, a2) {
    a2();
    a2();
    a2();
    a2();
}
function testThrows(a8) {
}
function f1() {
    return undefined;
}
test(void 0, f1);
function f2() {
    return void 0;
}
test(void 0, f2);
function f3() {
    return void 0 == void 0;
}
test(true, f3);
function f4() {
    return void 0 == undefined;
}
test(true, f4);
function f5() {
    return undefined == void 0;
}
test(true, f5);
function f6() {
    return "" + undefined;
}
test("undefined", f6);
function f7() {
    return void 0 === void 0;
}
test(true, f7);
function f8() {
    return void 0 === undefined;
}
test(true, f8);
function f9() {
    return undefined === void 0;
}
test(true, f9);
function g1() {
    return this;
}
test(void 0, g1);
function g2() {
    return void 0;
}
test(void 0, g2);
function g3() {
    return void 0 == void 0;
}
test(true, g3);
function g4() {
    return void 0 == this;
}
test(true, g4);
function g5() {
    return this == void 0;
}
test(true, g5);
function g6() {
    return "" + this;
}
test("undefined", g6);
function g7() {
    return void 0 === void 0;
}
test(true, g7);
function g8() {
    return void 0 === this;
}
test(true, g8);
function g9() {
    return this === void 0;
}
test(true, g9);
function f131() {
    undefined = 111;
}
testThrows(f131);
function h1() {
    return undefined;
}
test(void 0, h1);
function h2() {
    return void 0;
}
test(void 0, h2);
function h3() {
    return void 0 == void 0;
}
test(true, h3);
function h4() {
    return void 0 == undefined;
}
test(true, h4);
function h5() {
    return undefined == void 0;
}
test(true, h5);
function h6() {
    return "" + undefined;
}
test("undefined", h6);
function h7() {
    return void 0 === void 0;
}
test(true, h7);
function h8() {
    return void 0 === undefined;
}
test(true, h8);
function h9() {
    return undefined === void 0;
}
test(true, h9);
function k1() {
    return this;
}
test(void 0, k1);
function k2() {
    return void 0;
}
test(void 0, k2);
function k3() {
    return this === undefined;
}
test(true, k3);
function k4() {
    return void 0 === this;
}
test(true, k4);
function k5() {
    return this === void 0;
}
test(true, k5);
function k6() {
    return "" + this;
}
test("undefined", k6);
function k7() {
    return void 0 === void 0;
}
test(true, k7);
function k8() {
    return void 0 === this;
}
test(true, k8);
function k9() {
    return this === void 0;
}
test(true, k9);
function m1() {
    return this.undefined;
}
testThrows(m1);
function m2() {
    return void 0;
}
test(void 0, m2);
function m3() {
    return this === undefined;
}
test(true, m3);
function m4() {
    return void 0 === this.undefined;
}
testThrows(m4);
function m5() {
    return this.undefined == void 0;
}
testThrows(m5);
function m6() {
    return "" + this.undefined;
}
testThrows(m6);
function m7() {
    return void 0 === void 0;
}
test(true, m7);
function m8() {
    return void 0 === this.undefined;
}
testThrows(m8);
function m9() {
    return this.undefined === void 0;
}
testThrows(m9);

FuzzIL program written to corpus/global-undefined-strict.fzil
