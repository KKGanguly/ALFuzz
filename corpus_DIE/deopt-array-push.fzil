v0 <- BeginPlainFunction -> 
    v1 <- BeginPlainFunction -> v2
        v3 <- LoadInteger '2'
        SetProperty v2, 'length', v3
        v4 <- CallMethod v2, 'push', [v3]
    EndPlainFunction
    v5 <- LoadInteger '1'
    v6 <- CreateArray [v5]
    v7 <- CallFunction v1, [v6]
    v8 <- LoadInteger '1'
    v9 <- CreateArray [v8]
    v10 <- CallFunction v1, [v9]
    v11 <- LoadInteger '1'
    v12 <- CreateArray [v11]
    v13 <- CallFunction v1, [v12]
    v14 <- LoadInteger '1'
    v15 <- CreateArray [v14]
    v16 <- CallFunction v1, [v15]
    v17 <- CallFunction v1, []
EndPlainFunction
v18 <- CallFunction v0, []
v19 <- BeginPlainFunction -> 
    v20 <- BeginPlainFunction -> v21
        v22 <- LoadString 'a'
        v23 <- CallMethod v21, 'push', [v22]
    EndPlainFunction
    v24 <- LoadInteger '1'
    v25 <- CreateArray [v24]
    v26 <- CallFunction v20, [v25]
    v27 <- LoadInteger '1'
    v28 <- CreateArray [v27]
    v29 <- CallFunction v20, [v28]
    v30 <- LoadInteger '1'
    v31 <- CreateArray [v30]
    v32 <- CallFunction v20, [v31]
    v33 <- LoadInteger '1'
    v34 <- CreateArray [v33]
    v35 <- CallFunction v20, [v34]
    v36 <- CallFunction v20, []
EndPlainFunction
v37 <- CallFunction v19, []
v38 <- BeginPlainFunction -> 
    v39 <- BeginPlainFunction -> v40
        v41 <- LoadString 'a'
        v42 <- CallMethod v40, 'push', [v41]
    EndPlainFunction
    v43 <- LoadFloat '0.3413312'
    v44 <- CreateArray [v43]
    v45 <- CallFunction v39, [v44]
    v46 <- LoadFloat '0.3413312'
    v47 <- CreateArray [v46]
    v48 <- CallFunction v39, [v47]
    v49 <- LoadFloat '0.3413312'
    v50 <- CreateArray [v49]
    v51 <- CallFunction v39, [v50]
    v52 <- LoadFloat '0.3413312'
    v53 <- CreateArray [v52]
    v54 <- CallFunction v39, [v53]
    v55 <- CallFunction v39, []
EndPlainFunction
v56 <- CallFunction v38, []
v57 <- BeginPlainFunction -> 
    v58 <- BeginPlainFunction -> v59
        v60 <- LoadInteger '2'
        SetProperty v59, 'x', v60
    EndPlainFunction
    v61 <- BeginPlainFunction -> v62
        v63 <- CallFunction v58, [v62]
        v64 <- CallMethod v62, 'push', [v63]
    EndPlainFunction
    v65 <- LoadString '1'
    v66 <- CreateArray [v65]
    v67 <- CallFunction v61, [v66]
    v68 <- LoadString '1'
    v69 <- CreateArray [v68]
    v70 <- CallFunction v61, [v69]
    v71 <- LoadString '1'
    v72 <- CreateArray [v71]
    v73 <- CallFunction v61, [v72]
    v74 <- LoadString '1'
    v75 <- CreateArray [v74]
    v76 <- CallFunction v61, [v75]
    v77 <- CallFunction v61, []
EndPlainFunction
v78 <- CallFunction v57, []
v79 <- BeginPlainFunction -> 
    v80 <- BeginPlainFunction -> v81
        v82 <- LoadInteger '2'
        SetProperty v81, 'length', v82
        v83 <- CallMethod v81, 'push', [v82]
    EndPlainFunction
    v84 <- LoadFloat '0.34234'
    v85 <- CreateArray [v84]
    v86 <- CallFunction v80, [v85]
    v87 <- LoadFloat '0.34234'
    v88 <- CreateArray [v87]
    v89 <- CallFunction v80, [v88]
    v90 <- LoadFloat '0.34234'
    v91 <- CreateArray [v90]
    v92 <- CallFunction v80, [v91]
    v93 <- LoadFloat '0.34234'
    v94 <- CreateArray [v93]
    v95 <- CallFunction v80, [v94]
    v96 <- CallFunction v80, []
EndPlainFunction
v97 <- CallFunction v79, []
v98 <- BeginPlainFunction -> 
    v99 <- LoadInteger '128'
    v100 <- LoadInteger '1024'
    v101 <- BinaryOperation v99, '*', v100
    v102 <- CreateNamedVariable 'N', 'const', v101
    v103 <- BeginPlainFunction -> v104
        v105 <- LoadInteger '1'
        v106 <- CallMethod v104, 'push', [v105]
    EndPlainFunction
    v107 <- CreateNamedVariable 'Array', 'none'
    v108 <- Construct v107, [v102]
    v109 <- CallFunction v103, [v108]
    v110 <- Construct v107, [v102]
    v111 <- CallFunction v103, [v110]
    v112 <- Construct v107, [v102]
    v113 <- CallFunction v103, [v112]
    v114 <- Construct v107, [v102]
    v115 <- CallFunction v103, [v114]
    v116 <- CallFunction v103, []
EndPlainFunction
v117 <- CallFunction v98, []
v118 <- BeginPlainFunction -> 
    v119 <- BeginPlainFunction -> 
        v120 <- LoadInteger '128'
        v121 <- LoadInteger '1024'
        v122 <- BinaryOperation v120, '*', v121
        v123 <- CreateNamedVariable 'N', 'const', v122
        v124 <- LoadFloat '0.1'
        v125 <- CreateArray [v124]
        v126 <- CreateNamedVariable 'a', 'let', v125
        SetProperty v126, 'length', v123
        Return v126
    EndPlainFunction
    v127 <- BeginPlainFunction -> v128
        v129 <- LoadFloat '0.23441233123'
        v130 <- CallMethod v128, 'push', [v129]
    EndPlainFunction
    v131 <- CallFunction v119, []
    v132 <- CallFunction v127, [v131]
    v133 <- CallFunction v119, []
    v134 <- CallFunction v127, [v133]
    v135 <- CallFunction v119, []
    v136 <- CallFunction v127, [v135]
    v137 <- CallFunction v119, []
    v138 <- CallFunction v127, [v137]
    v139 <- CallFunction v127, []
EndPlainFunction
v140 <- CallFunction v118, []


function test() {
    function foo(a2) {
        a2.length = 2;
        a2.push(2);
    }
    foo([1]);
    foo([1]);
    foo([1]);
    foo([1]);
    foo();
}
test();
function testElementTypeCheckSmi() {
    function foo(a21) {
        a21.push("a");
    }
    foo([1]);
    foo([1]);
    foo([1]);
    foo([1]);
    foo();
}
testElementTypeCheckSmi();
function testElementTypeCheckDouble() {
    function foo(a40) {
        a40.push("a");
    }
    foo([0.3413312]);
    foo([0.3413312]);
    foo([0.3413312]);
    foo([0.3413312]);
    foo();
}
testElementTypeCheckDouble();
function test() {
    function bar(a59) {
        a59.x = 2;
    }
    function foo(a62) {
        a62.push(bar(a62));
    }
    foo(["1"]);
    foo(["1"]);
    foo(["1"]);
    foo(["1"]);
    foo();
}
test();
function test() {
    function foo(a81) {
        a81.length = 2;
        a81.push(2);
    }
    foo([0.34234]);
    foo([0.34234]);
    foo([0.34234]);
    foo([0.34234]);
    foo();
}
test();
function test() {
    const N = 128 * 1024;
    function foo(a104) {
        a104.push(1);
    }
    const v108 = new Array(N);
    foo(v108);
    const v110 = new Array(N);
    foo(v110);
    const v112 = new Array(N);
    foo(v112);
    const v114 = new Array(N);
    foo(v114);
    foo();
}
test();
function test() {
    function mkArray() {
        const N = 128 * 1024;
        let a = [0.1];
        a.length = N;
        return a;
    }
    function foo(a128) {
        a128.push(0.23441233123);
    }
    foo(mkArray());
    foo(mkArray());
    foo(mkArray());
    foo(mkArray());
    foo();
}
test();

FuzzIL program written to corpus/deopt-array-push.fzil
