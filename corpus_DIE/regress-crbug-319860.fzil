v0 <- BeginPlainFunction -> v1, v2
    v3 <- LoadInteger '33554432'
    v4 <- CreateNamedVariable 'offset', 'var', v3
    v5 <- LoadUndefined
    v6 <- CreateNamedVariable 'result', 'var', v5
    BeginForLoopInitializer
        v7 <- LoadInteger '0'
    BeginForLoopCondition -> v8
        v9 <- LoadInteger '1'
        v10 <- Compare v8, '<', v9
    BeginForLoopAfterthought v10 -> v11
        v12 <- UnaryOperation v11, '++'
    BeginForLoopBody -> v13
        v14 <- BinaryOperation v2, '+', v4
        v15 <- GetComputedProperty v1, v14
        Reassign v6, v15
    EndForLoop
    Return v6
EndPlainFunction
v16 <- CreateNamedVariable 'Int8Array', 'none'
v17 <- LoadInteger '33554433'
v18 <- Construct v16, [v17]
v19 <- CreateNamedVariable 'a', 'var', v18
v20 <- LoadInteger '0'
v21 <- CallFunction v0, [v19, v20]
v22 <- LoadInteger '0'
v23 <- CallFunction v0, [v19, v22]
BeginForLoopInitializer
    v24 <- LoadInteger '0'
BeginForLoopCondition -> v25
    v26 <- LoadInteger '1000000'
    v27 <- UnaryOperation '-', v26
    v28 <- Compare v25, '>', v27
BeginForLoopAfterthought v28 -> v29
    v30 <- UnaryOperation '--', v29
BeginForLoopBody -> v31
    v32 <- CallFunction v0, [v19, v31]
EndForLoop


function read(a1, a2) {
    var offset = 33554432;
    var result;
    for (let i8 = 0; i8 < 1; i8++) {
        result = a1[a2 + offset];
    }
    return result;
}
const v18 = new Int8Array(33554433);
var a = v18;
read(a, 0);
read(a, 0);
for (let i25 = 0; i25 > -1000000; --i25) {
    read(a, i25);
}

FuzzIL program written to corpus/regress-crbug-319860.fzil
