v0 <- BeginPlainFunction -> v1, v2
    v3 <- LoadThis
    SetProperty v3, 'x', v1
    v4 <- LoadThis
    SetProperty v4, 'y', v2
    v5 <- LoadThis
    Return v5
EndPlainFunction
v6 <- BeginPlainFunction -> 
EndPlainFunction
v7 <- BeginPlainFunction -> 
    v8 <- LoadInteger '1'
    v9 <- LoadInteger '2'
    v10 <- Construct v0, [v8, v9]
    v11 <- CreateNamedVariable 'a', 'var', v10
    v12 <- GetProperty v11, 'x'
    v13 <- GetProperty v11, 'x'
    v14 <- BinaryOperation v12, '+', v13
    v15 <- GetProperty v11, 'x'
    v16 <- BinaryOperation v14, '+', v15
    v17 <- GetProperty v11, 'x'
    v18 <- BinaryOperation v16, '+', v17
    Return v18
EndPlainFunction
v19 <- BeginPlainFunction -> 
    v20 <- LoadInteger '1'
    v21 <- CreateNamedVariable 'r', 'var', v20
    v22 <- BeginPlainFunction -> 
        v23 <- CreateNamedVariable 'fr', 'var', v21
        v24 <- BeginPlainFunction -> v25
            v26 <- LoadUndefined
            v27 <- CreateNamedVariable 'gr', 'var', v26
            BeginIf v25
                Reassign v27, v21
            BeginElse
                Reassign v27, v21
            EndIf
            v28 <- BinaryOperation v27, '+', v21
            v29 <- BinaryOperation v28, '+', v23
            Return v29
        EndPlainFunction
        v30 <- LoadThis
        SetProperty v30, 'g', v24
    EndPlainFunction
    v31 <- LoadThis
    SetProperty v31, 'f', v22
    v32 <- LoadThis
    v33 <- CallMethod v32, 'f', []
    v34 <- LoadBoolean 'true'
    v35 <- LoadThis
    v36 <- CallMethod v35, 'g', [v34]
    Return v36
EndPlainFunction
v37 <- BeginPlainFunction -> 
    v38 <- LoadInteger '1'
    v39 <- LoadInteger '2'
    v40 <- Construct v0, [v38, v39]
    v41 <- CreateNamedVariable 'a', 'var', v40
    v42 <- LoadInteger '4'
    SetProperty v41, 'x', v42
    v43 <- GetProperty v41, 'x'
    v44 <- CreateNamedVariable 'f', 'var', v43
    v45 <- LoadInteger '5'
    SetProperty v41, 'x', v45
    v46 <- GetProperty v41, 'x'
    v47 <- CreateNamedVariable 'g', 'var', v46
    v48 <- LoadInteger '6'
    SetProperty v41, 'x', v48
    v49 <- GetProperty v41, 'x'
    v50 <- CreateNamedVariable 'h', 'var', v49
    v51 <- LoadInteger '7'
    SetProperty v41, 'x', v51
    v52 <- BinaryOperation v44, '+', v47
    v53 <- BinaryOperation v52, '+', v50
    v54 <- GetProperty v41, 'x'
    v55 <- BinaryOperation v53, '+', v54
    Return v55
EndPlainFunction
v56 <- BeginPlainFunction -> 
    v57 <- LoadInteger '2'
    v58 <- LoadInteger '3'
    v59 <- Construct v0, [v57, v58]
    v60 <- CreateNamedVariable 'a', 'var', v59
    v61 <- LoadInteger '3'
    v62 <- LoadInteger '4'
    v63 <- Construct v0, [v61, v62]
    v64 <- CreateNamedVariable 'b', 'var', v63
    v65 <- LoadInteger '4'
    SetProperty v64, 'x', v65
    v66 <- GetProperty v60, 'x'
    v67 <- CreateNamedVariable 'f', 'var', v66
    v68 <- LoadInteger '5'
    SetProperty v64, 'x', v68
    v69 <- GetProperty v60, 'x'
    v70 <- CreateNamedVariable 'g', 'var', v69
    v71 <- LoadInteger '6'
    SetProperty v64, 'x', v71
    v72 <- GetProperty v60, 'x'
    v73 <- CreateNamedVariable 'h', 'var', v72
    v74 <- LoadInteger '7'
    SetProperty v64, 'x', v74
    v75 <- BinaryOperation v67, '+', v70
    v76 <- BinaryOperation v75, '+', v73
    v77 <- GetProperty v60, 'x'
    v78 <- BinaryOperation v76, '+', v77
    Return v78
EndPlainFunction
v79 <- BeginPlainFunction -> 
    v80 <- LoadInteger '2'
    v81 <- LoadInteger '3'
    v82 <- Construct v0, [v80, v81]
    v83 <- CreateNamedVariable 'a', 'var', v82
    v84 <- GetProperty v83, 'x'
    v85 <- CreateNamedVariable 'f', 'var', v84
    v86 <- GetProperty v83, 'y'
    v87 <- CreateNamedVariable 'g', 'var', v86
    v88 <- LoadInteger '3'
    v89 <- LoadInteger '4'
    v90 <- Construct v0, [v88, v89]
    v91 <- CreateNamedVariable 'b', 'var', v90
    v92 <- GetProperty v83, 'x'
    v93 <- GetProperty v83, 'y'
    v94 <- BinaryOperation v92, '+', v93
    Return v94
EndPlainFunction
v95 <- BeginPlainFunction -> 
    v96 <- Construct v6, []
    v97 <- CreateNamedVariable 'b', 'var', v96
    v98 <- LoadInteger '1'
    v99 <- UnaryOperation '-', v98
    v100 <- LoadInteger '5'
    v101 <- Construct v0, [v99, v100]
    v102 <- CreateNamedVariable 'a', 'var', v101
    v103 <- GetProperty v102, 'x'
    v104 <- CreateNamedVariable 'f', 'var', v103
    v105 <- GetProperty v102, 'y'
    v106 <- CreateNamedVariable 'g', 'var', v105
    v107 <- LoadInteger '9'
    SetProperty v97, 'x', v107
    v108 <- LoadInteger '11'
    SetProperty v97, 'y', v108
    v109 <- GetProperty v102, 'x'
    v110 <- GetProperty v102, 'y'
    v111 <- BinaryOperation v109, '+', v110
    Return v111
EndPlainFunction
v112 <- LoadBoolean 'false'
v113 <- CreateNamedVariable 'false_v', 'var', v112
v114 <- BeginPlainFunction -> 
    v115 <- Construct v6, []
    v116 <- CreateNamedVariable 'o', 'var', v115
    v117 <- CreateNamedVariable 'v', 'var', v116
    BeginIf v113
        v118 <- LoadInteger '0'
        Reassign v117, v118
    EndIf
    v119 <- LoadInteger '20'
    SetProperty v117, 'x', v119
    v120 <- GetProperty v116, 'x'
    Return v120
EndPlainFunction
v121 <- BeginPlainFunction -> 
    BeginTry
    BeginCatch -> v122
    EndTryCatch
EndPlainFunction
v123 <- BeginPlainFunction -> 
    v124 <- LoadInteger '1'
    v125 <- LoadInteger '2'
    v126 <- Construct v0, [v124, v125]
    v127 <- CreateNamedVariable 'a', 'var', v126
    v128 <- LoadInteger '4'
    SetProperty v127, 'x', v128
    v129 <- GetProperty v127, 'x'
    v130 <- CreateNamedVariable 'f', 'var', v129
    v131 <- LoadInteger '5'
    SetProperty v127, 'x', v131
    v132 <- GetProperty v127, 'x'
    v133 <- CreateNamedVariable 'g', 'var', v132
    v134 <- CallFunction v121, []
    v135 <- LoadInteger '6'
    SetProperty v127, 'x', v135
    v136 <- GetProperty v127, 'x'
    v137 <- CreateNamedVariable 'h', 'var', v136
    v138 <- LoadInteger '7'
    SetProperty v127, 'x', v138
    v139 <- BinaryOperation v130, '+', v133
    v140 <- BinaryOperation v139, '+', v137
    v141 <- GetProperty v127, 'x'
    v142 <- BinaryOperation v140, '+', v141
    Return v142
EndPlainFunction
v143 <- BeginPlainFunction -> 
    v144 <- LoadInteger '6'
    v145 <- LoadInteger '7'
    v146 <- Construct v0, [v144, v145]
    v147 <- CreateNamedVariable 'a', 'var', v146
    v148 <- LoadInteger '7'
    SetProperty v147, 'x', v148
    v149 <- LoadInteger '7'
    SetProperty v147, 'x', v149
    v150 <- LoadInteger '7'
    SetProperty v147, 'x', v150
    v151 <- LoadInteger '7'
    SetProperty v147, 'x', v151
    v152 <- GetProperty v147, 'x'
    Return v152
EndPlainFunction
v153 <- BeginPlainFunction -> v154, v155
    v156 <- CallFunction v155, []
    v157 <- CallFunction v155, []
    v158 <- CallFunction v155, []
EndPlainFunction
v159 <- LoadInteger '4'
v160 <- CallFunction v153, [v159, v7]
v161 <- LoadInteger '3'
v162 <- Construct v19, []
v163 <- GetProperty v162, 'g'
v164 <- CallFunction v153, [v161, v163]
v165 <- LoadInteger '22'
v166 <- CallFunction v153, [v165, v37]
v167 <- LoadInteger '8'
v168 <- CallFunction v153, [v167, v56]
v169 <- LoadInteger '5'
v170 <- CallFunction v153, [v169, v79]
v171 <- LoadInteger '4'
v172 <- CallFunction v153, [v171, v95]
v173 <- LoadInteger '20'
v174 <- CallFunction v153, [v173, v114]
v175 <- LoadInteger '22'
v176 <- CallFunction v153, [v175, v123]
v177 <- LoadInteger '7'
v178 <- CallFunction v153, [v177, v143]


function B(a1, a2) {
    this.x = a1;
    this.y = a2;
    return this;
}
function C() {
}
function test_load() {
    const v10 = new B(1, 2);
    var a = v10;
    return ((a.x + a.x) + a.x) + a.x;
}
function test_load_from_different_contexts() {
    var r = 1;
    function f22() {
        var fr = r;
        function f24(a25) {
            var gr;
            if (a25) {
                gr = r;
            } else {
                gr = r;
            }
            return (gr + r) + fr;
        }
        this.g = f24;
    }
    this.f = f22;
    this.f();
    return this.g(true);
}
function test_store_load() {
    const v40 = new B(1, 2);
    var a = v40;
    a.x = 4;
    var f = a.x;
    a.x = 5;
    var g = a.x;
    a.x = 6;
    var h = a.x;
    a.x = 7;
    return ((f + g) + h) + a.x;
}
function test_nonaliasing_store1() {
    const v59 = new B(2, 3);
    var a = v59;
    const v63 = new B(3, 4);
    var b = v63;
    b.x = 4;
    var f = a.x;
    b.x = 5;
    var g = a.x;
    b.x = 6;
    var h = a.x;
    b.x = 7;
    return ((f + g) + h) + a.x;
}
function test_transitioning_store1() {
    const v82 = new B(2, 3);
    var a = v82;
    var f = a.x;
    var g = a.y;
    const v90 = new B(3, 4);
    var b = v90;
    return a.x + a.y;
}
function test_transitioning_store2() {
    const v96 = new C();
    var b = v96;
    const v101 = new B(-1, 5);
    var a = v101;
    var f = a.x;
    var g = a.y;
    b.x = 9;
    b.y = 11;
    return a.x + a.y;
}
var false_v = false;
function test_transitioning_store3() {
    const v115 = new C();
    var o = v115;
    var v = o;
    if (false_v) {
        v = 0;
    }
    v.x = 20;
    return o.x;
}
function killall() {
    try {
    } catch(e122) {
    }
}
function test_store_load_kill() {
    const v126 = new B(1, 2);
    var a = v126;
    a.x = 4;
    var f = a.x;
    a.x = 5;
    var g = a.x;
    killall();
    a.x = 6;
    var h = a.x;
    a.x = 7;
    return ((f + g) + h) + a.x;
}
function test_store_store() {
    const v146 = new B(6, 7);
    var a = v146;
    a.x = 7;
    a.x = 7;
    a.x = 7;
    a.x = 7;
    return a.x;
}
function test(a154, a155) {
    a155();
    a155();
    a155();
}
test(4, test_load);
const v162 = new test_load_from_different_contexts();
test(3, v162.g);
test(22, test_store_load);
test(8, test_nonaliasing_store1);
test(5, test_transitioning_store1);
test(4, test_transitioning_store2);
test(20, test_transitioning_store3);
test(22, test_store_load_kill);
test(7, test_store_store);

FuzzIL program written to corpus/load-elimination.fzil
