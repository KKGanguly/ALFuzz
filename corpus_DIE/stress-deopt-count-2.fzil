v0 <- BeginPlainFunction -> v1
    v2 <- LoadInteger '1'
    v3 <- BinaryOperation v1, '+', v2
    Return v3
EndPlainFunction
v4 <- LoadInteger '1'
v5 <- CallFunction v0, [v4]
v6 <- LoadInteger '1'
v7 <- CallFunction v0, [v6]
v8 <- CallFunction v0, []
v9 <- LoadUndefined
v10 <- LoadUndefined
v11 <- LoadBoolean 'false'
v12 <- LoadInteger '1'
v13 <- CallFunction v0, [v12]
v14 <- CallFunction v0, []
v15 <- LoadUndefined
v16 <- LoadUndefined
v17 <- LoadBoolean 'false'
v18 <- LoadInteger '1'
v19 <- CallFunction v0, [v18]
v20 <- CallFunction v0, []
v21 <- LoadUndefined
v22 <- LoadUndefined
v23 <- LoadBoolean 'false'
v24 <- LoadInteger '1'
v25 <- CallFunction v0, [v24]
v26 <- CallFunction v0, []
v27 <- LoadUndefined
v28 <- LoadUndefined
v29 <- LoadBoolean 'false'
v30 <- LoadInteger '1'
v31 <- CallFunction v0, [v30]
v32 <- CallFunction v0, []
v33 <- LoadUndefined
v34 <- LoadUndefined
v35 <- LoadBoolean 'false'
v36 <- LoadInteger '1'
v37 <- CallFunction v0, [v36]
v38 <- CallFunction v0, []
v39 <- LoadUndefined
v40 <- LoadUndefined
v41 <- LoadBoolean 'false'


function f(a1) {
    return a1 + 1;
}
f(1);
f(1);
f();
f(1);
f();
f(1);
f();
f(1);
f();
f(1);
f();
f(1);
f();

FuzzIL program written to corpus/stress-deopt-count-2.fzil
