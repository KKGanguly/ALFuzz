v0 <- CreateNamedVariable 'ArrayBuffer', 'none'
v1 <- LoadInteger '65536'
v2 <- Construct v0, [v1]
v3 <- CreateNamedVariable 'buf', 'var', v2
v4 <- LoadInteger '55'
v5 <- CreateNamedVariable 'Uint8Array', 'none'
v6 <- Construct v5, [v3]
v7 <- CallMethod v6, 'fill', [v4]
v8 <- CreateNamedVariable 'arr', 'var', v7
BeginObjectLiteral
v9 <- EndObjectLiteral
v10 <- CreateNamedVariable 'tmp', 'var', v9
v11 <- BeginPlainFunction -> 
    v12 <- LoadInteger '50'
    Return v12
EndPlainFunction
v13 <- CreateNamedVariable 'Symbol', 'none'
v14 <- GetProperty v13, 'toPrimitive'
SetComputedProperty v10, v14, v11
v15 <- CallMethod v8, 'copyWithin', [v10]


const v2 = new ArrayBuffer(65536);
var buf = v2;
const v6 = new Uint8Array(buf);
var arr = v6.fill(55);
var tmp = {};
function f11() {
    return 50;
}
tmp[Symbol.toPrimitive] = f11;
arr.copyWithin(tmp);

FuzzIL program written to corpus/regress-5929-1.fzil
