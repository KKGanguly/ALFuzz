v0 <- BeginArrowFunction -> 
    v1 <- BeginPlainFunction -> v2
        v3 <- CreateNamedVariable 'Math', 'none'
        v4 <- CallMethod v3, 'abs', [v2]
        Return v4
    EndPlainFunction
    v5 <- LoadInteger '1'
    v6 <- CallFunction v1, [v5]
    v7 <- LoadInteger '1'
    v8 <- CallFunction v1, [v7]
    v9 <- LoadString '100'
    v10 <- CallFunction v1, [v9]
    v11 <- LoadString '100'
    v12 <- CallFunction v1, [v11]
    v13 <- CallFunction v1, []
EndArrowFunction
v14 <- CallFunction v0, []
v15 <- BeginArrowFunction -> 
    v16 <- BeginPlainFunction -> v17
        v18 <- LoadInteger '1'
        v19 <- CreateNamedVariable 'Math', 'none'
        v20 <- CallMethod v19, 'min', [v18, v17]
        Return v20
    EndPlainFunction
    v21 <- LoadInteger '1'
    v22 <- CallFunction v16, [v21]
    v23 <- LoadInteger '1'
    v24 <- CallFunction v16, [v23]
    v25 <- LoadString '100'
    v26 <- CallFunction v16, [v25]
    v27 <- LoadString '100'
    v28 <- CallFunction v16, [v27]
    v29 <- CallFunction v16, []
EndArrowFunction
v30 <- CallFunction v15, []
v31 <- BeginArrowFunction -> 
    v32 <- BeginPlainFunction -> v33
        v34 <- LoadInteger '10'
        v35 <- CreateNamedVariable 'Math', 'none'
        v36 <- CallMethod v35, 'pow', [v33, v34]
        Return v36
    EndPlainFunction
    v37 <- LoadInteger '1'
    v38 <- CallFunction v32, [v37]
    v39 <- LoadInteger '1'
    v40 <- CallFunction v32, [v39]
    v41 <- LoadString '100'
    v42 <- CallFunction v32, [v41]
    v43 <- LoadString '100'
    v44 <- CallFunction v32, [v43]
    v45 <- CallFunction v32, []
EndArrowFunction
v46 <- CallFunction v31, []
v47 <- BeginArrowFunction -> 
    v48 <- BeginPlainFunction -> v49
        v50 <- CreateNamedVariable 'Math', 'none'
        v51 <- CallMethod v50, 'clz32', [v49]
        Return v51
    EndPlainFunction
    v52 <- LoadInteger '1'
    v53 <- CallFunction v48, [v52]
    v54 <- LoadInteger '1'
    v55 <- CallFunction v48, [v54]
    v56 <- LoadString '100'
    v57 <- CallFunction v48, [v56]
    v58 <- LoadString '100'
    v59 <- CallFunction v48, [v58]
    v60 <- CallFunction v48, []
EndArrowFunction
v61 <- CallFunction v47, []
v62 <- BeginArrowFunction -> 
    v63 <- BeginPlainFunction -> v64
        v65 <- LoadInteger '10'
        v66 <- CreateNamedVariable 'Math', 'none'
        v67 <- CallMethod v66, 'imul', [v64, v65]
        Return v67
    EndPlainFunction
    v68 <- LoadInteger '1'
    v69 <- CallFunction v63, [v68]
    v70 <- LoadInteger '1'
    v71 <- CallFunction v63, [v70]
    v72 <- LoadString '100'
    v73 <- CallFunction v63, [v72]
    v74 <- LoadString '100'
    v75 <- CallFunction v63, [v74]
    v76 <- CallFunction v63, []
EndArrowFunction
v77 <- CallFunction v62, []


const v0 = () => {
    function f(a2) {
        return Math.abs(a2);
    }
    f(1);
    f(1);
    f("100");
    f("100");
    f();
};
v0();
const v15 = () => {
    function f(a17) {
        return Math.min(1, a17);
    }
    f(1);
    f(1);
    f("100");
    f("100");
    f();
};
v15();
const v31 = () => {
    function f(a33) {
        return Math.pow(a33, 10);
    }
    f(1);
    f(1);
    f("100");
    f("100");
    f();
};
v31();
const v47 = () => {
    function f(a49) {
        return Math.clz32(a49);
    }
    f(1);
    f(1);
    f("100");
    f("100");
    f();
};
v47();
const v62 = () => {
    function f(a64) {
        return Math.imul(a64, 10);
    }
    f(1);
    f(1);
    f("100");
    f("100");
    f();
};
v62();

FuzzIL program written to corpus/math-deopt.fzil
