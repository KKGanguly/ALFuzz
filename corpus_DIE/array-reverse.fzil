v0 <- CreateArray []
v1 <- CreateArray []
v2 <- CallMethod v1, 'reverse', []
v3 <- LoadInteger '8'
v4 <- LoadInteger '6'
v5 <- LoadInteger '4'
v6 <- LoadInteger '2'
v7 <- CreateArray [v3, v4, v5, v6]
v8 <- LoadInteger '2'
v9 <- LoadInteger '4'
v10 <- LoadInteger '6'
v11 <- LoadInteger '8'
v12 <- CreateArray [v8, v9, v10, v11]
v13 <- CallMethod v12, 'reverse', []
v14 <- LoadFloat '0.8'
v15 <- LoadFloat '0.6'
v16 <- LoadFloat '0.4'
v17 <- CreateArray [v14, v15, v16]
v18 <- LoadFloat '0.4'
v19 <- LoadFloat '0.6'
v20 <- LoadFloat '0.8'
v21 <- CreateArray [v18, v19, v20]
v22 <- CallMethod v21, 'reverse', []
v23 <- LoadString 'str4'
v24 <- LoadString 'str3'
v25 <- LoadString 'str2'
v26 <- CreateArray [v23, v24, v25]
v27 <- LoadString 'str2'
v28 <- LoadString 'str3'
v29 <- LoadString 'str4'
v30 <- CreateArray [v27, v28, v29]
v31 <- CallMethod v30, 'reverse', []
v32 <- LoadInteger '4'
v33 <- LoadInteger '3'
v34 <- LoadUndefined
v35 <- LoadInteger '1'
v36 <- CreateArray [v32, v33, v34, v35]
v37 <- LoadInteger '1'
v38 <- LoadUndefined
v39 <- LoadInteger '3'
v40 <- LoadInteger '4'
v41 <- CreateArray [v37, v38, v39, v40]
v42 <- CallMethod v41, 'reverse', []
v43 <- LoadInteger '4'
v44 <- LoadUndefined
v45 <- LoadInteger '2'
v46 <- LoadInteger '1'
v47 <- CreateArray [v43, v44, v45, v46]
v48 <- LoadInteger '1'
v49 <- LoadInteger '2'
v50 <- LoadUndefined
v51 <- LoadInteger '4'
v52 <- CreateArray [v48, v49, v50, v51]
v53 <- CallMethod v52, 'reverse', []
v54 <- LoadInteger '5'
v55 <- LoadUndefined
v56 <- LoadInteger '3'
v57 <- LoadInteger '1'
v58 <- CreateArray [v54, v55, v56, v55, v57]
v59 <- LoadInteger '1'
v60 <- LoadUndefined
v61 <- LoadInteger '3'
v62 <- LoadInteger '5'
v63 <- CreateArray [v59, v60, v61, v60, v62]
v64 <- CallMethod v63, 'reverse', []
v65 <- BeginPlainFunction -> 
    v66 <- LoadInteger '5'
    BeginObjectLiteral
        ObjectLiteralAddProperty `length`, v66
    v67 <- EndObjectLiteral
    v68 <- CreateNamedVariable 'obj', 'let', v67
    v69 <- LoadString 'foo'
    SetElement v68, '0', v69
    v70 <- LoadString 'bar'
    SetElement v68, '3', v70
    v71 <- CreateNamedVariable 'Array', 'none'
    v72 <- GetProperty v71, 'prototype'
    v73 <- GetProperty v72, 'reverse'
    v74 <- CallMethod v73, 'call', [v68]
    v75 <- LoadUndefined
    v76 <- LoadString 'bar'
    v77 <- LoadString 'foo'
    v78 <- CreateArray [v75, v76, v75, v75, v77]
EndPlainFunction
v79 <- CallFunction v65, []
v80 <- BeginPlainFunction -> 
    v81 <- LoadString 'foo'
    v82 <- LoadString 'bar'
    BeginObjectLiteral
        ObjectLiteralAddElement `0`, v81
        ObjectLiteralAddElement `19`, v82
    v83 <- EndObjectLiteral
    v84 <- CreateNamedVariable 'proto', 'let', v83
    v85 <- LoadInteger '20'
    v86 <- LoadString 'foobar'
    BeginObjectLiteral
        ObjectLiteralAddProperty `length`, v85
        ObjectLiteralAddElement `5`, v86
        ObjectLiteralAddProperty `__proto__`, v84
    v87 <- EndObjectLiteral
    v88 <- CreateNamedVariable 'obj', 'let', v87
    v89 <- CreateNamedVariable 'Array', 'none'
    v90 <- GetProperty v89, 'prototype'
    v91 <- GetProperty v90, 'reverse'
    v92 <- CallMethod v91, 'call', [v88]
    v93 <- LoadString 'bar'
    v94 <- GetElement v88, '0'
    v95 <- LoadString 'foobar'
    v96 <- GetElement v88, '14'
    v97 <- LoadString 'foo'
    v98 <- GetElement v88, '19'
EndPlainFunction
v99 <- CallFunction v80, []
v100 <- BeginPlainFunction -> 
    v101 <- CreateNamedVariable 'Uint8Array', 'none'
    v102 <- CreateNamedVariable 'Int8Array', 'none'
    v103 <- CreateNamedVariable 'Uint16Array', 'none'
    v104 <- CreateNamedVariable 'Int16Array', 'none'
    v105 <- CreateNamedVariable 'Uint32Array', 'none'
    v106 <- CreateNamedVariable 'Int32Array', 'none'
    v107 <- CreateNamedVariable 'Uint8ClampedArray', 'none'
    v108 <- CreateNamedVariable 'Float32Array', 'none'
    v109 <- CreateNamedVariable 'Float64Array', 'none'
    v110 <- CreateArray [v101, v102, v103, v104, v105, v106, v107, v108, v109]
    v111 <- CreateNamedVariable 'constructors', 'const', v110
    BeginForOfLoop v111 -> v112
        v113 <- LoadInteger '1'
        v114 <- LoadInteger '2'
        v115 <- LoadInteger '3'
        v116 <- CreateArray [v113, v114, v115]
        v117 <- Construct v112, [v116]
        v118 <- CreateNamedVariable 'array_odd', 'const', v117
        v119 <- CreateNamedVariable 'Array', 'none'
        v120 <- GetProperty v119, 'prototype'
        v121 <- GetProperty v120, 'reverse'
        v122 <- CallMethod v121, 'call', [v118]
        v123 <- LoadInteger '3'
        v124 <- LoadInteger '2'
        v125 <- LoadInteger '1'
        v126 <- CreateArray [v123, v124, v125]
        v127 <- LoadInteger '1'
        v128 <- LoadInteger '2'
        v129 <- LoadInteger '3'
        v130 <- LoadInteger '4'
        v131 <- CreateArray [v127, v128, v129, v130]
        v132 <- Construct v112, [v131]
        v133 <- CreateNamedVariable 'array_even', 'const', v132
        v134 <- GetProperty v119, 'prototype'
        v135 <- GetProperty v134, 'reverse'
        v136 <- CallMethod v135, 'call', [v133]
        v137 <- LoadInteger '4'
        v138 <- LoadInteger '3'
        v139 <- LoadInteger '2'
        v140 <- LoadInteger '1'
        v141 <- CreateArray [v137, v138, v139, v140]
        v142 <- LoadInteger '1'
        v143 <- LoadInteger '2'
        v144 <- LoadInteger '3'
        v145 <- LoadInteger '4'
        v146 <- CreateArray [v142, v143, v144, v145]
        v147 <- Construct v112, [v146]
        v148 <- CreateNamedVariable 'array', 'const', v147
        v149 <- LoadString 'length'
        v150 <- LoadInteger '2'
        BeginObjectLiteral
            ObjectLiteralAddProperty `value`, v150
        v151 <- EndObjectLiteral
        v152 <- CreateNamedVariable 'Object', 'none'
        v153 <- CallMethod v152, 'defineProperty', [v148, v149, v151]
        v154 <- GetProperty v119, 'prototype'
        v155 <- GetProperty v154, 'reverse'
        v156 <- CallMethod v155, 'call', [v148]
        v157 <- LoadInteger '2'
        v158 <- LoadInteger '1'
        v159 <- CreateArray [v157, v158]
        v160 <- LoadInteger '1'
        v161 <- LoadInteger '2'
        v162 <- CreateArray [v160, v161]
        v163 <- Construct v112, [v162]
        v164 <- CreateNamedVariable 'array_shadowed_length', 'const', v163
        v165 <- LoadString 'length'
        v166 <- LoadInteger '5'
        BeginObjectLiteral
            ObjectLiteralAddProperty `value`, v166
        v167 <- EndObjectLiteral
        v168 <- CallMethod v152, 'defineProperty', [v164, v165, v167]
        v169 <- BeginArrowFunction -> 
            v170 <- GetProperty v119, 'prototype'
            v171 <- GetProperty v170, 'reverse'
            v172 <- CallMethod v171, 'call', [v164]
            Return v172
        EndArrowFunction
        v173 <- CallFunction v169, []
    EndForOfLoop
EndPlainFunction
v174 <- CallFunction v100, []


[];
([]).reverse();
[8,6,4,2];
([2,4,6,8]).reverse();
[0.8,0.6,0.4];
([0.4,0.6,0.8]).reverse();
["str4","str3","str2"];
(["str2","str3","str4"]).reverse();
[4,3,,1];
([1,,3,4]).reverse();
[4,,2,1];
([1,2,,4]).reverse();
[5,,3,,1];
([1,,3,,5]).reverse();
function TestReverseWithObject() {
    let obj = { length: 5 };
    obj[0] = "foo";
    obj[3] = "bar";
    Array.prototype.reverse.call(obj);
    [,"bar",,,"foo"];
}
TestReverseWithObject();
function TestReverseWithPrototypeChain() {
    let proto = { 0: "foo", 19: "bar" };
    let obj = { length: 20, 5: "foobar", __proto__: proto };
    Array.prototype.reverse.call(obj);
    obj[0];
    obj[14];
    obj[19];
}
TestReverseWithPrototypeChain();
function TestReverseWithTypedArrays() {
    const constructors = [Uint8Array,Int8Array,Uint16Array,Int16Array,Uint32Array,Int32Array,Uint8ClampedArray,Float32Array,Float64Array];
    for (const v112 of constructors) {
        const v117 = new v112([1,2,3]);
        const array_odd = v117;
        Array.prototype.reverse.call(array_odd);
        [3,2,1];
        const v132 = new v112([1,2,3,4]);
        const array_even = v132;
        Array.prototype.reverse.call(array_even);
        [4,3,2,1];
        const v147 = new v112([1,2,3,4]);
        const array = v147;
        Object.defineProperty(array, "length", { value: 2 });
        Array.prototype.reverse.call(array);
        [2,1];
        const v163 = new v112([1,2]);
        const array_shadowed_length = v163;
        Object.defineProperty(array_shadowed_length, "length", { value: 5 });
        const v169 = () => {
            return Array.prototype.reverse.call(array_shadowed_length);
        };
        v169();
    }
}
TestReverseWithTypedArrays();

FuzzIL program written to corpus/array-reverse.fzil
