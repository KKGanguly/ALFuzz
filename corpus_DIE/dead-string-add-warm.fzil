v0 <- BeginPlainFunction -> v1, v2
    v3 <- LoadString 'a'
    v4 <- LoadString 'b'
    v5 <- BinaryOperation v3, '+', v4
    v6 <- CreateNamedVariable 'x', 'var', v5
    Return v1
EndPlainFunction
v7 <- BeginPlainFunction -> v8, v9
    v10 <- LoadString '0'
    v11 <- BinaryOperation v10, '+', v8
    v12 <- CreateNamedVariable 'x', 'var', v11
    v13 <- LoadString '0'
    v14 <- BinaryOperation v13, '+', v9
    v15 <- CreateNamedVariable 'y', 'var', v14
    Return v8
EndPlainFunction
v16 <- BeginPlainFunction -> v17, v18
    v19 <- LoadString '1'
    v20 <- LoadString '0'
    v21 <- TernaryOperation v17, v19, v20
    Reassign v17, v21
    v22 <- LoadString '1'
    v23 <- LoadString '0'
    v24 <- TernaryOperation v18, v22, v23
    Reassign v18, v24
    v25 <- LoadString '0'
    v26 <- BinaryOperation v17, '+', v25
    v27 <- CreateNamedVariable 'x', 'var', v26
    v28 <- LoadString '0'
    v29 <- BinaryOperation v18, '+', v28
    v30 <- CreateNamedVariable 'y', 'var', v29
    Return v17
EndPlainFunction
v31 <- BeginPlainFunction -> 
    v32 <- LoadInteger '33'
    v33 <- LoadInteger '33'
    v34 <- LoadInteger '32'
    v35 <- CallFunction v0, [v33, v34]
    v36 <- LoadInteger '33'
    v37 <- LoadInteger '33'
    v38 <- LoadInteger '32'
    v39 <- CallFunction v7, [v37, v38]
    v40 <- LoadString '1'
    v41 <- LoadInteger '33'
    v42 <- LoadInteger '32'
    v43 <- CallFunction v16, [v41, v42]
    v44 <- LoadInteger '31'
    v45 <- LoadInteger '31'
    v46 <- LoadInteger '30'
    v47 <- CallFunction v0, [v45, v46]
    v48 <- LoadInteger '31'
    v49 <- LoadInteger '31'
    v50 <- LoadInteger '30'
    v51 <- CallFunction v7, [v49, v50]
    v52 <- LoadString '1'
    v53 <- LoadInteger '31'
    v54 <- LoadInteger '32'
    v55 <- CallFunction v16, [v53, v54]
    v56 <- LoadInteger '0'
    v57 <- LoadInteger '0'
    v58 <- LoadInteger '30'
    v59 <- CallFunction v0, [v57, v58]
    v60 <- LoadInteger '0'
    v61 <- LoadInteger '0'
    v62 <- LoadInteger '30'
    v63 <- CallFunction v7, [v61, v62]
    v64 <- LoadString '0'
    v65 <- LoadInteger '0'
    v66 <- LoadInteger '32'
    v67 <- CallFunction v16, [v65, v66]
    v68 <- LoadBoolean 'true'
    v69 <- LoadBoolean 'true'
    v70 <- LoadInteger '0'
    v71 <- CallFunction v0, [v69, v70]
    v72 <- LoadBoolean 'true'
    v73 <- LoadBoolean 'true'
    v74 <- LoadInteger '0'
    v75 <- CallFunction v7, [v73, v74]
    v76 <- LoadString '1'
    v77 <- LoadBoolean 'true'
    v78 <- LoadInteger '0'
    v79 <- CallFunction v16, [v77, v78]
    v80 <- LoadString 'true'
    v81 <- LoadString 'true'
    v82 <- LoadInteger '0'
    v83 <- CallFunction v0, [v81, v82]
    v84 <- LoadString 'true'
    v85 <- LoadString 'true'
    v86 <- LoadInteger '0'
    v87 <- CallFunction v7, [v85, v86]
    v88 <- LoadString '1'
    v89 <- LoadString 'true'
    v90 <- LoadInteger '0'
    v91 <- CallFunction v16, [v89, v90]
EndPlainFunction
v92 <- CallFunction v31, []
v93 <- CallFunction v31, []
v94 <- CallFunction v31, []


function dead1(a1, a2) {
    var x = "a" + "b";
    return a1;
}
function dead2(a8, a9) {
    var x = "0" + a8;
    var y = "0" + a9;
    return a8;
}
function dead3(a17, a18) {
    a17 = a17 ? "1" : "0";
    a18 = a18 ? "1" : "0";
    var x = a17 + "0";
    var y = a18 + "0";
    return a17;
}
function run() {
    dead1(33, 32);
    dead2(33, 32);
    dead3(33, 32);
    dead1(31, 30);
    dead2(31, 30);
    dead3(31, 32);
    dead1(0, 30);
    dead2(0, 30);
    dead3(0, 32);
    dead1(true, 0);
    dead2(true, 0);
    dead3(true, 0);
    dead1("true", 0);
    dead2("true", 0);
    dead3("true", 0);
}
run();
run();
run();

FuzzIL program written to corpus/dead-string-add-warm.fzil
