v0 <- LoadString '0123456789ABCDEF'
v1 <- CreateNamedVariable 's', 'var', v0
BeginForLoopInitializer
    v2 <- LoadInteger '0'
BeginForLoopCondition -> v3
    v4 <- LoadInteger '16'
    v5 <- Compare v3, '<', v4
BeginForLoopAfterthought v5 -> v6
    v7 <- UnaryOperation v6, '++'
BeginForLoopBody -> v8
    Update v1, '+', v1
EndForLoop
v9 <- LoadInteger '0'
v10 <- CreateNamedVariable 'count', 'var', v9
v11 <- BeginPlainFunction -> 
    BeginTry
        v12 <- CallFunction v11, []
        v13 <- LoadInteger '10'
        v14 <- Compare v10, '<', v13
        BeginIf v14
            v15 <- CallFunction v11, []
        EndIf
    BeginCatch -> v16
        v17 <- LoadString '+'
        v18 <- LoadString '-'
        v19 <- CallMethod v1, 'replace', [v17, v18]
    EndTryCatch
    v20 <- UnaryOperation v10, '++'
EndPlainFunction
v21 <- CallFunction v11, []


var s = "0123456789ABCDEF";
for (let i3 = 0; i3 < 16; i3++) {
    s += s;
}
var count = 0;
function f() {
    try {
        f();
        if (count < 10) {
            f();
        }
    } catch(e16) {
        s.replace("+", "-");
    }
    count++;
}
f();

FuzzIL program written to corpus/regress-crbug-471659.fzil
