v0 <- BeginPlainFunction -> v1, v2
    BeginTry
        v3 <- GetComputedProperty v1, v2
    BeginCatch -> v4
        Return v4
    EndTryCatch
    ThrowException v2
EndPlainFunction
v5 <- LoadNull
v6 <- LoadString 'foo'
v7 <- CallFunction v0, [v5, v6]
v8 <- CreateNamedVariable 'TypeError', 'none'
v9 <- TestInstanceOf v7, v8
v10 <- LoadInteger '0'
v11 <- Void_ v10
v12 <- LoadString 'foo'
v13 <- CallFunction v0, [v11, v12]
v14 <- TestInstanceOf v13, v8
v15 <- LoadNull
v16 <- LoadInteger '123'
v17 <- CallFunction v0, [v15, v16]
v18 <- TestInstanceOf v17, v8
v19 <- LoadInteger '0'
v20 <- Void_ v19
v21 <- LoadInteger '123'
v22 <- CallFunction v0, [v20, v21]
v23 <- TestInstanceOf v22, v8


function catcher(a1, a2) {
    try {
        a1[a2];
    } catch(e4) {
        return e4;
    }
    throw a2;
}
catcher(null, "foo") instanceof TypeError;
catcher(void 0, "foo") instanceof TypeError;
catcher(null, 123) instanceof TypeError;
catcher(void 0, 123) instanceof TypeError;

FuzzIL program written to corpus/regress-734862.fzil
