v0 <- BeginPlainFunction -> v1, v2, v3
    BeginForLoopInitializer
        v4 <- LoadInteger '0'
    BeginForLoopCondition -> v5
        v6 <- Compare v5, '<', v1
    BeginForLoopAfterthought v6 -> v7
        v8 <- UnaryOperation '++', v7
    BeginForLoopBody -> v9
        v10 <- CreateNamedVariable 'tmp', 'var', v2
        Reassign v2, v3
        Reassign v3, v10
    EndForLoop
    Return v2
EndPlainFunction
v11 <- BeginPlainFunction -> v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22
    BeginForLoopInitializer
        v23 <- LoadInteger '0'
    BeginForLoopCondition -> v24
        v25 <- Compare v24, '<', v12
    BeginForLoopAfterthought v25 -> v26
        v27 <- UnaryOperation '++', v26
    BeginForLoopBody -> v28
        v29 <- CreateNamedVariable 'tmp', 'var', v13
        Reassign v13, v14
        Reassign v14, v15
        Reassign v15, v16
        Reassign v16, v17
        Reassign v17, v18
        Reassign v18, v19
        Reassign v19, v20
        Reassign v20, v21
        Reassign v21, v22
        Reassign v22, v29
    EndForLoop
    Return v13
EndPlainFunction
v30 <- BeginPlainFunction -> v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41
    v42 <- LoadInteger '0'
    v43 <- CreateNamedVariable 'i', 'var', v42
    BeginWhileLoopHeader
        v44 <- Compare v43, '<', v31
    BeginWhileLoopBody v44
        v45 <- CreateNamedVariable 'tmp', 'var', v32
        Reassign v32, v33
        Reassign v33, v34
        Reassign v34, v35
        Reassign v35, v36
        Reassign v36, v37
        Reassign v37, v38
        Reassign v38, v39
        Reassign v39, v40
        Reassign v40, v41
        Reassign v41, v45
        v46 <- UnaryOperation v43, '++'
    EndWhileLoop
    Return v32
EndPlainFunction
v47 <- BeginPlainFunction -> v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58
    BeginForLoopInitializer
        v59 <- LoadInteger '0'
    BeginForLoopCondition -> v60
        v61 <- Compare v60, '<', v48
    BeginForLoopAfterthought v61 -> v62
        v63 <- UnaryOperation '++', v62
    BeginForLoopBody -> v64
        v65 <- CreateNamedVariable 'tmp', 'var', v49
        Reassign v49, v50
        Reassign v50, v51
        Reassign v51, v52
        Reassign v52, v53
        Reassign v53, v65
        Reassign v65, v54
        Reassign v54, v55
        Reassign v55, v56
        Reassign v56, v57
        Reassign v57, v58
        Reassign v58, v65
    EndForLoop
    v66 <- BinaryOperation v49, '+', v54
    Return v66
EndPlainFunction
v67 <- BeginPlainFunction -> v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78
    v79 <- LoadInteger '0'
    v80 <- CreateNamedVariable 'i', 'var', v79
    BeginWhileLoopHeader
        v81 <- Compare v80, '<', v68
    BeginWhileLoopBody v81
        v82 <- CreateNamedVariable 'tmp', 'var', v69
        Reassign v69, v70
        Reassign v70, v71
        Reassign v71, v72
        Reassign v72, v73
        Reassign v73, v82
        Reassign v82, v74
        Reassign v74, v75
        Reassign v75, v76
        Reassign v76, v77
        Reassign v77, v78
        Reassign v78, v82
        v83 <- UnaryOperation v80, '++'
    EndWhileLoop
    v84 <- BinaryOperation v69, '+', v74
    Return v84
EndPlainFunction
v85 <- LoadInteger '1'
v86 <- LoadInteger '0'
v87 <- LoadInteger '1'
v88 <- LoadInteger '2'
v89 <- CallFunction v0, [v86, v87, v88]
v90 <- LoadInteger '2'
v91 <- LoadInteger '1'
v92 <- LoadInteger '1'
v93 <- LoadInteger '2'
v94 <- CallFunction v0, [v91, v92, v93]
v95 <- LoadInteger '1'
v96 <- LoadInteger '10'
v97 <- LoadInteger '1'
v98 <- LoadInteger '2'
v99 <- CallFunction v0, [v96, v97, v98]
v100 <- LoadInteger '1'
v101 <- LoadInteger '0'
v102 <- LoadInteger '1'
v103 <- LoadInteger '2'
v104 <- LoadInteger '3'
v105 <- LoadInteger '4'
v106 <- LoadInteger '5'
v107 <- LoadInteger '6'
v108 <- LoadInteger '7'
v109 <- LoadInteger '8'
v110 <- LoadInteger '9'
v111 <- LoadInteger '10'
v112 <- CallFunction v11, [v101, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111]
v113 <- LoadInteger '4'
v114 <- LoadInteger '3'
v115 <- LoadInteger '1'
v116 <- LoadInteger '2'
v117 <- LoadInteger '3'
v118 <- LoadInteger '4'
v119 <- LoadInteger '5'
v120 <- LoadInteger '6'
v121 <- LoadInteger '7'
v122 <- LoadInteger '8'
v123 <- LoadInteger '9'
v124 <- LoadInteger '10'
v125 <- CallFunction v11, [v114, v115, v116, v117, v118, v119, v120, v121, v122, v123, v124]
v126 <- LoadInteger '10'
v127 <- LoadInteger '9'
v128 <- LoadInteger '1'
v129 <- LoadInteger '2'
v130 <- LoadInteger '3'
v131 <- LoadInteger '4'
v132 <- LoadInteger '5'
v133 <- LoadInteger '6'
v134 <- LoadInteger '7'
v135 <- LoadInteger '8'
v136 <- LoadInteger '9'
v137 <- LoadInteger '10'
v138 <- CallFunction v11, [v127, v128, v129, v130, v131, v132, v133, v134, v135, v136, v137]
v139 <- LoadInteger '1'
v140 <- LoadInteger '6'
v141 <- BinaryOperation v139, '+', v140
v142 <- LoadInteger '0'
v143 <- LoadInteger '1'
v144 <- LoadInteger '2'
v145 <- LoadInteger '3'
v146 <- LoadInteger '4'
v147 <- LoadInteger '5'
v148 <- LoadInteger '6'
v149 <- LoadInteger '7'
v150 <- LoadInteger '8'
v151 <- LoadInteger '9'
v152 <- LoadInteger '10'
v153 <- CallFunction v47, [v142, v143, v144, v145, v146, v147, v148, v149, v150, v151, v152]
v154 <- LoadInteger '4'
v155 <- LoadInteger '9'
v156 <- BinaryOperation v154, '+', v155
v157 <- LoadInteger '3'
v158 <- LoadInteger '1'
v159 <- LoadInteger '2'
v160 <- LoadInteger '3'
v161 <- LoadInteger '4'
v162 <- LoadInteger '5'
v163 <- LoadInteger '6'
v164 <- LoadInteger '7'
v165 <- LoadInteger '8'
v166 <- LoadInteger '9'
v167 <- LoadInteger '10'
v168 <- CallFunction v47, [v157, v158, v159, v160, v161, v162, v163, v164, v165, v166, v167]
v169 <- LoadInteger '5'
v170 <- LoadInteger '10'
v171 <- BinaryOperation v169, '+', v170
v172 <- LoadInteger '9'
v173 <- LoadInteger '1'
v174 <- LoadInteger '2'
v175 <- LoadInteger '3'
v176 <- LoadInteger '4'
v177 <- LoadInteger '5'
v178 <- LoadInteger '6'
v179 <- LoadInteger '7'
v180 <- LoadInteger '8'
v181 <- LoadInteger '9'
v182 <- LoadInteger '10'
v183 <- CallFunction v47, [v172, v173, v174, v175, v176, v177, v178, v179, v180, v181, v182]
v184 <- LoadInteger '1'
v185 <- LoadInteger '0'
v186 <- LoadInteger '1'
v187 <- LoadInteger '2'
v188 <- LoadInteger '3'
v189 <- LoadInteger '4'
v190 <- LoadInteger '5'
v191 <- LoadInteger '6'
v192 <- LoadInteger '7'
v193 <- LoadInteger '8'
v194 <- LoadInteger '9'
v195 <- LoadInteger '10'
v196 <- CallFunction v30, [v185, v186, v187, v188, v189, v190, v191, v192, v193, v194, v195]
v197 <- LoadInteger '4'
v198 <- LoadInteger '3'
v199 <- LoadInteger '1'
v200 <- LoadInteger '2'
v201 <- LoadInteger '3'
v202 <- LoadInteger '4'
v203 <- LoadInteger '5'
v204 <- LoadInteger '6'
v205 <- LoadInteger '7'
v206 <- LoadInteger '8'
v207 <- LoadInteger '9'
v208 <- LoadInteger '10'
v209 <- CallFunction v30, [v198, v199, v200, v201, v202, v203, v204, v205, v206, v207, v208]
v210 <- LoadInteger '10'
v211 <- LoadInteger '9'
v212 <- LoadInteger '1'
v213 <- LoadInteger '2'
v214 <- LoadInteger '3'
v215 <- LoadInteger '4'
v216 <- LoadInteger '5'
v217 <- LoadInteger '6'
v218 <- LoadInteger '7'
v219 <- LoadInteger '8'
v220 <- LoadInteger '9'
v221 <- LoadInteger '10'
v222 <- CallFunction v30, [v211, v212, v213, v214, v215, v216, v217, v218, v219, v220, v221]
v223 <- LoadInteger '1'
v224 <- LoadInteger '6'
v225 <- BinaryOperation v223, '+', v224
v226 <- LoadInteger '0'
v227 <- LoadInteger '1'
v228 <- LoadInteger '2'
v229 <- LoadInteger '3'
v230 <- LoadInteger '4'
v231 <- LoadInteger '5'
v232 <- LoadInteger '6'
v233 <- LoadInteger '7'
v234 <- LoadInteger '8'
v235 <- LoadInteger '9'
v236 <- LoadInteger '10'
v237 <- CallFunction v67, [v226, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236]
v238 <- LoadInteger '4'
v239 <- LoadInteger '9'
v240 <- BinaryOperation v238, '+', v239
v241 <- LoadInteger '3'
v242 <- LoadInteger '1'
v243 <- LoadInteger '2'
v244 <- LoadInteger '3'
v245 <- LoadInteger '4'
v246 <- LoadInteger '5'
v247 <- LoadInteger '6'
v248 <- LoadInteger '7'
v249 <- LoadInteger '8'
v250 <- LoadInteger '9'
v251 <- LoadInteger '10'
v252 <- CallFunction v67, [v241, v242, v243, v244, v245, v246, v247, v248, v249, v250, v251]
v253 <- LoadInteger '5'
v254 <- LoadInteger '10'
v255 <- BinaryOperation v253, '+', v254
v256 <- LoadInteger '9'
v257 <- LoadInteger '1'
v258 <- LoadInteger '2'
v259 <- LoadInteger '3'
v260 <- LoadInteger '4'
v261 <- LoadInteger '5'
v262 <- LoadInteger '6'
v263 <- LoadInteger '7'
v264 <- LoadInteger '8'
v265 <- LoadInteger '9'
v266 <- LoadInteger '10'
v267 <- CallFunction v67, [v256, v257, v258, v259, v260, v261, v262, v263, v264, v265, v266]


function small_select(a1, a2, a3) {
    for (let i5 = 0; i5 < a1; ++i5) {
        var tmp = a2;
        a2 = a3;
        a3 = tmp;
    }
    return a2;
}
function select(a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22) {
    for (let i24 = 0; i24 < a12; ++i24) {
        var tmp = a13;
        a13 = a14;
        a14 = a15;
        a15 = a16;
        a16 = a17;
        a17 = a18;
        a18 = a19;
        a19 = a20;
        a20 = a21;
        a21 = a22;
        a22 = tmp;
    }
    return a13;
}
function select_while(a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41) {
    var i = 0;
    while (i < a31) {
        var tmp = a32;
        a32 = a33;
        a33 = a34;
        a34 = a35;
        a35 = a36;
        a36 = a37;
        a37 = a38;
        a38 = a39;
        a39 = a40;
        a40 = a41;
        a41 = tmp;
        i++;
    }
    return a32;
}
function two_cycles(a48, a49, a50, a51, a52, a53, a54, a55, a56, a57, a58) {
    for (let i60 = 0; i60 < a48; ++i60) {
        var tmp = a49;
        a49 = a50;
        a50 = a51;
        a51 = a52;
        a52 = a53;
        a53 = tmp;
        tmp = a54;
        a54 = a55;
        a55 = a56;
        a56 = a57;
        a57 = a58;
        a58 = tmp;
    }
    return a49 + a54;
}
function two_cycles_while(a68, a69, a70, a71, a72, a73, a74, a75, a76, a77, a78) {
    var i = 0;
    while (i < a68) {
        var tmp = a69;
        a69 = a70;
        a70 = a71;
        a71 = a72;
        a72 = a73;
        a73 = tmp;
        tmp = a74;
        a74 = a75;
        a75 = a76;
        a76 = a77;
        a77 = a78;
        a78 = tmp;
        i++;
    }
    return a69 + a74;
}
small_select(0, 1, 2);
small_select(1, 1, 2);
small_select(10, 1, 2);
select(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
select(3, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
select(9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
1 + 6;
two_cycles(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
4 + 9;
two_cycles(3, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
5 + 10;
two_cycles(9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
select_while(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
select_while(3, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
select_while(9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
1 + 6;
two_cycles_while(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
4 + 9;
two_cycles_while(3, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
5 + 10;
two_cycles_while(9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);

FuzzIL program written to corpus/regress-gap.fzil
