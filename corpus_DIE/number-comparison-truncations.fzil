v0 <- BeginPlainFunction -> 
    v1 <- BeginPlainFunction -> v2, v3
        v4 <- BinaryOperation v2, '*', v3
        v5 <- LoadInteger '0'
        v6 <- Compare v4, '===', v5
        BeginIf v6
            v7 <- LoadInteger '0'
            Return v7
        EndIf
        v8 <- LoadInteger '1'
        Return v8
    EndPlainFunction
    v9 <- LoadInteger '0'
    v10 <- LoadInteger '0'
    v11 <- LoadInteger '1'
    v12 <- CallFunction v1, [v10, v11]
    v13 <- LoadInteger '1'
    v14 <- LoadInteger '1'
    v15 <- LoadInteger '1'
    v16 <- CallFunction v1, [v14, v15]
    v17 <- LoadInteger '1'
    v18 <- LoadInteger '1'
    v19 <- LoadInteger '2'
    v20 <- CallFunction v1, [v18, v19]
    v21 <- LoadInteger '0'
    v22 <- LoadInteger '0'
    v23 <- LoadInteger '1'
    v24 <- CallFunction v1, [v22, v23]
    v25 <- LoadInteger '1'
    v26 <- LoadInteger '1'
    v27 <- LoadInteger '1'
    v28 <- CallFunction v1, [v26, v27]
    v29 <- LoadInteger '1'
    v30 <- LoadInteger '1'
    v31 <- LoadInteger '2'
    v32 <- CallFunction v1, [v30, v31]
    v33 <- CallFunction v1, []
    v34 <- LoadInteger '0'
    v35 <- LoadInteger '3'
    v36 <- UnaryOperation '-', v35
    v37 <- LoadInteger '0'
    v38 <- CallFunction v1, [v36, v37]
    v39 <- LoadInteger '0'
    v40 <- LoadInteger '0'
    v41 <- LoadInteger '3'
    v42 <- UnaryOperation '-', v41
    v43 <- CallFunction v1, [v40, v42]
    v44 <- CallFunction v1, []
EndPlainFunction
v45 <- CallFunction v0, []
v46 <- BeginPlainFunction -> 
    v47 <- BeginPlainFunction -> v48, v49
        v50 <- Compare v48, '===', v49
        Return v50
    EndPlainFunction
    v51 <- LoadFloat '0.1'
    v52 <- LoadFloat '0.5'
    v53 <- CallFunction v47, [v51, v52]
    v54 <- LoadInteger '0'
    v55 <- UnaryOperation '-', v54
    v56 <- LoadInteger '100'
    v57 <- CallFunction v47, [v55, v56]
    v58 <- BeginPlainFunction -> v59, v60
        v61 <- BinaryOperation v59, '*', v60
        v62 <- LoadInteger '0'
        v63 <- CallFunction v47, [v61, v62]
        BeginIf v63
            v64 <- LoadInteger '0'
            Return v64
        EndIf
        v65 <- LoadInteger '1'
        Return v65
    EndPlainFunction
    v66 <- LoadInteger '0'
    v67 <- LoadInteger '0'
    v68 <- LoadInteger '1'
    v69 <- CallFunction v58, [v67, v68]
    v70 <- LoadInteger '1'
    v71 <- LoadInteger '1'
    v72 <- LoadInteger '1'
    v73 <- CallFunction v58, [v71, v72]
    v74 <- LoadInteger '1'
    v75 <- LoadInteger '1'
    v76 <- LoadInteger '2'
    v77 <- CallFunction v58, [v75, v76]
    v78 <- LoadInteger '0'
    v79 <- LoadInteger '0'
    v80 <- LoadInteger '1'
    v81 <- CallFunction v58, [v79, v80]
    v82 <- LoadInteger '1'
    v83 <- LoadInteger '1'
    v84 <- LoadInteger '1'
    v85 <- CallFunction v58, [v83, v84]
    v86 <- LoadInteger '1'
    v87 <- LoadInteger '1'
    v88 <- LoadInteger '2'
    v89 <- CallFunction v58, [v87, v88]
    v90 <- CallFunction v58, []
    v91 <- LoadInteger '0'
    v92 <- LoadInteger '3'
    v93 <- UnaryOperation '-', v92
    v94 <- LoadInteger '0'
    v95 <- CallFunction v58, [v93, v94]
    v96 <- LoadInteger '0'
    v97 <- LoadInteger '0'
    v98 <- LoadInteger '3'
    v99 <- UnaryOperation '-', v98
    v100 <- CallFunction v58, [v97, v99]
    v101 <- CallFunction v58, []
EndPlainFunction
v102 <- CallFunction v46, []
v103 <- BeginPlainFunction -> 
    v104 <- BeginPlainFunction -> v105, v106
        v107 <- BinaryOperation v105, '*', v106
        v108 <- LoadInteger '0'
        v109 <- Compare v107, '<', v108
        BeginIf v109
            v110 <- LoadInteger '0'
            Return v110
        EndIf
        v111 <- LoadInteger '1'
        Return v111
    EndPlainFunction
    v112 <- LoadInteger '0'
    v113 <- LoadInteger '1'
    v114 <- LoadInteger '1'
    v115 <- UnaryOperation '-', v114
    v116 <- CallFunction v104, [v113, v115]
    v117 <- LoadInteger '1'
    v118 <- LoadInteger '1'
    v119 <- LoadInteger '1'
    v120 <- CallFunction v104, [v118, v119]
    v121 <- LoadInteger '1'
    v122 <- LoadInteger '1'
    v123 <- LoadInteger '2'
    v124 <- CallFunction v104, [v122, v123]
    v125 <- LoadInteger '0'
    v126 <- LoadInteger '1'
    v127 <- LoadInteger '1'
    v128 <- UnaryOperation '-', v127
    v129 <- CallFunction v104, [v126, v128]
    v130 <- LoadInteger '1'
    v131 <- LoadInteger '1'
    v132 <- LoadInteger '1'
    v133 <- CallFunction v104, [v131, v132]
    v134 <- LoadInteger '1'
    v135 <- LoadInteger '1'
    v136 <- LoadInteger '2'
    v137 <- CallFunction v104, [v135, v136]
    v138 <- CallFunction v104, []
    v139 <- LoadInteger '1'
    v140 <- LoadInteger '3'
    v141 <- UnaryOperation '-', v140
    v142 <- LoadInteger '0'
    v143 <- CallFunction v104, [v141, v142]
    v144 <- LoadInteger '1'
    v145 <- LoadInteger '0'
    v146 <- LoadInteger '3'
    v147 <- UnaryOperation '-', v146
    v148 <- CallFunction v104, [v145, v147]
    v149 <- CallFunction v104, []
EndPlainFunction
v150 <- CallFunction v103, []
v151 <- BeginPlainFunction -> 
    v152 <- BeginPlainFunction -> v153, v154
        v155 <- Compare v153, '<', v154
        Return v155
    EndPlainFunction
    v156 <- LoadFloat '0.1'
    v157 <- LoadFloat '0.5'
    v158 <- CallFunction v152, [v156, v157]
    v159 <- LoadInteger '0'
    v160 <- UnaryOperation '-', v159
    v161 <- LoadInteger '100'
    v162 <- CallFunction v152, [v160, v161]
    v163 <- BeginPlainFunction -> v164, v165
        v166 <- BinaryOperation v164, '*', v165
        v167 <- LoadInteger '0'
        v168 <- CallFunction v152, [v166, v167]
        BeginIf v168
            v169 <- LoadInteger '0'
            Return v169
        EndIf
        v170 <- LoadInteger '1'
        Return v170
    EndPlainFunction
    v171 <- LoadInteger '0'
    v172 <- LoadInteger '1'
    v173 <- LoadInteger '1'
    v174 <- UnaryOperation '-', v173
    v175 <- CallFunction v163, [v172, v174]
    v176 <- LoadInteger '1'
    v177 <- LoadInteger '1'
    v178 <- LoadInteger '1'
    v179 <- CallFunction v163, [v177, v178]
    v180 <- LoadInteger '1'
    v181 <- LoadInteger '1'
    v182 <- LoadInteger '2'
    v183 <- CallFunction v163, [v181, v182]
    v184 <- LoadInteger '0'
    v185 <- LoadInteger '1'
    v186 <- LoadInteger '1'
    v187 <- UnaryOperation '-', v186
    v188 <- CallFunction v163, [v185, v187]
    v189 <- LoadInteger '1'
    v190 <- LoadInteger '1'
    v191 <- LoadInteger '1'
    v192 <- CallFunction v163, [v190, v191]
    v193 <- LoadInteger '1'
    v194 <- LoadInteger '1'
    v195 <- LoadInteger '2'
    v196 <- CallFunction v163, [v194, v195]
    v197 <- CallFunction v163, []
    v198 <- LoadInteger '1'
    v199 <- LoadInteger '3'
    v200 <- UnaryOperation '-', v199
    v201 <- LoadInteger '0'
    v202 <- CallFunction v163, [v200, v201]
    v203 <- LoadInteger '1'
    v204 <- LoadInteger '0'
    v205 <- LoadInteger '3'
    v206 <- UnaryOperation '-', v205
    v207 <- CallFunction v163, [v204, v206]
    v208 <- CallFunction v163, []
EndPlainFunction
v209 <- CallFunction v151, []
v210 <- BeginPlainFunction -> 
    v211 <- BeginPlainFunction -> v212, v213
        v214 <- BinaryOperation v212, '*', v213
        v215 <- LoadInteger '0'
        v216 <- Compare v214, '<=', v215
        BeginIf v216
            v217 <- LoadInteger '0'
            Return v217
        EndIf
        v218 <- LoadInteger '1'
        Return v218
    EndPlainFunction
    v219 <- LoadInteger '0'
    v220 <- LoadInteger '0'
    v221 <- LoadInteger '1'
    v222 <- CallFunction v211, [v220, v221]
    v223 <- LoadInteger '1'
    v224 <- LoadInteger '1'
    v225 <- LoadInteger '1'
    v226 <- CallFunction v211, [v224, v225]
    v227 <- LoadInteger '1'
    v228 <- LoadInteger '1'
    v229 <- LoadInteger '2'
    v230 <- CallFunction v211, [v228, v229]
    v231 <- LoadInteger '0'
    v232 <- LoadInteger '0'
    v233 <- LoadInteger '1'
    v234 <- CallFunction v211, [v232, v233]
    v235 <- LoadInteger '1'
    v236 <- LoadInteger '1'
    v237 <- LoadInteger '1'
    v238 <- CallFunction v211, [v236, v237]
    v239 <- LoadInteger '1'
    v240 <- LoadInteger '1'
    v241 <- LoadInteger '2'
    v242 <- CallFunction v211, [v240, v241]
    v243 <- CallFunction v211, []
    v244 <- LoadInteger '0'
    v245 <- LoadInteger '3'
    v246 <- UnaryOperation '-', v245
    v247 <- LoadInteger '0'
    v248 <- CallFunction v211, [v246, v247]
    v249 <- LoadInteger '0'
    v250 <- LoadInteger '0'
    v251 <- LoadInteger '3'
    v252 <- UnaryOperation '-', v251
    v253 <- CallFunction v211, [v250, v252]
    v254 <- CallFunction v211, []
EndPlainFunction
v255 <- CallFunction v210, []
v256 <- BeginPlainFunction -> 
    v257 <- BeginPlainFunction -> v258, v259
        v260 <- Compare v258, '<=', v259
        Return v260
    EndPlainFunction
    v261 <- LoadFloat '0.1'
    v262 <- LoadFloat '0.5'
    v263 <- CallFunction v257, [v261, v262]
    v264 <- LoadInteger '0'
    v265 <- UnaryOperation '-', v264
    v266 <- LoadInteger '100'
    v267 <- CallFunction v257, [v265, v266]
    v268 <- BeginPlainFunction -> v269, v270
        v271 <- BinaryOperation v269, '*', v270
        v272 <- LoadInteger '0'
        v273 <- CallFunction v257, [v271, v272]
        BeginIf v273
            v274 <- LoadInteger '0'
            Return v274
        EndIf
        v275 <- LoadInteger '1'
        Return v275
    EndPlainFunction
    v276 <- LoadInteger '0'
    v277 <- LoadInteger '0'
    v278 <- LoadInteger '1'
    v279 <- CallFunction v268, [v277, v278]
    v280 <- LoadInteger '1'
    v281 <- LoadInteger '1'
    v282 <- LoadInteger '1'
    v283 <- CallFunction v268, [v281, v282]
    v284 <- LoadInteger '1'
    v285 <- LoadInteger '1'
    v286 <- LoadInteger '2'
    v287 <- CallFunction v268, [v285, v286]
    v288 <- LoadInteger '0'
    v289 <- LoadInteger '0'
    v290 <- LoadInteger '1'
    v291 <- CallFunction v268, [v289, v290]
    v292 <- LoadInteger '1'
    v293 <- LoadInteger '1'
    v294 <- LoadInteger '1'
    v295 <- CallFunction v268, [v293, v294]
    v296 <- LoadInteger '1'
    v297 <- LoadInteger '1'
    v298 <- LoadInteger '2'
    v299 <- CallFunction v268, [v297, v298]
    v300 <- CallFunction v268, []
    v301 <- LoadInteger '0'
    v302 <- LoadInteger '3'
    v303 <- UnaryOperation '-', v302
    v304 <- LoadInteger '0'
    v305 <- CallFunction v268, [v303, v304]
    v306 <- LoadInteger '0'
    v307 <- LoadInteger '0'
    v308 <- LoadInteger '3'
    v309 <- UnaryOperation '-', v308
    v310 <- CallFunction v268, [v307, v309]
    v311 <- CallFunction v268, []
EndPlainFunction
v312 <- CallFunction v256, []


function f0() {
    function foo(a2, a3) {
        if ((a2 * a3) === 0) {
            return 0;
        }
        return 1;
    }
    foo(0, 1);
    foo(1, 1);
    foo(1, 2);
    foo(0, 1);
    foo(1, 1);
    foo(1, 2);
    foo();
    foo(-3, 0);
    foo(0, -3);
    foo();
}
f0();
function f46() {
    function bar(a48, a49) {
        return a48 === a49;
    }
    bar(0.1, 0.5);
    bar(-0, 100);
    function foo(a59, a60) {
        if (bar(a59 * a60, 0)) {
            return 0;
        }
        return 1;
    }
    foo(0, 1);
    foo(1, 1);
    foo(1, 2);
    foo(0, 1);
    foo(1, 1);
    foo(1, 2);
    foo();
    foo(-3, 0);
    foo(0, -3);
    foo();
}
f46();
function f103() {
    function foo(a105, a106) {
        if ((a105 * a106) < 0) {
            return 0;
        }
        return 1;
    }
    foo(1, -1);
    foo(1, 1);
    foo(1, 2);
    foo(1, -1);
    foo(1, 1);
    foo(1, 2);
    foo();
    foo(-3, 0);
    foo(0, -3);
    foo();
}
f103();
function f151() {
    function bar(a153, a154) {
        return a153 < a154;
    }
    bar(0.1, 0.5);
    bar(-0, 100);
    function foo(a164, a165) {
        if (bar(a164 * a165, 0)) {
            return 0;
        }
        return 1;
    }
    foo(1, -1);
    foo(1, 1);
    foo(1, 2);
    foo(1, -1);
    foo(1, 1);
    foo(1, 2);
    foo();
    foo(-3, 0);
    foo(0, -3);
    foo();
}
f151();
function f210() {
    function foo(a212, a213) {
        if ((a212 * a213) <= 0) {
            return 0;
        }
        return 1;
    }
    foo(0, 1);
    foo(1, 1);
    foo(1, 2);
    foo(0, 1);
    foo(1, 1);
    foo(1, 2);
    foo();
    foo(-3, 0);
    foo(0, -3);
    foo();
}
f210();
function f256() {
    function bar(a258, a259) {
        return a258 <= a259;
    }
    bar(0.1, 0.5);
    bar(-0, 100);
    function foo(a269, a270) {
        if (bar(a269 * a270, 0)) {
            return 0;
        }
        return 1;
    }
    foo(0, 1);
    foo(1, 1);
    foo(1, 2);
    foo(0, 1);
    foo(1, 1);
    foo(1, 2);
    foo();
    foo(-3, 0);
    foo(0, -3);
    foo();
}
f256();

FuzzIL program written to corpus/number-comparison-truncations.fzil
