BeginForLoopInitializer
    v0 <- LoadInteger '0'
BeginForLoopCondition -> v1
    v2 <- LoadInteger '10'
    v3 <- LoadInteger '1000'
    v4 <- BinaryOperation v2, '*', v3
    v5 <- Compare v1, '<', v4
BeginForLoopAfterthought v5 -> v6
    v7 <- UnaryOperation v6, '++'
BeginForLoopBody -> v8
    v9 <- LoadBoolean 'true'
    v10 <- CreateNamedVariable 'Object', 'none'
    v11 <- GetProperty v10, 'prototype'
    v12 <- LoadString 'generatedProperty'
    v13 <- BinaryOperation v12, '+', v8
    SetComputedProperty v11, v13, v9
EndForLoop
v14 <- LoadInteger '1'
v15 <- LoadInteger '2'
v16 <- LoadInteger '3'
v17 <- CreateArray [v14, v15, v16]
v18 <- CreateNamedVariable 'array', 'var', v17
v19 <- LoadInteger '1'
v20 <- LoadString 'a'
BeginObjectLiteral
    ObjectLiteralAddProperty `length`, v19
    ObjectLiteralAddProperty `0`, v20
v21 <- EndObjectLiteral
v22 <- CreateNamedVariable 'object', 'var', v21
v23 <- BeginPlainFunction -> 
    v24 <- CreateArray []
    v25 <- CallMethod v24, 'concat', [v18]
    v26 <- CreateArray []
    v27 <- CallMethod v18, 'concat', [v26]
    v28 <- LoadInteger '1'
    v29 <- LoadInteger '2'
    v30 <- LoadInteger '3'
    v31 <- LoadInteger '1'
    v32 <- LoadInteger '2'
    v33 <- LoadInteger '3'
    v34 <- CreateArray [v28, v29, v30, v31, v32, v33]
    v35 <- CallMethod v18, 'concat', [v18]
    v36 <- CreateArray [v22]
    v37 <- CreateArray []
    v38 <- CallMethod v37, 'concat', [v22]
    v39 <- LoadInteger '1'
    v40 <- LoadInteger '2'
    v41 <- LoadInteger '3'
    v42 <- CreateArray [v39, v40, v41, v22]
    v43 <- CallMethod v18, 'concat', [v22]
    v44 <- CreateArray [v22]
    v45 <- CreateArray []
    v46 <- CreateNamedVariable 'Array', 'none'
    v47 <- GetProperty v46, 'prototype'
    v48 <- GetProperty v47, 'concat'
    v49 <- CallMethod v48, 'call', [v22, v45]
    v50 <- LoadInteger '1'
    v51 <- LoadInteger '2'
    v52 <- LoadInteger '3'
    v53 <- CreateArray [v22, v50, v51, v52]
    v54 <- GetProperty v46, 'prototype'
    v55 <- GetProperty v54, 'concat'
    v56 <- CallMethod v55, 'call', [v22, v18]
    v57 <- CreateArray [v22, v22]
    v58 <- GetProperty v46, 'prototype'
    v59 <- GetProperty v58, 'concat'
    v60 <- CallMethod v59, 'call', [v22, v22]
EndPlainFunction
v61 <- CallFunction v23, []
v62 <- LoadBoolean 'false'
v63 <- CreateNamedVariable 'Object', 'none'
v64 <- GetProperty v63, 'prototype'
v65 <- CreateNamedVariable 'Symbol', 'none'
v66 <- GetProperty v65, 'isConcatSpreadable'
SetComputedProperty v64, v66, v62
v67 <- CreateArray []
v68 <- CreateArray [v67, v18]
v69 <- CreateArray []
v70 <- CallMethod v69, 'concat', [v18]
v71 <- CreateArray []
v72 <- CreateArray [v18, v71]
v73 <- CreateArray []
v74 <- CallMethod v18, 'concat', [v73]
v75 <- CreateArray [v18, v18]
v76 <- CallMethod v18, 'concat', [v18]
v77 <- CreateArray []
v78 <- CreateArray [v77, v22]
v79 <- CreateArray []
v80 <- CallMethod v79, 'concat', [v22]
v81 <- CreateArray [v18, v22]
v82 <- CallMethod v18, 'concat', [v22]
v83 <- CreateArray []
v84 <- CreateArray [v22, v83]
v85 <- CreateArray []
v86 <- CreateNamedVariable 'Array', 'none'
v87 <- GetProperty v86, 'prototype'
v88 <- GetProperty v87, 'concat'
v89 <- CallMethod v88, 'call', [v22, v85]
v90 <- CreateArray [v22, v18]
v91 <- GetProperty v86, 'prototype'
v92 <- GetProperty v91, 'concat'
v93 <- CallMethod v92, 'call', [v22, v18]
v94 <- CreateArray [v22, v22]
v95 <- GetProperty v86, 'prototype'
v96 <- GetProperty v95, 'concat'
v97 <- CallMethod v96, 'call', [v22, v22]
v98 <- LoadBoolean 'true'
v99 <- GetProperty v63, 'prototype'
v100 <- GetProperty v65, 'isConcatSpreadable'
SetComputedProperty v99, v100, v98
v101 <- CreateArray []
v102 <- CallMethod v101, 'concat', [v18]
v103 <- CreateArray []
v104 <- CallMethod v18, 'concat', [v103]
v105 <- LoadInteger '1'
v106 <- LoadInteger '2'
v107 <- LoadInteger '3'
v108 <- LoadInteger '1'
v109 <- LoadInteger '2'
v110 <- LoadInteger '3'
v111 <- CreateArray [v105, v106, v107, v108, v109, v110]
v112 <- CallMethod v18, 'concat', [v18]
v113 <- LoadString 'a'
v114 <- CreateArray [v113]
v115 <- CreateArray []
v116 <- CallMethod v115, 'concat', [v22]
v117 <- LoadInteger '1'
v118 <- LoadInteger '2'
v119 <- LoadInteger '3'
v120 <- LoadString 'a'
v121 <- CreateArray [v117, v118, v119, v120]
v122 <- CallMethod v18, 'concat', [v22]
v123 <- LoadString 'a'
v124 <- CreateArray [v123]
v125 <- CreateArray []
v126 <- GetProperty v86, 'prototype'
v127 <- GetProperty v126, 'concat'
v128 <- CallMethod v127, 'call', [v22, v125]
v129 <- LoadString 'a'
v130 <- LoadInteger '1'
v131 <- LoadInteger '2'
v132 <- LoadInteger '3'
v133 <- CreateArray [v129, v130, v131, v132]
v134 <- GetProperty v86, 'prototype'
v135 <- GetProperty v134, 'concat'
v136 <- CallMethod v135, 'call', [v22, v18]
v137 <- LoadString 'a'
v138 <- LoadString 'a'
v139 <- CreateArray [v137, v138]
v140 <- GetProperty v86, 'prototype'
v141 <- GetProperty v140, 'concat'
v142 <- CallMethod v141, 'call', [v22, v22]
v143 <- GetProperty v63, 'prototype'
v144 <- GetProperty v65, 'isConcatSpreadable'
v145 <- DeleteComputedProperty v143, v144
v146 <- CallFunction v23, []


for (let i1 = 0; i1 < (10 * 1000); i1++) {
    const t1 = Object.prototype;
    t1["generatedProperty" + i1] = true;
}
var array = [1,2,3];
var object = { length: 1, 0: "a" };
function testConcatDefaults() {
    ([]).concat(array);
    array.concat([]);
    [1,2,3,1,2,3];
    array.concat(array);
    [object];
    ([]).concat(object);
    [1,2,3,object];
    array.concat(object);
    [object];
    const v45 = [];
    Array.prototype.concat.call(object, v45);
    [object,1,2,3];
    Array.prototype.concat.call(object, array);
    [object,object];
    Array.prototype.concat.call(object, object);
}
testConcatDefaults();
const t23 = Object.prototype;
t23[Symbol.isConcatSpreadable] = false;
[[],array];
([]).concat(array);
[array,[]];
array.concat([]);
[array,array];
array.concat(array);
[[],object];
([]).concat(object);
[array,object];
array.concat(object);
[object,[]];
const v85 = [];
Array.prototype.concat.call(object, v85);
[object,array];
Array.prototype.concat.call(object, array);
[object,object];
Array.prototype.concat.call(object, object);
const t38 = Object.prototype;
t38[Symbol.isConcatSpreadable] = true;
([]).concat(array);
array.concat([]);
[1,2,3,1,2,3];
array.concat(array);
["a"];
([]).concat(object);
[1,2,3,"a"];
array.concat(object);
["a"];
const v125 = [];
Array.prototype.concat.call(object, v125);
["a",1,2,3];
Array.prototype.concat.call(object, array);
["a","a"];
Array.prototype.concat.call(object, object);
const t55 = Object.prototype;
delete t55[Symbol.isConcatSpreadable];
testConcatDefaults();

FuzzIL program written to corpus/array-concat-object-proto-dict.fzil
