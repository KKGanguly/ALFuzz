BeginTry
    v0 <- CreateNamedVariable 'Int8Array', 'none'
    v1 <- CreateNamedVariable 'Object', 'none'
    v2 <- CallMethod v1, 'getPrototypeOf', [v0]
    v3 <- CreateNamedVariable 'TA', 'var', v2
    v4 <- CreateArray []
    v5 <- CreateNamedVariable 'Reflect', 'none'
    v6 <- CallMethod v5, 'construct', [v3, v4, v0]
    v7 <- CreateNamedVariable 'obj', 'var', v6
    v8 <- LoadInteger '4'
    v9 <- Construct v0, [v8]
    v10 <- CallMethod v9, 'set', [v7]
BeginCatch -> v11
EndTryCatch


try {
    var TA = Object.getPrototypeOf(Int8Array);
    var obj = Reflect.construct(TA, [], Int8Array);
    const v9 = new Int8Array(4);
    v9.set(obj);
} catch(e11) {
}

FuzzIL program written to corpus/regress-5763-2.fzil
