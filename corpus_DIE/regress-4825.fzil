v0 <- BeginPlainFunction -> v1
    v2 <- CreateArray []
    v3 <- CreateNamedVariable 'keys', 'var', v2
    BeginForInLoop v1 -> v4
        v5 <- CallMethod v3, 'push', [v4]
    EndForInLoop
    Return v3
EndPlainFunction
v6 <- BeginPlainFunction -> 
    v7 <- BeginPlainFunction -> v8, v9, v10
        v11 <- LoadString 'last'
        v12 <- LoadArguments
        SetElement v12, '10000', v11
        v13 <- LoadString 'first'
        v14 <- LoadArguments
        SetElement v14, '4000', v13
        v15 <- LoadString 'second'
        v16 <- LoadArguments
        SetElement v16, '6000', v15
        v17 <- LoadString 'x'
        v18 <- LoadArguments
        SetElement v18, '5999', v17
        v19 <- LoadString 'y'
        v20 <- LoadArguments
        SetElement v20, '3999', v19
        v21 <- LoadArguments
        Return v21
    EndPlainFunction
    v22 <- LoadString '0'
    v23 <- LoadString '1'
    v24 <- LoadString '2'
    v25 <- LoadString '3999'
    v26 <- LoadString '4000'
    v27 <- LoadString '5999'
    v28 <- LoadString '6000'
    v29 <- LoadString '10000'
    v30 <- CreateArray [v22, v23, v24, v25, v26, v27, v28, v29]
    v31 <- LoadInteger '1'
    v32 <- LoadInteger '2'
    v33 <- LoadInteger '3'
    v34 <- CallFunction v7, [v31, v32, v33]
    v35 <- CreateNamedVariable 'Object', 'none'
    v36 <- CallMethod v35, 'keys', [v34]
    v37 <- LoadString '0'
    v38 <- LoadString '1'
    v39 <- LoadString '2'
    v40 <- LoadString '3999'
    v41 <- LoadString '4000'
    v42 <- LoadString '5999'
    v43 <- LoadString '6000'
    v44 <- LoadString '10000'
    v45 <- CreateArray [v37, v38, v39, v40, v41, v42, v43, v44]
    v46 <- LoadInteger '1'
    v47 <- LoadInteger '2'
    v48 <- LoadInteger '3'
    v49 <- CallFunction v7, [v46, v47, v48]
    v50 <- CallFunction v0, [v49]
EndPlainFunction
v51 <- CallFunction v6, []
v52 <- BeginPlainFunction -> 
    v53 <- BeginPlainFunction -> v54, v55, v56
        v57 <- LoadArguments
        v58 <- LoadInteger '10000'
        v59 <- LoadBoolean 'false'
        v60 <- LoadBoolean 'false'
        v61 <- LoadString 'NOPE'
        BeginObjectLiteral
            ObjectLiteralAddProperty `enumerable`, v59
            ObjectLiteralAddProperty `configurable`, v60
            ObjectLiteralAddProperty `value`, v61
        v62 <- EndObjectLiteral
        v63 <- CreateNamedVariable 'Object', 'none'
        v64 <- CallMethod v63, 'defineProperty', [v57, v58, v62]
        v65 <- LoadString 'first'
        v66 <- LoadArguments
        SetElement v66, '4000', v65
        v67 <- LoadString 'second'
        v68 <- LoadArguments
        SetElement v68, '6000', v67
        v69 <- LoadString 'x'
        v70 <- LoadArguments
        SetElement v70, '5999', v69
        v71 <- LoadString 'y'
        v72 <- LoadArguments
        SetElement v72, '3999', v71
        v73 <- LoadArguments
        Return v73
    EndPlainFunction
    v74 <- LoadString '0'
    v75 <- LoadString '1'
    v76 <- LoadString '2'
    v77 <- LoadString '3999'
    v78 <- LoadString '4000'
    v79 <- LoadString '5999'
    v80 <- LoadString '6000'
    v81 <- CreateArray [v74, v75, v76, v77, v78, v79, v80]
    v82 <- LoadInteger '1'
    v83 <- LoadInteger '2'
    v84 <- LoadInteger '3'
    v85 <- CallFunction v53, [v82, v83, v84]
    v86 <- CreateNamedVariable 'Object', 'none'
    v87 <- CallMethod v86, 'keys', [v85]
    v88 <- LoadString '0'
    v89 <- LoadString '1'
    v90 <- LoadString '2'
    v91 <- LoadString '3999'
    v92 <- LoadString '4000'
    v93 <- LoadString '5999'
    v94 <- LoadString '6000'
    v95 <- CreateArray [v88, v89, v90, v91, v92, v93, v94]
    v96 <- LoadInteger '1'
    v97 <- LoadInteger '2'
    v98 <- LoadInteger '3'
    v99 <- CallFunction v53, [v96, v97, v98]
    v100 <- CallFunction v0, [v99]
EndPlainFunction
v101 <- CallFunction v52, []
v102 <- BeginPlainFunction -> 
    v103 <- BeginPlainFunction -> v104, v105, v106
        v107 <- LoadInteger '1'
        v108 <- LoadArguments
        SetElement v108, '5', v107
        v109 <- LoadInteger '0'
        v110 <- LoadArguments
        SetElement v110, '7', v109
        v111 <- LoadInteger '2'
        v112 <- LoadArguments
        SetElement v112, '3', v111
        v113 <- LoadArguments
        Return v113
    EndPlainFunction
    v114 <- LoadString '0'
    v115 <- LoadString '1'
    v116 <- LoadString '2'
    v117 <- LoadString '3'
    v118 <- LoadString '5'
    v119 <- LoadString '7'
    v120 <- CreateArray [v114, v115, v116, v117, v118, v119]
    v121 <- LoadInteger '1'
    v122 <- LoadInteger '2'
    v123 <- LoadInteger '3'
    v124 <- CallFunction v103, [v121, v122, v123]
    v125 <- CreateNamedVariable 'Object', 'none'
    v126 <- CallMethod v125, 'keys', [v124]
    v127 <- LoadString '0'
    v128 <- LoadString '1'
    v129 <- LoadString '2'
    v130 <- LoadString '3'
    v131 <- LoadString '5'
    v132 <- LoadString '7'
    v133 <- CreateArray [v127, v128, v129, v130, v131, v132]
    v134 <- LoadInteger '1'
    v135 <- LoadInteger '2'
    v136 <- LoadInteger '3'
    v137 <- CallFunction v103, [v134, v135, v136]
    v138 <- CallFunction v0, [v137]
    v139 <- BeginPlainFunction -> v140, v141, v142
        v143 <- LoadArguments
        v144 <- LoadInteger '0'
        v145 <- DeleteElement v143, '0'
        v146 <- LoadString 'test'
        v147 <- LoadArguments
        SetElement v147, '0', v146
        v148 <- LoadArguments
        Return v148
    EndPlainFunction
    v149 <- LoadString '0'
    v150 <- LoadString '1'
    v151 <- LoadString '2'
    v152 <- CreateArray [v149, v150, v151]
    v153 <- LoadInteger '1'
    v154 <- LoadInteger '2'
    v155 <- LoadInteger '3'
    v156 <- CallFunction v139, [v153, v154, v155]
    v157 <- CallMethod v125, 'keys', [v156]
    v158 <- LoadString '0'
    v159 <- LoadString '1'
    v160 <- LoadString '2'
    v161 <- CreateArray [v158, v159, v160]
    v162 <- LoadInteger '1'
    v163 <- LoadInteger '2'
    v164 <- LoadInteger '3'
    v165 <- CallFunction v139, [v162, v163, v164]
    v166 <- CallFunction v0, [v165]
EndPlainFunction
v167 <- CallFunction v102, []
v168 <- BeginPlainFunction -> 
    v169 <- BeginPlainFunction -> v170, v171, v172
        v173 <- LoadArguments
        v174 <- LoadInteger '5'
        v175 <- LoadBoolean 'false'
        v176 <- LoadBoolean 'false'
        v177 <- LoadString 'NOPE'
        BeginObjectLiteral
            ObjectLiteralAddProperty `enumerable`, v175
            ObjectLiteralAddProperty `configurable`, v176
            ObjectLiteralAddProperty `value`, v177
        v178 <- EndObjectLiteral
        v179 <- CreateNamedVariable 'Object', 'none'
        v180 <- CallMethod v179, 'defineProperty', [v173, v174, v178]
        v181 <- LoadInteger '0'
        v182 <- LoadArguments
        SetElement v182, '7', v181
        v183 <- LoadInteger '2'
        v184 <- LoadArguments
        SetElement v184, '3', v183
        v185 <- LoadArguments
        Return v185
    EndPlainFunction
    v186 <- LoadString '0'
    v187 <- LoadString '1'
    v188 <- LoadString '2'
    v189 <- LoadString '3'
    v190 <- LoadString '7'
    v191 <- CreateArray [v186, v187, v188, v189, v190]
    v192 <- LoadInteger '1'
    v193 <- LoadInteger '2'
    v194 <- LoadInteger '3'
    v195 <- CallFunction v169, [v192, v193, v194]
    v196 <- CreateNamedVariable 'Object', 'none'
    v197 <- CallMethod v196, 'keys', [v195]
    v198 <- LoadString '0'
    v199 <- LoadString '1'
    v200 <- LoadString '2'
    v201 <- LoadString '3'
    v202 <- LoadString '7'
    v203 <- CreateArray [v198, v199, v200, v201, v202]
    v204 <- LoadInteger '1'
    v205 <- LoadInteger '2'
    v206 <- LoadInteger '3'
    v207 <- CallFunction v169, [v204, v205, v206]
    v208 <- CallFunction v0, [v207]
    v209 <- BeginPlainFunction -> v210, v211, v212
        v213 <- LoadArguments
        v214 <- LoadInteger '0'
        v215 <- DeleteElement v213, '0'
        v216 <- LoadArguments
        v217 <- LoadInteger '1'
        v218 <- LoadBoolean 'false'
        v219 <- LoadBoolean 'false'
        v220 <- LoadString 'NOPE'
        BeginObjectLiteral
            ObjectLiteralAddProperty `enumerable`, v218
            ObjectLiteralAddProperty `configurable`, v219
            ObjectLiteralAddProperty `value`, v220
        v221 <- EndObjectLiteral
        v222 <- CallMethod v196, 'defineProperty', [v216, v217, v221]
        v223 <- LoadString 'test'
        v224 <- LoadArguments
        SetElement v224, '0', v223
        v225 <- LoadArguments
        Return v225
    EndPlainFunction
    v226 <- LoadString '0'
    v227 <- LoadString '2'
    v228 <- CreateArray [v226, v227]
    v229 <- LoadInteger '1'
    v230 <- LoadInteger '2'
    v231 <- LoadInteger '3'
    v232 <- CallFunction v209, [v229, v230, v231]
    v233 <- CallMethod v196, 'keys', [v232]
    v234 <- LoadString '0'
    v235 <- LoadString '2'
    v236 <- CreateArray [v234, v235]
    v237 <- LoadInteger '1'
    v238 <- LoadInteger '2'
    v239 <- LoadInteger '3'
    v240 <- CallFunction v209, [v237, v238, v239]
    v241 <- CallFunction v0, [v240]
EndPlainFunction
v242 <- CallFunction v168, []


function enumerate(a1) {
    var keys = [];
    for (const v4 in a1) {
        keys.push(v4);
    }
    return keys;
}
function testSlowSloppyArgumentsElements() {
    function slowSloppyArguments(a8, a9, a10) {
        arguments[10000] = "last";
        arguments[4000] = "first";
        arguments[6000] = "second";
        arguments[5999] = "x";
        arguments[3999] = "y";
        return arguments;
    }
    ["0","1","2","3999","4000","5999","6000","10000"];
    Object.keys(slowSloppyArguments(1, 2, 3));
    ["0","1","2","3999","4000","5999","6000","10000"];
    enumerate(slowSloppyArguments(1, 2, 3));
}
testSlowSloppyArgumentsElements();
function testSlowSloppyArgumentsElementsNotEnumerable() {
    function slowSloppyArguments(a54, a55, a56) {
        Object.defineProperty(arguments, 10000, { enumerable: false, configurable: false, value: "NOPE" });
        arguments[4000] = "first";
        arguments[6000] = "second";
        arguments[5999] = "x";
        arguments[3999] = "y";
        return arguments;
    }
    ["0","1","2","3999","4000","5999","6000"];
    Object.keys(slowSloppyArguments(1, 2, 3));
    ["0","1","2","3999","4000","5999","6000"];
    enumerate(slowSloppyArguments(1, 2, 3));
}
testSlowSloppyArgumentsElementsNotEnumerable();
function testFastSloppyArgumentsElements() {
    function fastSloppyArguments(a104, a105, a106) {
        arguments[5] = 1;
        arguments[7] = 0;
        arguments[3] = 2;
        return arguments;
    }
    ["0","1","2","3","5","7"];
    Object.keys(fastSloppyArguments(1, 2, 3));
    ["0","1","2","3","5","7"];
    enumerate(fastSloppyArguments(1, 2, 3));
    function fastSloppyArguments2(a140, a141, a142) {
        delete arguments[0];
        arguments[0] = "test";
        return arguments;
    }
    ["0","1","2"];
    Object.keys(fastSloppyArguments2(1, 2, 3));
    ["0","1","2"];
    enumerate(fastSloppyArguments2(1, 2, 3));
}
testFastSloppyArgumentsElements();
function testFastSloppyArgumentsElementsNotEnumerable() {
    function fastSloppyArguments(a170, a171, a172) {
        Object.defineProperty(arguments, 5, { enumerable: false, configurable: false, value: "NOPE" });
        arguments[7] = 0;
        arguments[3] = 2;
        return arguments;
    }
    ["0","1","2","3","7"];
    Object.keys(fastSloppyArguments(1, 2, 3));
    ["0","1","2","3","7"];
    enumerate(fastSloppyArguments(1, 2, 3));
    function fastSloppyArguments2(a210, a211, a212) {
        delete arguments[0];
        Object.defineProperty(arguments, 1, { enumerable: false, configurable: false, value: "NOPE" });
        arguments[0] = "test";
        return arguments;
    }
    ["0","2"];
    Object.keys(fastSloppyArguments2(1, 2, 3));
    ["0","2"];
    enumerate(fastSloppyArguments2(1, 2, 3));
}
testFastSloppyArgumentsElementsNotEnumerable();

FuzzIL program written to corpus/regress-4825.fzil
