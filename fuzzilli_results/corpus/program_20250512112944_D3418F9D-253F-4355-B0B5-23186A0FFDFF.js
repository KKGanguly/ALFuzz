const v0 = /(l)/mdgv;
const v1 = /b/muid;
const v2 = /foo(?=bar)baz(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10HqL/syuidg;
const v3 = [4.0,9.957714004162554,0.0,2.195157233911438,427722.6391707598,1.0128487704125533e+308,1.7976931348623157e+308];
const v4 = [-1000000000000.0,3.351556682631756,8.180052228713811e+307,8.717867371783722,2.869956245404359e+307,5.0,-0.6388563875630453];
const v5 = [-2.2250738585072014e-308,1000000.0,-37.970150249584776,-2.220446049250313e-16,1.0,4.0,-393101.7080619243,-1.0,-767.2758380191376,-2.2250738585072014e-308];
function f6(a7, a8, a9, a10) {
    const v25 = {
        get b() {
            super.e = v2;
            try { new a9(this, a7, a7); } catch (e) {}
            return this;
        },
        a: v4,
        e: v2,
        toString(a14, a15) {
            let v17 = -14;
            Math.sin(-356.78063673107863);
            const v21 = a15++;
            ++v17;
            --a15;
            v21 ?? v21;
            return v5;
        },
    };
    v5 && a9;
    a8 = v25;
    [-1000000000.0,-5.0,300.35098601296977,1000000000.0];
    [8.542221079085547e+306,-1e-15,-1.0,-1.0,-1000000000000.0,-355.6018232513634,-0.18561912582554285,-1.7976931348623157e+308];
    [1.7976931348623157e+308,-3.0,2.0,1e-15];
    return v25;
}
const v30 = f6(v4, v4, v5, v2);
f6(v5, v5, f6(v3, v3, v30, v1), v0);
const v33 = [2.2250738585072014e-308,4.0,2.2250738585072014e-308,1.7976931348623157e+308,1000000000000.0,-1000000000000.0,0.8751413435254524,8.297905155977945e+307,-2.2250738585072014e-308,0.3357206244360168];
[91041.70133306156,2.0,-1000000.0];
const v35 = [2.220446049250313e-16,-1000000000.0,927714.5027041121,1e-15,-936.1412824591373,0.0,-2.2250738585072014e-308];
function F36(a38, a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a38;
    v30[v4] = a38;
    a39.h **= a38;
    gc();
    try {
        v4.every(gc, this);
    } catch(e45) {
    }
    this.h = v33;
    this.g = a39;
}
const v46 = new F36(v35, v4, v30, v3);
function f47() {
    f47 ** v46;
    const v49 = %WasmArray();
    for (let v50 = 0; v50 < 5; v50++) {
    }
    return f47;
}
try { f47(); } catch (e) {}
