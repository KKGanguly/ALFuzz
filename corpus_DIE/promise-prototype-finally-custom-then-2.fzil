v0 <- BeginPlainFunction -> v1
    v2 <- BeginArrowFunction -> v3
        Return v3
    EndArrowFunction
    v4 <- CallMethod v1, 'finally', [v2]
    Return v4
EndPlainFunction
v5 <- LoadInteger '1'
v6 <- CreateNamedVariable 'Promise', 'none'
v7 <- CallMethod v6, 'resolve', [v5]
v8 <- CreateNamedVariable 'a', 'const', v7
v9 <- CallFunction v0, [v8]
v10 <- CallFunction v0, [v8]
v11 <- CallFunction v0, [v8]
v12 <- LoadBoolean 'false'
v13 <- CreateNamedVariable 'custom_then_called', 'let', v12
v14 <- BeginPlainFunction -> 
    v15 <- LoadBoolean 'true'
    Reassign v13, v15
EndPlainFunction
SetProperty v8, 'then', v14
v16 <- CallFunction v0, [v8]


function foo(a1) {
    const v2 = (a3) => {
        return a3;
    };
    return a1.finally(v2);
}
const a = Promise.resolve(1);
foo(a);
foo(a);
foo(a);
let custom_then_called = false;
function f14() {
    custom_then_called = true;
}
a.then = f14;
foo(a);

FuzzIL program written to corpus/promise-prototype-finally-custom-then-2.fzil
