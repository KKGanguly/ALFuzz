v0 <- CreateNamedVariable 'Array', 'none'
v1 <- LoadInteger '1'
v2 <- Construct v0, [v1]
v3 <- CreateNamedVariable 'obj', 'var', v2
v4 <- LoadInteger '0'
SetElement v3, '0', v4
v5 <- LoadInteger '0'
SetElement v3, '1', v5
v6 <- BeginPlainFunction -> v7
    v8 <- GetComputedProperty v3, v7
    v9 <- UnaryOperation v8, '++'
EndPlainFunction
v10 <- LoadInteger '3'
v11 <- LoadInteger '8'
v12 <- UnaryOperation '-', v11
SetComputedProperty v3, v12, v10
v13 <- LoadInteger '1'
v14 <- CallFunction v6, [v13]
v15 <- LoadInteger '2'
v16 <- CallFunction v6, [v15]


const v2 = new Array(1);
var obj = v2;
obj[0] = 0;
obj[1] = 0;
function foo(a7) {
    let v8 = obj[a7];
    v8++;
}
obj[-8] = 3;
foo(1);
foo(2);

FuzzIL program written to corpus/regress-350884.fzil
