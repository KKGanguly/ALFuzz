v0 <- BeginPlainFunction -> v1, v2
    v3 <- BinaryOperation v1, '*', v2
    v4 <- BinaryOperation v1, '<<', v2
    v5 <- BinaryOperation v1, '>>', v2
    v6 <- BinaryOperation v1, '>>>', v2
    v7 <- BinaryOperation v1, '|', v2
    v8 <- BinaryOperation v1, '&', v2
    v9 <- BinaryOperation v1, '^', v2
    Return v1
EndPlainFunction
v10 <- BeginPlainFunction -> v11, v12
    v13 <- LoadInteger '0'
    v14 <- BinaryOperation v11, '|', v13
    v15 <- BinaryOperation v14, '*', v12
    v16 <- LoadInteger '0'
    v17 <- BinaryOperation v11, '|', v16
    v18 <- BinaryOperation v17, '<<', v12
    v19 <- LoadInteger '0'
    v20 <- BinaryOperation v11, '|', v19
    v21 <- BinaryOperation v20, '>>', v12
    v22 <- LoadInteger '0'
    v23 <- BinaryOperation v11, '|', v22
    v24 <- BinaryOperation v23, '>>>', v12
    v25 <- LoadInteger '0'
    v26 <- BinaryOperation v11, '|', v25
    v27 <- BinaryOperation v26, '|', v12
    v28 <- LoadInteger '0'
    v29 <- BinaryOperation v11, '|', v28
    v30 <- BinaryOperation v29, '&', v12
    v31 <- LoadInteger '0'
    v32 <- BinaryOperation v11, '|', v31
    v33 <- BinaryOperation v32, '^', v12
    Return v11
EndPlainFunction
v34 <- BeginPlainFunction -> v35, v36
    v37 <- LoadInteger '2'
    v38 <- Compare v35, '==', v37
    v39 <- BinaryOperation v35, '*', v36
    v40 <- BinaryOperation v36, '*', v35
    v41 <- TernaryOperation v38, v39, v40
    Return v35
EndPlainFunction
v42 <- BeginPlainFunction -> v43
    v44 <- LoadInteger '3'
    v45 <- CreateNamedVariable 'z', 'var', v44
    BeginForLoopInitializer
        v46 <- LoadInteger '0'
        v47 <- CreateNamedVariable 'i', 'none'
        Reassign v47, v46
    BeginForLoopCondition
        v48 <- CreateNamedVariable 'i', 'none'
        v49 <- LoadInteger '3'
        v50 <- Compare v48, '<', v49
    BeginForLoopAfterthought v50
        v51 <- CreateNamedVariable 'i', 'none'
        v52 <- UnaryOperation v51, '++'
    BeginForLoopBody
        v53 <- LoadInteger '3'
        v54 <- BinaryOperation v45, '*', v53
    EndForLoop
    Return v43
EndPlainFunction
v55 <- BeginPlainFunction -> v56
    v57 <- LoadInteger '3'
    v58 <- CreateNamedVariable 'z', 'var', v57
    BeginForLoopInitializer
        v59 <- LoadInteger '0'
        v60 <- CreateNamedVariable 'i', 'none'
        Reassign v60, v59
    BeginForLoopCondition
        v61 <- CreateNamedVariable 'i', 'none'
        v62 <- LoadInteger '3'
        v63 <- Compare v61, '<', v62
    BeginForLoopAfterthought v63
        v64 <- CreateNamedVariable 'i', 'none'
        v65 <- UnaryOperation v64, '++'
    BeginForLoopBody
        v66 <- LoadInteger '3'
        v67 <- BinaryOperation v58, '*', v66
        v68 <- UnaryOperation v58, '++'
    EndForLoop
    v69 <- BinaryOperation v58, '*', v56
    v70 <- CreateNamedVariable 'w', 'var', v69
    Return v56
EndPlainFunction
v71 <- LoadInteger '33'
v72 <- LoadInteger '32'
v73 <- CallFunction v0, [v71, v72]
v74 <- LoadInteger '33'
v75 <- Compare v73, '==', v74
v76 <- LoadInteger '33'
v77 <- LoadInteger '32'
v78 <- CallFunction v10, [v76, v77]
v79 <- LoadInteger '33'
v80 <- Compare v78, '==', v79
v81 <- LoadInteger '33'
v82 <- LoadInteger '32'
v83 <- CallFunction v34, [v81, v82]
v84 <- LoadInteger '33'
v85 <- Compare v83, '==', v84
v86 <- LoadInteger '33'
v87 <- CallFunction v42, [v86]
v88 <- LoadInteger '33'
v89 <- Compare v87, '==', v88
v90 <- LoadInteger '33'
v91 <- CallFunction v55, [v90]
v92 <- LoadInteger '33'
v93 <- Compare v91, '==', v92
v94 <- LoadInteger '34'
v95 <- LoadInteger '7'
v96 <- CallFunction v0, [v94, v95]
v97 <- LoadInteger '34'
v98 <- Compare v96, '==', v97
v99 <- LoadInteger '34'
v100 <- LoadInteger '7'
v101 <- CallFunction v10, [v99, v100]
v102 <- LoadInteger '34'
v103 <- Compare v101, '==', v102
v104 <- LoadInteger '34'
v105 <- LoadInteger '7'
v106 <- CallFunction v34, [v104, v105]
v107 <- LoadInteger '34'
v108 <- Compare v106, '==', v107
v109 <- LoadInteger '34'
v110 <- CallFunction v42, [v109]
v111 <- LoadInteger '34'
v112 <- Compare v110, '==', v111
v113 <- LoadInteger '34'
v114 <- CallFunction v55, [v113]
v115 <- LoadInteger '34'
v116 <- Compare v114, '==', v115
v117 <- LoadFloat '3.4'
v118 <- LoadFloat '0.1'
v119 <- CallFunction v0, [v117, v118]
v120 <- LoadFloat '3.4'
v121 <- Compare v119, '==', v120
v122 <- LoadFloat '3.4'
v123 <- LoadFloat '0.1'
v124 <- CallFunction v10, [v122, v123]
v125 <- LoadFloat '3.4'
v126 <- Compare v124, '==', v125
v127 <- LoadFloat '3.4'
v128 <- LoadFloat '0.1'
v129 <- CallFunction v34, [v127, v128]
v130 <- LoadFloat '3.4'
v131 <- Compare v129, '==', v130
v132 <- LoadFloat '3.4'
v133 <- CallFunction v42, [v132]
v134 <- LoadFloat '3.4'
v135 <- Compare v133, '==', v134
v136 <- LoadFloat '3.4'
v137 <- CallFunction v55, [v136]
v138 <- LoadFloat '3.4'
v139 <- Compare v137, '==', v138


function dead1(a1, a2) {
    a1 * a2;
    a1 << a2;
    a1 >> a2;
    a1 >>> a2;
    a1 | a2;
    a1 & a2;
    a1 ^ a2;
    return a1;
}
function dead2(a11, a12) {
    (a11 | 0) * a12;
    (a11 | 0) << a12;
    (a11 | 0) >> a12;
    (a11 | 0) >>> a12;
    (a11 | 0) | a12;
    (a11 | 0) & a12;
    (a11 | 0) ^ a12;
    return a11;
}
function dead3(a35, a36) {
    a35 == 2 ? a35 * a36 : a36 * a35;
    return a35;
}
function dead4(a43) {
    var z = 3;
    for (i = 0; i < 3; i++) {
        z * 3;
    }
    return a43;
}
function dead5(a56) {
    var z = 3;
    for (i = 0; i < 3; i++) {
        z * 3;
        z++;
    }
    var w = z * a56;
    return a56;
}
dead1(33, 32) == 33;
dead2(33, 32) == 33;
dead3(33, 32) == 33;
dead4(33) == 33;
dead5(33) == 33;
dead1(34, 7) == 34;
dead2(34, 7) == 34;
dead3(34, 7) == 34;
dead4(34) == 34;
dead5(34) == 34;
dead1(3.4, 0.1) == 3.4;
dead2(3.4, 0.1) == 3.4;
dead3(3.4, 0.1) == 3.4;
dead4(3.4) == 3.4;
dead5(3.4) == 3.4;

FuzzIL program written to corpus/dead-code5.fzil
