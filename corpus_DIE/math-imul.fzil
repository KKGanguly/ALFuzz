v0 <- CreateNamedVariable 'Math', 'none'
v1 <- GetProperty v0, 'imul'
v2 <- CreateNamedVariable 'imul_func', 'var', v1
v3 <- BeginPlainFunction -> v4, v5
    v6 <- LoadInteger '16'
    v7 <- BinaryOperation v4, '>>>', v6
    v8 <- LoadInteger '65535'
    v9 <- BinaryOperation v7, '&', v8
    v10 <- CreateNamedVariable 'ah', 'var', v9
    v11 <- LoadInteger '65535'
    v12 <- BinaryOperation v4, '&', v11
    v13 <- CreateNamedVariable 'al', 'var', v12
    v14 <- LoadInteger '16'
    v15 <- BinaryOperation v5, '>>>', v14
    v16 <- LoadInteger '65535'
    v17 <- BinaryOperation v15, '&', v16
    v18 <- CreateNamedVariable 'bh', 'var', v17
    v19 <- LoadInteger '65535'
    v20 <- BinaryOperation v5, '&', v19
    v21 <- CreateNamedVariable 'bl', 'var', v20
    v22 <- BinaryOperation v13, '*', v21
    v23 <- BinaryOperation v10, '*', v21
    v24 <- BinaryOperation v13, '*', v18
    v25 <- BinaryOperation v23, '+', v24
    v26 <- LoadInteger '16'
    v27 <- BinaryOperation v25, '<<', v26
    v28 <- LoadInteger '0'
    v29 <- BinaryOperation v27, '>>>', v28
    v30 <- BinaryOperation v22, '+', v29
    v31 <- LoadInteger '0'
    v32 <- BinaryOperation v30, '|', v31
    Return v32
EndPlainFunction
v33 <- BeginPlainFunction -> v34, v35, v36
    v37 <- BeginPlainFunction -> v38, v39
        v40 <- CallMethod v0, 'imul', [v38, v39]
        Return v40
    EndPlainFunction
    v41 <- BeginPlainFunction -> v42, v43
        v44 <- CallFunction v2, [v42, v43]
        Return v44
    EndPlainFunction
    v45 <- CallFunction v3, [v35, v36]
    v46 <- CallMethod v0, 'imul', [v35, v36]
    v47 <- CallFunction v2, [v35, v36]
    v48 <- CallFunction v37, [v35, v36]
    v49 <- CallFunction v37, [v35, v36]
    v50 <- CallFunction v37, [v35, v36]
    v51 <- CallFunction v41, [v35, v36]
    v52 <- CallFunction v41, [v35, v36]
    v53 <- CallFunction v41, [v35, v36]
EndPlainFunction
v54 <- LoadInteger '8'
v55 <- LoadInteger '2'
v56 <- LoadInteger '4'
v57 <- CallFunction v33, [v54, v55, v56]
v58 <- LoadInteger '8'
v59 <- UnaryOperation '-', v58
v60 <- LoadInteger '1'
v61 <- UnaryOperation '-', v60
v62 <- LoadInteger '8'
v63 <- CallFunction v33, [v59, v61, v62]
v64 <- LoadInteger '4'
v65 <- LoadInteger '2'
v66 <- UnaryOperation '-', v65
v67 <- LoadInteger '2'
v68 <- UnaryOperation '-', v67
v69 <- CallFunction v33, [v64, v66, v68]
v70 <- LoadInteger '5'
v71 <- UnaryOperation '-', v70
v72 <- LoadInteger '4294967295'
v73 <- LoadInteger '5'
v74 <- CallFunction v33, [v71, v72, v73]
v75 <- LoadInteger '10'
v76 <- UnaryOperation '-', v75
v77 <- LoadInteger '4294967294'
v78 <- LoadInteger '5'
v79 <- CallFunction v33, [v76, v77, v78]
v80 <- LoadInteger '0'
v81 <- LoadBoolean 'false'
v82 <- LoadInteger '7'
v83 <- CallFunction v33, [v80, v81, v82]
v84 <- LoadInteger '0'
v85 <- LoadInteger '7'
v86 <- LoadBoolean 'false'
v87 <- CallFunction v33, [v84, v85, v86]
v88 <- LoadInteger '0'
v89 <- LoadBoolean 'false'
v90 <- LoadBoolean 'false'
v91 <- CallFunction v33, [v88, v89, v90]
v92 <- LoadInteger '7'
v93 <- LoadBoolean 'true'
v94 <- LoadInteger '7'
v95 <- CallFunction v33, [v92, v93, v94]
v96 <- LoadInteger '7'
v97 <- LoadInteger '7'
v98 <- LoadBoolean 'true'
v99 <- CallFunction v33, [v96, v97, v98]
v100 <- LoadInteger '1'
v101 <- LoadBoolean 'true'
v102 <- LoadBoolean 'true'
v103 <- CallFunction v33, [v100, v101, v102]
v104 <- LoadInteger '0'
v105 <- LoadBoolean 'false'
v106 <- LoadBoolean 'true'
v107 <- CallFunction v33, [v104, v105, v106]
v108 <- LoadInteger '0'
v109 <- LoadBoolean 'true'
v110 <- LoadBoolean 'false'
v111 <- CallFunction v33, [v108, v109, v110]
v112 <- LoadInteger '0'
v113 <- LoadUndefined
v114 <- LoadInteger '7'
v115 <- CallFunction v33, [v112, v113, v114]
v116 <- LoadInteger '0'
v117 <- LoadInteger '7'
v118 <- LoadUndefined
v119 <- CallFunction v33, [v116, v117, v118]
v120 <- LoadInteger '0'
v121 <- LoadUndefined
v122 <- LoadUndefined
v123 <- CallFunction v33, [v120, v121, v122]
v124 <- LoadInteger '0'
v125 <- LoadInteger '0'
v126 <- UnaryOperation '-', v125
v127 <- LoadInteger '7'
v128 <- CallFunction v33, [v124, v126, v127]
v129 <- LoadInteger '0'
v130 <- LoadInteger '7'
v131 <- LoadInteger '0'
v132 <- UnaryOperation '-', v131
v133 <- CallFunction v33, [v129, v130, v132]
v134 <- LoadInteger '0'
v135 <- LoadFloat '0.1'
v136 <- LoadInteger '7'
v137 <- CallFunction v33, [v134, v135, v136]
v138 <- LoadInteger '0'
v139 <- LoadInteger '7'
v140 <- LoadFloat '0.1'
v141 <- CallFunction v33, [v138, v139, v140]
v142 <- LoadInteger '0'
v143 <- LoadFloat '0.9'
v144 <- LoadInteger '7'
v145 <- CallFunction v33, [v142, v143, v144]
v146 <- LoadInteger '0'
v147 <- LoadInteger '7'
v148 <- LoadFloat '0.9'
v149 <- CallFunction v33, [v146, v147, v148]
v150 <- LoadInteger '7'
v151 <- LoadFloat '1.1'
v152 <- LoadInteger '7'
v153 <- CallFunction v33, [v150, v151, v152]
v154 <- LoadInteger '7'
v155 <- LoadInteger '7'
v156 <- LoadFloat '1.1'
v157 <- CallFunction v33, [v154, v155, v156]
v158 <- LoadInteger '7'
v159 <- LoadFloat '1.9'
v160 <- LoadInteger '7'
v161 <- CallFunction v33, [v158, v159, v160]
v162 <- LoadInteger '7'
v163 <- LoadInteger '7'
v164 <- LoadFloat '1.9'
v165 <- CallFunction v33, [v162, v163, v164]
v166 <- LoadInteger '0'
v167 <- LoadString 'str'
v168 <- LoadInteger '7'
v169 <- CallFunction v33, [v166, v167, v168]
v170 <- LoadInteger '0'
v171 <- LoadInteger '7'
v172 <- LoadString 'str'
v173 <- CallFunction v33, [v170, v171, v172]
v174 <- LoadInteger '0'
BeginObjectLiteral
v175 <- EndObjectLiteral
v176 <- LoadInteger '7'
v177 <- CallFunction v33, [v174, v175, v176]
v178 <- LoadInteger '0'
v179 <- LoadInteger '7'
BeginObjectLiteral
v180 <- EndObjectLiteral
v181 <- CallFunction v33, [v178, v179, v180]
v182 <- LoadInteger '0'
v183 <- CreateArray []
v184 <- LoadInteger '7'
v185 <- CallFunction v33, [v182, v183, v184]
v186 <- LoadInteger '0'
v187 <- LoadInteger '7'
v188 <- CreateArray []
v189 <- CallFunction v33, [v186, v187, v188]
v190 <- LoadInteger '1'
v191 <- LoadInteger '30'
v192 <- BinaryOperation v190, '<<', v191
v193 <- CreateNamedVariable 'two_30', 'var', v192
v194 <- UnaryOperation '-', v193
v195 <- LoadInteger '7'
v196 <- CallFunction v33, [v194, v193, v195]
v197 <- UnaryOperation '-', v193
v198 <- LoadInteger '7'
v199 <- CallFunction v33, [v197, v198, v193]
v200 <- LoadInteger '0'
v201 <- CallFunction v33, [v200, v193, v193]
v202 <- UnaryOperation '-', v193
v203 <- LoadInteger '7'
v204 <- CallFunction v33, [v193, v202, v203]
v205 <- LoadInteger '7'
v206 <- UnaryOperation '-', v193
v207 <- CallFunction v33, [v193, v205, v206]
v208 <- LoadInteger '0'
v209 <- UnaryOperation '-', v193
v210 <- UnaryOperation '-', v193
v211 <- CallFunction v33, [v208, v209, v210]
v212 <- LoadInteger '2'
v213 <- BinaryOperation v212, '*', v193
v214 <- CreateNamedVariable 'two_31', 'var', v213
v215 <- UnaryOperation '-', v214
v216 <- LoadInteger '7'
v217 <- CallFunction v33, [v215, v214, v216]
v218 <- UnaryOperation '-', v214
v219 <- LoadInteger '7'
v220 <- CallFunction v33, [v218, v219, v214]
v221 <- LoadInteger '0'
v222 <- CallFunction v33, [v221, v214, v214]
v223 <- UnaryOperation '-', v214
v224 <- UnaryOperation '-', v214
v225 <- LoadInteger '7'
v226 <- CallFunction v33, [v223, v224, v225]
v227 <- UnaryOperation '-', v214
v228 <- LoadInteger '7'
v229 <- UnaryOperation '-', v214
v230 <- CallFunction v33, [v227, v228, v229]
v231 <- LoadInteger '0'
v232 <- UnaryOperation '-', v214
v233 <- UnaryOperation '-', v214
v234 <- CallFunction v33, [v231, v232, v233]
v235 <- LoadInteger '1'
v236 <- BinaryOperation v214, '-', v235
v237 <- CreateNamedVariable 'max_val', 'var', v236
v238 <- LoadInteger '7'
v239 <- BinaryOperation v214, '-', v238
v240 <- LoadInteger '7'
v241 <- CallFunction v33, [v239, v237, v240]
v242 <- LoadInteger '7'
v243 <- BinaryOperation v214, '-', v242
v244 <- LoadInteger '7'
v245 <- CallFunction v33, [v243, v244, v237]
v246 <- LoadInteger '1'
v247 <- CallFunction v33, [v246, v237, v237]
v248 <- LoadInteger '1'
v249 <- LoadInteger '16'
v250 <- BinaryOperation v248, '<<', v249
v251 <- CreateNamedVariable 'two_16', 'var', v250
v252 <- LoadInteger '0'
v253 <- CallFunction v33, [v252, v251, v251]
v254 <- UnaryOperation '-', v251
v255 <- LoadInteger '1'
v256 <- BinaryOperation v251, '-', v255
v257 <- CallFunction v33, [v254, v256, v251]
v258 <- UnaryOperation '-', v251
v259 <- LoadInteger '1'
v260 <- BinaryOperation v251, '-', v259
v261 <- CallFunction v33, [v258, v251, v260]
v262 <- LoadInteger '2'
v263 <- UnaryOperation '-', v262
v264 <- BinaryOperation v263, '*', v251
v265 <- LoadInteger '1'
v266 <- BinaryOperation v264, '+', v265
v267 <- LoadInteger '1'
v268 <- BinaryOperation v251, '-', v267
v269 <- LoadInteger '1'
v270 <- BinaryOperation v251, '-', v269
v271 <- CallFunction v33, [v266, v268, v270]


var imul_func = Math.imul;
function imul_polyfill(a4, a5) {
    var ah = (a4 >>> 16) & 65535;
    var al = a4 & 65535;
    var bh = (a5 >>> 16) & 65535;
    var bl = a5 & 65535;
    return ((al * bl) + ((((ah * bl) + (al * bh)) << 16) >>> 0)) | 0;
}
function TestMathImul(a34, a35, a36) {
    function imul_meth_closure(a38, a39) {
        return Math.imul(a38, a39);
    }
    function imul_func_closure(a42, a43) {
        return imul_func(a42, a43);
    }
    imul_polyfill(a35, a36);
    Math.imul(a35, a36);
    imul_func(a35, a36);
    imul_meth_closure(a35, a36);
    imul_meth_closure(a35, a36);
    imul_meth_closure(a35, a36);
    imul_func_closure(a35, a36);
    imul_func_closure(a35, a36);
    imul_func_closure(a35, a36);
}
TestMathImul(8, 2, 4);
TestMathImul(-8, -1, 8);
TestMathImul(4, -2, -2);
TestMathImul(-5, 4294967295, 5);
TestMathImul(-10, 4294967294, 5);
TestMathImul(0, false, 7);
TestMathImul(0, 7, false);
TestMathImul(0, false, false);
TestMathImul(7, true, 7);
TestMathImul(7, 7, true);
TestMathImul(1, true, true);
TestMathImul(0, false, true);
TestMathImul(0, true, false);
TestMathImul(0, undefined, 7);
TestMathImul(0, 7, undefined);
TestMathImul(0, undefined, undefined);
TestMathImul(0, -0, 7);
TestMathImul(0, 7, -0);
TestMathImul(0, 0.1, 7);
TestMathImul(0, 7, 0.1);
TestMathImul(0, 0.9, 7);
TestMathImul(0, 7, 0.9);
TestMathImul(7, 1.1, 7);
TestMathImul(7, 7, 1.1);
TestMathImul(7, 1.9, 7);
TestMathImul(7, 7, 1.9);
TestMathImul(0, "str", 7);
TestMathImul(0, 7, "str");
TestMathImul(0, {}, 7);
TestMathImul(0, 7, {});
TestMathImul(0, [], 7);
TestMathImul(0, 7, []);
var two_30 = 1 << 30;
TestMathImul(-two_30, two_30, 7);
TestMathImul(-two_30, 7, two_30);
TestMathImul(0, two_30, two_30);
TestMathImul(two_30, -two_30, 7);
TestMathImul(two_30, 7, -two_30);
TestMathImul(0, -two_30, -two_30);
var two_31 = 2 * two_30;
TestMathImul(-two_31, two_31, 7);
TestMathImul(-two_31, 7, two_31);
TestMathImul(0, two_31, two_31);
TestMathImul(-two_31, -two_31, 7);
TestMathImul(-two_31, 7, -two_31);
TestMathImul(0, -two_31, -two_31);
var max_val = two_31 - 1;
TestMathImul(two_31 - 7, max_val, 7);
TestMathImul(two_31 - 7, 7, max_val);
TestMathImul(1, max_val, max_val);
var two_16 = 1 << 16;
TestMathImul(0, two_16, two_16);
TestMathImul(-two_16, two_16 - 1, two_16);
TestMathImul(-two_16, two_16, two_16 - 1);
TestMathImul((-2 * two_16) + 1, two_16 - 1, two_16 - 1);

FuzzIL program written to corpus/math-imul.fzil
