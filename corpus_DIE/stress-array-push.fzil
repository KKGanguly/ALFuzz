v0 <- CreateArray []
v1 <- CreateNamedVariable 'results', 'var', v0
BeginForLoopInitializer
    v2 <- LoadInteger '0'
BeginForLoopCondition -> v3
    v4 <- LoadInteger '60000'
    v5 <- Compare v3, '<', v4
BeginForLoopAfterthought v5 -> v6
    v7 <- UnaryOperation v6, '++'
BeginForLoopBody -> v8
    v9 <- LoadInteger '10000'
    v10 <- BinaryOperation v8, '%', v9
    v11 <- LoadInteger '0'
    v12 <- Compare v10, '==', v11
    BeginIf v12
        v13 <- LoadInteger '0'
        SetProperty v1, 'length', v13
    EndIf
    BeginObjectLiteral
    v14 <- EndObjectLiteral
    v15 <- CallMethod v1, 'push', [v14]
EndForLoop


var results = [];
for (let i3 = 0; i3 < 60000; i3++) {
    if ((i3 % 10000) == 0) {
        results.length = 0;
    }
    results.push({});
}

FuzzIL program written to corpus/stress-array-push.fzil
