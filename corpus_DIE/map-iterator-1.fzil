v0 <- CreateNamedVariable 'Map', 'none'
v1 <- LoadInteger '1'
v2 <- LoadInteger '2'
v3 <- CreateArray [v1, v2]
v4 <- LoadInteger '2'
v5 <- LoadInteger '3'
v6 <- CreateArray [v4, v5]
v7 <- LoadInteger '3'
v8 <- LoadInteger '4'
v9 <- CreateArray [v7, v8]
v10 <- CreateArray [v3, v6, v9]
v11 <- Construct v0, [v10]
v12 <- CreateNamedVariable 'map', 'var', v11
v13 <- LoadInteger '1'
v14 <- LoadInteger '2'
v15 <- CreateArray [v13, v14]
v16 <- LoadInteger '2'
v17 <- LoadInteger '3'
v18 <- CreateArray [v16, v17]
v19 <- LoadInteger '3'
v20 <- LoadInteger '4'
v21 <- CreateArray [v19, v20]
v22 <- CreateArray [v15, v18, v21]
v23 <- CreateArrayWithSpread [...v12]
v24 <- LoadInteger '1'
v25 <- LoadInteger '2'
v26 <- CreateArray [v24, v25]
v27 <- LoadInteger '2'
v28 <- LoadInteger '3'
v29 <- CreateArray [v27, v28]
v30 <- LoadInteger '3'
v31 <- LoadInteger '4'
v32 <- CreateArray [v30, v31]
v33 <- CreateArray [v26, v29, v32]
v34 <- CallMethod v12, 'entries', []
v35 <- CreateArrayWithSpread [...v34]
v36 <- LoadInteger '1'
v37 <- LoadInteger '2'
v38 <- LoadInteger '3'
v39 <- CreateArray [v36, v37, v38]
v40 <- CallMethod v12, 'keys', []
v41 <- CreateArrayWithSpread [...v40]
v42 <- LoadInteger '2'
v43 <- LoadInteger '3'
v44 <- LoadInteger '4'
v45 <- CreateArray [v42, v43, v44]
v46 <- CallMethod v12, 'values', []
v47 <- CreateArrayWithSpread [...v46]
v48 <- BeginArrowFunction -> 
    v49 <- BeginArrowFunction -> 
        v50 <- LoadBoolean 'true'
        BeginObjectLiteral
            ObjectLiteralAddProperty `done`, v50
        v51 <- EndObjectLiteral
        Return v51
    EndArrowFunction
    BeginObjectLiteral
        ObjectLiteralAddProperty `next`, v49
    v52 <- EndObjectLiteral
    Return v52
EndArrowFunction
v53 <- CreateNamedVariable 'Symbol', 'none'
v54 <- GetProperty v53, 'iterator'
SetComputedProperty v12, v54, v48
v55 <- CreateArray []
v56 <- CreateArrayWithSpread [...v12]
v57 <- LoadInteger '1'
v58 <- LoadInteger '2'
v59 <- CreateArray [v57, v58]
v60 <- LoadInteger '2'
v61 <- LoadInteger '3'
v62 <- CreateArray [v60, v61]
v63 <- LoadInteger '3'
v64 <- LoadInteger '4'
v65 <- CreateArray [v63, v64]
v66 <- CreateArray [v59, v62, v65]
v67 <- CallMethod v12, 'entries', []
v68 <- CreateArrayWithSpread [...v67]
v69 <- LoadInteger '1'
v70 <- LoadInteger '2'
v71 <- LoadInteger '3'
v72 <- CreateArray [v69, v70, v71]
v73 <- CallMethod v12, 'keys', []
v74 <- CreateArrayWithSpread [...v73]
v75 <- LoadInteger '2'
v76 <- LoadInteger '3'
v77 <- LoadInteger '4'
v78 <- CreateArray [v75, v76, v77]
v79 <- CallMethod v12, 'values', []
v80 <- CreateArrayWithSpread [...v79]


const v11 = new Map([[1,2],[2,3],[3,4]]);
var map = v11;
[[1,2],[2,3],[3,4]];
[...map];
[[1,2],[2,3],[3,4]];
[...map.entries()];
[1,2,3];
[...map.keys()];
[2,3,4];
[...map.values()];
const v48 = () => {
    const v49 = () => {
        return { done: true };
    };
    return { next: v49 };
};
map[Symbol.iterator] = v48;
[];
[...map];
[[1,2],[2,3],[3,4]];
[...map.entries()];
[1,2,3];
[...map.keys()];
[2,3,4];
[...map.values()];

FuzzIL program written to corpus/map-iterator-1.fzil
