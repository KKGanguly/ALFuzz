v0 <- BeginPlainFunction -> 
EndPlainFunction
v1 <- BeginPlainFunction -> 
    v2 <- BeginPlainFunction -> v3
        BeginIf v3
            v4 <- LoadInteger '1'
            v5 <- LoadInteger '2'
            v6 <- LoadInteger '3'
            v7 <- LoadInteger '3'
            v8 <- LoadInteger '4'
            v9 <- LoadInteger '5'
            v10 <- LoadInteger '6'
            v11 <- LoadInteger '7'
            v12 <- LoadInteger '8'
            v13 <- LoadInteger '9'
            v14 <- CreateArray [v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v0]
            Return v14
        BeginElse
            v15 <- LoadInteger '0'
            Return v15
        EndIf
    EndPlainFunction
    Return v2
EndPlainFunction
v16 <- CallFunction v1, []
v17 <- CreateNamedVariable 'closure1', 'var', v16
v18 <- CallFunction v1, []
v19 <- CreateNamedVariable 'closure2', 'var', v18
v20 <- LoadInteger '1'
v21 <- LoadInteger '2'
v22 <- LoadInteger '3'
v23 <- LoadInteger '3'
v24 <- LoadInteger '4'
v25 <- LoadInteger '5'
v26 <- LoadInteger '6'
v27 <- LoadInteger '7'
v28 <- LoadInteger '8'
v29 <- LoadInteger '9'
v30 <- CreateArray [v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v0]
v31 <- CreateNamedVariable 'expected', 'var', v30
v32 <- LoadInteger '0'
v33 <- LoadBoolean 'false'
v34 <- CallFunction v17, [v33]
v35 <- LoadBoolean 'true'
v36 <- CallFunction v17, [v35]
v37 <- LoadBoolean 'true'
v38 <- CallFunction v17, [v37]
v39 <- LoadInteger '0'
v40 <- LoadBoolean 'false'
v41 <- CallFunction v19, [v40]
v42 <- LoadBoolean 'true'
v43 <- CallFunction v19, [v42]


function bozo() {
}
function MakeClosure() {
    function f(a3) {
        if (a3) {
            return [1,2,3,3,4,5,6,7,8,9,bozo];
        } else {
            return 0;
        }
    }
    return f;
}
var closure1 = MakeClosure();
var closure2 = MakeClosure();
var expected = [1,2,3,3,4,5,6,7,8,9,bozo];
closure1(false);
closure1(true);
closure1(true);
closure2(false);
closure2(true);

FuzzIL program written to corpus/regress-2193.fzil
