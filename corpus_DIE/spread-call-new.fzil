v0 <- BeginPlainFunction -> 
    Directive 'use strict'
    v1 <- BeginPlainFunction -> 
        v2 <- CreateNamedVariable 'Math', 'none'
        v3 <- GetProperty v2, 'cos'
        v4 <- LoadInteger '1'
        v5 <- LoadInteger '2'
        v6 <- LoadInteger '3'
        v7 <- CreateArray [v4, v5, v6]
        v8 <- ConstructWithSpread v3, [...v7]
        Return v8
    EndPlainFunction
    v9 <- CallFunction v1, []
    v10 <- CreateNamedVariable 'TypeError', 'none'
    v11 <- BeginPlainFunction -> 
        v12 <- LoadNull
        v13 <- CreateNamedVariable 'CallNull', 'var', v12
        v14 <- LoadInteger '1'
        v15 <- LoadInteger '2'
        v16 <- LoadInteger '3'
        v17 <- CreateArray [v14, v15, v16]
        v18 <- ConstructWithSpread v13, [...v17]
        Return v18
    EndPlainFunction
    v19 <- CallFunction v11, []
EndPlainFunction
v20 <- CallFunction v0, []
v21 <- BeginPlainFunction -> 
    v22 <- BeginPlainFunction -> 
        v23 <- CreateNamedVariable 'Math', 'none'
        v24 <- GetProperty v23, 'cos'
        v25 <- LoadInteger '1'
        v26 <- LoadInteger '2'
        v27 <- LoadInteger '3'
        v28 <- CreateArray [v25, v26, v27]
        v29 <- ConstructWithSpread v24, [...v28]
        Return v29
    EndPlainFunction
    v30 <- CallFunction v22, []
    v31 <- CreateNamedVariable 'TypeError', 'none'
    v32 <- BeginPlainFunction -> 
        v33 <- LoadNull
        v34 <- CreateNamedVariable 'CallNull', 'var', v33
        v35 <- LoadInteger '1'
        v36 <- LoadInteger '2'
        v37 <- LoadInteger '3'
        v38 <- CreateArray [v35, v36, v37]
        v39 <- ConstructWithSpread v34, [...v38]
        Return v39
    EndPlainFunction
    v40 <- CallFunction v32, []
EndPlainFunction
v41 <- CallFunction v21, []
v42 <- BeginPlainFunction -> 
    Directive 'use strict'
    v43 <- BeginPlainFunction -> v44, v45, v46
        v47 <- LoadBoolean 'true'
        v48 <- LoadThis
        SetProperty v48, 'wasCalled', v47
        v49 <- CreateArray [v44, v45, v46]
        v50 <- LoadThis
        SetProperty v50, 'args', v49
    EndPlainFunction
    v51 <- BeginPlainFunction -> 
        v52 <- LoadThis
        v53 <- GetProperty v52, 'args'
        Return v53
    EndPlainFunction
    v54 <- GetProperty v43, 'prototype'
    SetProperty v54, 'method', v51
    v55 <- LoadInteger '1'
    v56 <- LoadInteger '2'
    v57 <- LoadInteger '3'
    v58 <- CreateArray [v55, v56, v57]
    v59 <- ConstructWithSpread v43, [...v58]
    v60 <- CallFunction v43, []
    v61 <- LoadInteger '1'
    v62 <- LoadInteger '2'
    v63 <- LoadInteger '3'
    v64 <- CreateArray [v61, v62, v63]
    v65 <- LoadInteger '1'
    v66 <- LoadInteger '2'
    v67 <- LoadInteger '3'
    v68 <- CreateArray [v65, v66, v67]
    v69 <- ConstructWithSpread v43, [...v68]
    v70 <- CallMethod v69, 'method', []
    v71 <- LoadInteger '1'
    v72 <- LoadInteger '2'
    v73 <- LoadInteger '3'
    v74 <- CreateArray [v71, v72, v73]
    v75 <- LoadInteger '1'
    v76 <- LoadInteger '2'
    v77 <- LoadInteger '3'
    v78 <- CreateArray [v75, v76, v77]
    v79 <- ConstructWithSpread v43, [...v78]
    v80 <- GetProperty v79, 'args'
    v81 <- LoadInteger '1'
    v82 <- LoadInteger '2'
    v83 <- LoadInteger '3'
    v84 <- CreateArray [v81, v82, v83]
    v85 <- ConstructWithSpread v43, [...v84]
    v86 <- GetProperty v85, 'wasCalled'
EndPlainFunction
v87 <- CallFunction v42, []
v88 <- BeginPlainFunction -> 
    v89 <- BeginPlainFunction -> v90, v91, v92
        v93 <- LoadBoolean 'true'
        v94 <- LoadThis
        SetProperty v94, 'wasCalled', v93
        v95 <- CreateArray [v90, v91, v92]
        v96 <- LoadThis
        SetProperty v96, 'args', v95
    EndPlainFunction
    v97 <- BeginPlainFunction -> 
        v98 <- LoadThis
        v99 <- GetProperty v98, 'args'
        Return v99
    EndPlainFunction
    v100 <- GetProperty v89, 'prototype'
    SetProperty v100, 'method', v97
    v101 <- LoadInteger '1'
    v102 <- LoadInteger '2'
    v103 <- LoadInteger '3'
    v104 <- CreateArray [v101, v102, v103]
    v105 <- ConstructWithSpread v89, [...v104]
    v106 <- CallFunction v89, []
    v107 <- LoadInteger '1'
    v108 <- LoadInteger '2'
    v109 <- LoadInteger '3'
    v110 <- CreateArray [v107, v108, v109]
    v111 <- LoadInteger '1'
    v112 <- LoadInteger '2'
    v113 <- LoadInteger '3'
    v114 <- CreateArray [v111, v112, v113]
    v115 <- ConstructWithSpread v89, [...v114]
    v116 <- CallMethod v115, 'method', []
    v117 <- LoadInteger '1'
    v118 <- LoadInteger '2'
    v119 <- LoadInteger '3'
    v120 <- CreateArray [v117, v118, v119]
    v121 <- LoadInteger '1'
    v122 <- LoadInteger '2'
    v123 <- LoadInteger '3'
    v124 <- CreateArray [v121, v122, v123]
    v125 <- ConstructWithSpread v89, [...v124]
    v126 <- GetProperty v125, 'args'
    v127 <- LoadInteger '1'
    v128 <- LoadInteger '2'
    v129 <- LoadInteger '3'
    v130 <- CreateArray [v127, v128, v129]
    v131 <- ConstructWithSpread v89, [...v130]
    v132 <- GetProperty v131, 'wasCalled'
EndPlainFunction
v133 <- CallFunction v88, []


function testNonConstructorStrict() {
    'use strict';
    function f1() {
        const t3 = Math.cos;
        const v8 = new t3(...[1,2,3]);
        return v8;
    }
    f1();
    function f11() {
        var CallNull = null;
        const v18 = new CallNull(...[1,2,3]);
        return v18;
    }
    f11();
}
testNonConstructorStrict();
function testNonConstructorSloppy() {
    function f22() {
        const t18 = Math.cos;
        const v29 = new t18(...[1,2,3]);
        return v29;
    }
    f22();
    function f32() {
        var CallNull = null;
        const v39 = new CallNull(...[1,2,3]);
        return v39;
    }
    f32();
}
testNonConstructorSloppy();
function testConstructStrict() {
    'use strict';
    function TestClass(a44, a45, a46) {
        this.wasCalled = true;
        this.args = [a44,a45,a46];
    }
    function f51() {
        return this.args;
    }
    const t40 = TestClass.prototype;
    t40.method = f51;
    new TestClass(...[1,2,3]);
    TestClass();
    [1,2,3];
    const v69 = new TestClass(...[1,2,3]);
    v69.method();
    [1,2,3];
    const v79 = new TestClass(...[1,2,3]);
    v79.args;
    const v85 = new TestClass(...[1,2,3]);
    v85.wasCalled;
}
testConstructStrict();
function testConstructSloppy() {
    function TestClass(a90, a91, a92) {
        this.wasCalled = true;
        this.args = [a90,a91,a92];
    }
    function f97() {
        return this.args;
    }
    const t62 = TestClass.prototype;
    t62.method = f97;
    new TestClass(...[1,2,3]);
    TestClass();
    [1,2,3];
    const v115 = new TestClass(...[1,2,3]);
    v115.method();
    [1,2,3];
    const v125 = new TestClass(...[1,2,3]);
    v125.args;
    const v131 = new TestClass(...[1,2,3]);
    v131.wasCalled;
}
testConstructSloppy();

FuzzIL program written to corpus/spread-call-new.fzil
