v0 <- BeginPlainFunction -> 
    Directive 'use strict'
    v1 <- BeginPlainFunction -> 
        v2 <- LoadInteger '1'
        v3 <- LoadThis
        SetProperty v3, 'x', v2
        v4 <- LoadInteger '2'
        v5 <- LoadThis
        SetProperty v5, 'y', v4
        v6 <- LoadInteger '3'
        v7 <- LoadThis
        SetProperty v7, 'z', v6
    EndPlainFunction
    v8 <- BeginPlainFunction -> v9
        v10 <- LoadThis
        SetProperty v10, 'a', v9
        v11 <- LoadInteger '4'
        v12 <- LoadThis
        SetProperty v12, 'b', v11
    EndPlainFunction
    v13 <- BeginPlainFunction -> 
        v14 <- Construct v1, []
        v15 <- CreateNamedVariable 'o1', 'var', v14
        v16 <- Construct v8, [v15]
        v17 <- CreateNamedVariable 'o2', 'var', v16
        SetProperty v15, 'x', v15
        v18 <- GetProperty v15, 'x'
        v19 <- LoadInteger '2'
        v20 <- GetProperty v15, 'y'
        v21 <- LoadInteger '3'
        v22 <- GetProperty v15, 'z'
        v23 <- GetProperty v17, 'a'
        v24 <- LoadInteger '4'
        v25 <- GetProperty v17, 'b'
    EndPlainFunction
    v26 <- CallFunction v13, []
    v27 <- CallFunction v13, []
    v28 <- CallFunction v13, []
EndPlainFunction
v29 <- CallFunction v0, []


function testDeoptLocal() {
    'use strict';
    function constructor1() {
        this.x = 1;
        this.y = 2;
        this.z = 3;
    }
    function constructor2(a9) {
        this.a = a9;
        this.b = 4;
    }
    function func() {
        const v14 = new constructor1();
        var o1 = v14;
        const v16 = new constructor2(o1);
        var o2 = v16;
        o1.x = o1;
        o1.x;
        o1.y;
        o1.z;
        o2.a;
        o2.b;
    }
    func();
    func();
    func();
}
testDeoptLocal();

FuzzIL program written to corpus/escape-analysis-deopt-4.fzil
