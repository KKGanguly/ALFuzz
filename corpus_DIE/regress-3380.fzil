v0 <- BeginPlainFunction -> v1
    v2 <- GetElement v1, '0'
    v3 <- LoadInteger '0'
    v4 <- BinaryOperation v2, '>>>', v3
    v5 <- LoadInteger '0'
    v6 <- Compare v4, '>', v5
    Return v6
EndPlainFunction
v7 <- CreateNamedVariable 'Uint32Array', 'none'
v8 <- LoadInteger '4'
v9 <- CreateArray [v8]
v10 <- Construct v7, [v9]
v11 <- CreateNamedVariable 'a', 'var', v10
v12 <- LoadInteger '2147483648'
v13 <- CreateArray [v12]
v14 <- Construct v7, [v13]
v15 <- CreateNamedVariable 'b', 'var', v14
v16 <- CallFunction v0, [v11]
v17 <- CallFunction v0, [v11]
v18 <- CallFunction v0, [v15]


function foo(a1) {
    return (a1[0] >>> 0) > 0;
}
const v10 = new Uint32Array([4]);
var a = v10;
const v14 = new Uint32Array([2147483648]);
var b = v14;
foo(a);
foo(a);
foo(b);

FuzzIL program written to corpus/regress-3380.fzil
