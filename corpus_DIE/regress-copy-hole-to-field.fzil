v0 <- LoadFloat '1.5'
v1 <- LoadUndefined
v2 <- LoadFloat '1.7'
v3 <- CreateArray [v0, v1, v2]
v4 <- CreateNamedVariable 'a', 'var', v3
v5 <- LoadFloat '1.8'
BeginObjectLiteral
    ObjectLiteralAddProperty `a`, v5
v6 <- EndObjectLiteral
v7 <- CreateNamedVariable 'o', 'var', v6
v8 <- BeginPlainFunction -> v9, v10, v11
    v12 <- GetComputedProperty v10, v11
    SetProperty v9, 'a', v12
EndPlainFunction
v13 <- LoadInteger '0'
v14 <- CallFunction v8, [v7, v4, v13]
v15 <- LoadInteger '0'
v16 <- CallFunction v8, [v7, v4, v15]
v17 <- LoadFloat '1.5'
v18 <- GetProperty v7, 'a'
v19 <- LoadInteger '1'
v20 <- CallFunction v8, [v7, v4, v19]
v21 <- LoadUndefined
v22 <- GetProperty v7, 'a'
v23 <- LoadInteger '1'
v24 <- LoadUndefined
v25 <- LoadInteger '3'
v26 <- CreateArray [v23, v24, v25]
v27 <- CreateNamedVariable 'a', 'var', v26
v28 <- LoadInteger '5'
BeginObjectLiteral
    ObjectLiteralAddProperty `ab`, v28
v29 <- EndObjectLiteral
v30 <- CreateNamedVariable 'o', 'var', v29
v31 <- BeginPlainFunction -> v32, v33, v34
    v35 <- GetComputedProperty v33, v34
    SetProperty v32, 'ab', v35
EndPlainFunction
v36 <- LoadInteger '0'
v37 <- CallFunction v31, [v30, v27, v36]
v38 <- LoadInteger '0'
v39 <- CallFunction v31, [v30, v27, v38]
v40 <- LoadInteger '1'
v41 <- CallFunction v31, [v30, v27, v40]
v42 <- LoadUndefined
v43 <- GetProperty v30, 'ab'


var a = [1.5,,1.7];
var o = { a: 1.8 };
function f1(a9, a10, a11) {
    a9.a = a10[a11];
}
f1(o, a, 0);
f1(o, a, 0);
o.a;
f1(o, a, 1);
o.a;
var a = [1,,3];
var o = { ab: 5 };
function f2(a32, a33, a34) {
    a32.ab = a33[a34];
}
f2(o, a, 0);
f2(o, a, 0);
f2(o, a, 1);
o.ab;

FuzzIL program written to corpus/regress-copy-hole-to-field.fzil
