v0 <- LoadInteger '0'
v1 <- LoadInteger '1'
v2 <- LoadInteger '2'
v3 <- LoadInteger '3'
v4 <- LoadInteger '100'
v5 <- LoadInteger '101'
v6 <- LoadInteger '102'
v7 <- LoadInteger '103'
v8 <- LoadInteger '128'
v9 <- LoadInteger '129'
v10 <- LoadInteger '130'
v11 <- LoadInteger '131'
v12 <- LoadInteger '252'
v13 <- LoadInteger '253'
v14 <- LoadInteger '254'
v15 <- LoadInteger '255'
v16 <- CreateArray [v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15]
v17 <- CreateNamedVariable 'intArray1', 'var', v16
v18 <- LoadInteger '31'
v19 <- LoadInteger '32'
v20 <- LoadInteger '33'
v21 <- LoadInteger '0'
v22 <- LoadInteger '1'
v23 <- LoadInteger '2'
v24 <- LoadInteger '3'
v25 <- LoadInteger '100'
v26 <- LoadInteger '101'
v27 <- LoadInteger '102'
v28 <- LoadInteger '103'
v29 <- LoadInteger '128'
v30 <- LoadInteger '129'
v31 <- LoadInteger '130'
v32 <- LoadInteger '131'
v33 <- LoadInteger '252'
v34 <- LoadInteger '253'
v35 <- LoadInteger '254'
v36 <- LoadInteger '255'
v37 <- CreateArray [v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36]
v38 <- CreateNamedVariable 'intArray2', 'var', v37
v39 <- LoadInteger '204'
v40 <- LoadInteger '204'
v41 <- LoadInteger '204'
v42 <- LoadInteger '204'
v43 <- LoadInteger '204'
v44 <- LoadInteger '204'
v45 <- LoadInteger '204'
v46 <- LoadInteger '204'
v47 <- LoadInteger '204'
v48 <- LoadInteger '204'
v49 <- LoadInteger '204'
v50 <- LoadInteger '204'
v51 <- LoadInteger '204'
v52 <- LoadInteger '204'
v53 <- LoadInteger '204'
v54 <- LoadInteger '204'
v55 <- CreateArray [v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54]
v56 <- CreateNamedVariable 'initialArray', 'var', v55
v57 <- LoadNull
v58 <- CreateNamedVariable 'arayBuffer', 'var', v57
v59 <- LoadNull
v60 <- CreateNamedVariable 'view', 'var', v59
v61 <- LoadInteger '0'
v62 <- CreateNamedVariable 'viewStart', 'var', v61
v63 <- LoadInteger '0'
v64 <- CreateNamedVariable 'viewLength', 'var', v63
v65 <- BeginPlainFunction -> v66
    v67 <- LoadString 'Int8'
    v68 <- LoadString 'Uint8'
    v69 <- LoadString 'Int16'
    v70 <- LoadString 'Uint16'
    v71 <- LoadString 'Int32'
    v72 <- LoadString 'Uint32'
    v73 <- LoadString 'Float32'
    v74 <- LoadString 'Float64'
    BeginSwitch v66
        BeginSwitchCase v67
        EndSwitchCase fallsThrough
        BeginSwitchCase v68
            v75 <- LoadInteger '1'
            Return v75
        EndSwitchCase fallsThrough
        BeginSwitchCase v69
        EndSwitchCase fallsThrough
        BeginSwitchCase v70
            v76 <- LoadInteger '2'
            Return v76
        EndSwitchCase fallsThrough
        BeginSwitchCase v71
        EndSwitchCase fallsThrough
        BeginSwitchCase v72
        EndSwitchCase fallsThrough
        BeginSwitchCase v73
            v77 <- LoadInteger '4'
            Return v77
        EndSwitchCase fallsThrough
        BeginSwitchCase v74
            v78 <- LoadInteger '8'
            Return v78
        EndSwitchCase fallsThrough
        BeginSwitchDefaultCase
        EndSwitchCase fallsThrough
    EndSwitch
EndPlainFunction
v79 <- BeginPlainFunction -> v80, v81, v82, v83
    v84 <- BeginPlainFunction -> 
        v85 <- LoadUndefined
        v86 <- Compare v83, '!=', v85
        BeginIf v86
            v87 <- LoadString 'get'
            v88 <- BinaryOperation v87, '+', v80
            v89 <- CallComputedMethod v60, v88, [v81, v83]
            Return v89
        BeginElse
            v90 <- LoadString 'get'
            v91 <- BinaryOperation v90, '+', v80
            v92 <- CallComputedMethod v60, v91, [v81]
            Return v92
        EndIf
    EndPlainFunction
    v93 <- LoadInteger '0'
    v94 <- Compare v81, '>=', v93
    v95 <- CallFunction v65, [v80]
    v96 <- BinaryOperation v81, '+', v95
    v97 <- LoadInteger '1'
    v98 <- BinaryOperation v96, '-', v97
    v99 <- GetProperty v60, 'byteLength'
    v100 <- Compare v98, '<', v99
    v101 <- BinaryOperation v94, '&&', v100
    BeginIf v101
        v102 <- CallFunction v84, []
    BeginElse
        v103 <- CallFunction v84, []
        v104 <- CreateNamedVariable 'RangeError', 'none'
    EndIf
EndPlainFunction
v105 <- BeginPlainFunction -> v106, v107, v108, v109
    v110 <- BeginPlainFunction -> 
        v111 <- LoadUndefined
        v112 <- Compare v109, '!=', v111
        BeginIf v112
            v113 <- LoadString 'set'
            v114 <- BinaryOperation v113, '+', v106
            v115 <- CallComputedMethod v60, v114, [v107, v108, v109]
        BeginElse
            v116 <- LoadString 'set'
            v117 <- BinaryOperation v116, '+', v106
            v118 <- CallComputedMethod v60, v117, [v107, v108]
        EndIf
    EndPlainFunction
    v119 <- LoadInteger '0'
    v120 <- Compare v107, '>=', v119
    v121 <- CallFunction v65, [v106]
    v122 <- BinaryOperation v107, '+', v121
    v123 <- LoadInteger '1'
    v124 <- BinaryOperation v122, '-', v123
    v125 <- GetProperty v60, 'byteLength'
    v126 <- Compare v124, '<', v125
    v127 <- BinaryOperation v120, '&&', v126
    BeginIf v127
        v128 <- LoadUndefined
        v129 <- CallFunction v110, []
        v130 <- CallFunction v79, [v106, v107, v108, v109]
    BeginElse
        v131 <- CallFunction v110, []
        v132 <- CreateNamedVariable 'RangeError', 'none'
    EndIf
EndPlainFunction
v133 <- BeginPlainFunction -> v134, v135, v136, v137, v138
    BeginIf v134
        v139 <- CallFunction v79, [v135, v136, v137, v138]
    BeginElse
        v140 <- CallFunction v105, [v135, v136, v137, v138]
    EndIf
EndPlainFunction
v141 <- BeginPlainFunction -> v142, v143, v144, v145, v146
    v147 <- UnaryOperation '!', v144
    BeginIf v147
        v148 <- CallMethod v142, 'reverse', []
    EndIf
    v149 <- CreateNamedVariable 'Array', 'none'
    v150 <- Construct v149, [v143]
    v151 <- CreateNamedVariable 'paddingArray', 'var', v150
    v152 <- CreateNamedVariable 'Uint8Array', 'none'
    v153 <- CallMethod v151, 'concat', [v142]
    v154 <- Construct v152, [v153]
    v155 <- GetProperty v154, 'buffer'
    v156 <- CreateNamedVariable 'arrayBuffer', 'none'
    Reassign v156, v155
    v157 <- CreateNamedVariable 'DataView', 'none'
    v158 <- CreateNamedVariable 'arrayBuffer', 'none'
    v159 <- Construct v157, [v158, v62, v64]
    Reassign v60, v159
    v160 <- UnaryOperation '!', v144
    BeginIf v160
        v161 <- CallMethod v142, 'reverse', []
    EndIf
EndPlainFunction
v162 <- BeginPlainFunction -> v163, v164, v165, v166
    v167 <- LoadInteger '0'
    v168 <- LoadBoolean 'true'
    v169 <- CallFunction v141, [v164, v167, v168, v165, v166]
    v170 <- LoadString 'Int8'
    v171 <- LoadInteger '0'
    v172 <- LoadInteger '0'
    v173 <- CallFunction v133, [v163, v170, v171, v172]
    v174 <- LoadString 'Int8'
    v175 <- LoadUndefined
    v176 <- LoadInteger '0'
    v177 <- CallFunction v133, [v163, v174, v175, v176]
    v178 <- LoadString 'Int8'
    v179 <- LoadInteger '8'
    v180 <- LoadInteger '128'
    v181 <- UnaryOperation '-', v180
    v182 <- CallFunction v133, [v163, v178, v179, v181]
    v183 <- LoadString 'Int8'
    v184 <- LoadInteger '15'
    v185 <- LoadInteger '1'
    v186 <- UnaryOperation '-', v185
    v187 <- CallFunction v133, [v163, v183, v184, v186]
    v188 <- LoadString 'Int8'
    v189 <- LoadInteger '1000000000000'
    v190 <- LoadUndefined
    v191 <- CallFunction v133, [v163, v188, v189, v190]
    v192 <- LoadString 'Uint8'
    v193 <- LoadInteger '0'
    v194 <- LoadInteger '0'
    v195 <- CallFunction v133, [v163, v192, v193, v194]
    v196 <- LoadString 'Uint8'
    v197 <- LoadUndefined
    v198 <- LoadInteger '0'
    v199 <- CallFunction v133, [v163, v196, v197, v198]
    v200 <- LoadString 'Uint8'
    v201 <- LoadInteger '8'
    v202 <- LoadInteger '128'
    v203 <- CallFunction v133, [v163, v200, v201, v202]
    v204 <- LoadString 'Uint8'
    v205 <- LoadInteger '15'
    v206 <- LoadInteger '255'
    v207 <- CallFunction v133, [v163, v204, v205, v206]
    v208 <- LoadString 'Uint8'
    v209 <- LoadInteger '1000000000000'
    v210 <- LoadUndefined
    v211 <- CallFunction v133, [v163, v208, v209, v210]
    v212 <- LoadString 'Int16'
    v213 <- LoadInteger '0'
    v214 <- LoadInteger '256'
    v215 <- LoadBoolean 'true'
    v216 <- CallFunction v133, [v163, v212, v213, v214, v215]
    v217 <- LoadString 'Int16'
    v218 <- LoadUndefined
    v219 <- LoadInteger '256'
    v220 <- LoadBoolean 'true'
    v221 <- CallFunction v133, [v163, v217, v218, v219, v220]
    v222 <- LoadString 'Int16'
    v223 <- LoadInteger '5'
    v224 <- LoadInteger '26213'
    v225 <- LoadBoolean 'true'
    v226 <- CallFunction v133, [v163, v222, v223, v224, v225]
    v227 <- LoadString 'Int16'
    v228 <- LoadInteger '9'
    v229 <- LoadInteger '32127'
    v230 <- UnaryOperation '-', v229
    v231 <- LoadBoolean 'true'
    v232 <- CallFunction v133, [v163, v227, v228, v230, v231]
    v233 <- LoadString 'Int16'
    v234 <- LoadInteger '14'
    v235 <- LoadInteger '2'
    v236 <- UnaryOperation '-', v235
    v237 <- LoadBoolean 'true'
    v238 <- CallFunction v133, [v163, v233, v234, v236, v237]
    v239 <- LoadString 'Int16'
    v240 <- LoadInteger '1000000000000'
    v241 <- LoadUndefined
    v242 <- LoadBoolean 'true'
    v243 <- CallFunction v133, [v163, v239, v240, v241, v242]
    v244 <- LoadString 'Int16'
    v245 <- LoadInteger '0'
    v246 <- LoadInteger '1'
    v247 <- CallFunction v133, [v163, v244, v245, v246]
    v248 <- LoadString 'Int16'
    v249 <- LoadUndefined
    v250 <- LoadInteger '1'
    v251 <- CallFunction v133, [v163, v248, v249, v250]
    v252 <- LoadString 'Int16'
    v253 <- LoadInteger '5'
    v254 <- LoadInteger '25958'
    v255 <- CallFunction v133, [v163, v252, v253, v254]
    v256 <- LoadString 'Int16'
    v257 <- LoadInteger '9'
    v258 <- LoadInteger '32382'
    v259 <- UnaryOperation '-', v258
    v260 <- CallFunction v133, [v163, v256, v257, v259]
    v261 <- LoadString 'Int16'
    v262 <- LoadInteger '14'
    v263 <- LoadInteger '257'
    v264 <- UnaryOperation '-', v263
    v265 <- CallFunction v133, [v163, v261, v262, v264]
    v266 <- LoadString 'Int16'
    v267 <- LoadInteger '1000000000000'
    v268 <- LoadUndefined
    v269 <- CallFunction v133, [v163, v266, v267, v268]
    v270 <- LoadString 'Uint16'
    v271 <- LoadInteger '0'
    v272 <- LoadInteger '256'
    v273 <- LoadBoolean 'true'
    v274 <- CallFunction v133, [v163, v270, v271, v272, v273]
    v275 <- LoadString 'Uint16'
    v276 <- LoadUndefined
    v277 <- LoadInteger '256'
    v278 <- LoadBoolean 'true'
    v279 <- CallFunction v133, [v163, v275, v276, v277, v278]
    v280 <- LoadString 'Uint16'
    v281 <- LoadInteger '5'
    v282 <- LoadInteger '26213'
    v283 <- LoadBoolean 'true'
    v284 <- CallFunction v133, [v163, v280, v281, v282, v283]
    v285 <- LoadString 'Uint16'
    v286 <- LoadInteger '9'
    v287 <- LoadInteger '33409'
    v288 <- LoadBoolean 'true'
    v289 <- CallFunction v133, [v163, v285, v286, v287, v288]
    v290 <- LoadString 'Uint16'
    v291 <- LoadInteger '14'
    v292 <- LoadInteger '65534'
    v293 <- LoadBoolean 'true'
    v294 <- CallFunction v133, [v163, v290, v291, v292, v293]
    v295 <- LoadString 'Uint16'
    v296 <- LoadInteger '1000000000000'
    v297 <- LoadUndefined
    v298 <- LoadBoolean 'true'
    v299 <- CallFunction v133, [v163, v295, v296, v297, v298]
    v300 <- LoadString 'Uint16'
    v301 <- LoadInteger '0'
    v302 <- LoadInteger '1'
    v303 <- CallFunction v133, [v163, v300, v301, v302]
    v304 <- LoadString 'Uint16'
    v305 <- LoadUndefined
    v306 <- LoadInteger '1'
    v307 <- CallFunction v133, [v163, v304, v305, v306]
    v308 <- LoadString 'Uint16'
    v309 <- LoadInteger '5'
    v310 <- LoadInteger '25958'
    v311 <- CallFunction v133, [v163, v308, v309, v310]
    v312 <- LoadString 'Uint16'
    v313 <- LoadInteger '9'
    v314 <- LoadInteger '33154'
    v315 <- CallFunction v133, [v163, v312, v313, v314]
    v316 <- LoadString 'Uint16'
    v317 <- LoadInteger '14'
    v318 <- LoadInteger '65279'
    v319 <- CallFunction v133, [v163, v316, v317, v318]
    v320 <- LoadString 'Uint16'
    v321 <- LoadInteger '1000000000000'
    v322 <- LoadUndefined
    v323 <- CallFunction v133, [v163, v320, v321, v322]
    v324 <- LoadString 'Int32'
    v325 <- LoadInteger '0'
    v326 <- LoadInteger '50462976'
    v327 <- LoadBoolean 'true'
    v328 <- CallFunction v133, [v163, v324, v325, v326, v327]
    v329 <- LoadString 'Int32'
    v330 <- LoadUndefined
    v331 <- LoadInteger '50462976'
    v332 <- LoadBoolean 'true'
    v333 <- CallFunction v133, [v163, v329, v330, v331, v332]
    v334 <- LoadString 'Int32'
    v335 <- LoadInteger '3'
    v336 <- LoadInteger '1717920771'
    v337 <- LoadBoolean 'true'
    v338 <- CallFunction v133, [v163, v334, v335, v336, v337]
    v339 <- LoadString 'Int32'
    v340 <- LoadInteger '6'
    v341 <- LoadInteger '2122291354'
    v342 <- UnaryOperation '-', v341
    v343 <- LoadBoolean 'true'
    v344 <- CallFunction v133, [v163, v339, v340, v342, v343]
    v345 <- LoadString 'Int32'
    v346 <- LoadInteger '9'
    v347 <- LoadInteger '58490239'
    v348 <- UnaryOperation '-', v347
    v349 <- LoadBoolean 'true'
    v350 <- CallFunction v133, [v163, v345, v346, v348, v349]
    v351 <- LoadString 'Int32'
    v352 <- LoadInteger '12'
    v353 <- LoadInteger '66052'
    v354 <- UnaryOperation '-', v353
    v355 <- LoadBoolean 'true'
    v356 <- CallFunction v133, [v163, v351, v352, v354, v355]
    v357 <- LoadString 'Int32'
    v358 <- LoadInteger '1000000000000'
    v359 <- LoadUndefined
    v360 <- LoadBoolean 'true'
    v361 <- CallFunction v133, [v163, v357, v358, v359, v360]
    v362 <- LoadString 'Int32'
    v363 <- LoadInteger '0'
    v364 <- LoadInteger '66051'
    v365 <- CallFunction v133, [v163, v362, v363, v364]
    v366 <- LoadString 'Int32'
    v367 <- LoadUndefined
    v368 <- LoadInteger '66051'
    v369 <- CallFunction v133, [v163, v366, v367, v368]
    v370 <- LoadString 'Int32'
    v371 <- LoadInteger '3'
    v372 <- LoadInteger '56911206'
    v373 <- CallFunction v133, [v163, v370, v371, v372]
    v374 <- LoadString 'Int32'
    v375 <- LoadInteger '6'
    v376 <- LoadInteger '1718059137'
    v377 <- CallFunction v133, [v163, v374, v375, v376]
    v378 <- LoadString 'Int32'
    v379 <- LoadInteger '9'
    v380 <- LoadInteger '2122152964'
    v381 <- UnaryOperation '-', v380
    v382 <- CallFunction v133, [v163, v378, v379, v381]
    v383 <- LoadString 'Int32'
    v384 <- LoadInteger '12'
    v385 <- LoadInteger '50462977'
    v386 <- UnaryOperation '-', v385
    v387 <- CallFunction v133, [v163, v383, v384, v386]
    v388 <- LoadString 'Int32'
    v389 <- LoadInteger '1000000000000'
    v390 <- LoadUndefined
    v391 <- CallFunction v133, [v163, v388, v389, v390]
    v392 <- LoadString 'Uint32'
    v393 <- LoadInteger '0'
    v394 <- LoadInteger '50462976'
    v395 <- LoadBoolean 'true'
    v396 <- CallFunction v133, [v163, v392, v393, v394, v395]
    v397 <- LoadString 'Uint32'
    v398 <- LoadUndefined
    v399 <- LoadInteger '50462976'
    v400 <- LoadBoolean 'true'
    v401 <- CallFunction v133, [v163, v397, v398, v399, v400]
    v402 <- LoadString 'Uint32'
    v403 <- LoadInteger '3'
    v404 <- LoadInteger '1717920771'
    v405 <- LoadBoolean 'true'
    v406 <- CallFunction v133, [v163, v402, v403, v404, v405]
    v407 <- LoadString 'Uint32'
    v408 <- LoadInteger '6'
    v409 <- LoadInteger '2172675942'
    v410 <- LoadBoolean 'true'
    v411 <- CallFunction v133, [v163, v407, v408, v409, v410]
    v412 <- LoadString 'Uint32'
    v413 <- LoadInteger '9'
    v414 <- LoadInteger '4236477057'
    v415 <- LoadBoolean 'true'
    v416 <- CallFunction v133, [v163, v412, v413, v414, v415]
    v417 <- LoadString 'Uint32'
    v418 <- LoadInteger '12'
    v419 <- LoadInteger '4294901244'
    v420 <- LoadBoolean 'true'
    v421 <- CallFunction v133, [v163, v417, v418, v419, v420]
    v422 <- LoadString 'Uint32'
    v423 <- LoadInteger '1000000000000'
    v424 <- LoadUndefined
    v425 <- LoadBoolean 'true'
    v426 <- CallFunction v133, [v163, v422, v423, v424, v425]
    v427 <- LoadString 'Uint32'
    v428 <- LoadInteger '0'
    v429 <- LoadInteger '66051'
    v430 <- CallFunction v133, [v163, v427, v428, v429]
    v431 <- LoadString 'Uint32'
    v432 <- LoadUndefined
    v433 <- LoadInteger '66051'
    v434 <- CallFunction v133, [v163, v431, v432, v433]
    v435 <- LoadString 'Uint32'
    v436 <- LoadInteger '3'
    v437 <- LoadInteger '56911206'
    v438 <- CallFunction v133, [v163, v435, v436, v437]
    v439 <- LoadString 'Uint32'
    v440 <- LoadInteger '6'
    v441 <- LoadInteger '1718059137'
    v442 <- CallFunction v133, [v163, v439, v440, v441]
    v443 <- LoadString 'Uint32'
    v444 <- LoadInteger '9'
    v445 <- LoadInteger '2172814332'
    v446 <- CallFunction v133, [v163, v443, v444, v445]
    v447 <- LoadString 'Uint32'
    v448 <- LoadInteger '12'
    v449 <- LoadInteger '4244504319'
    v450 <- CallFunction v133, [v163, v447, v448, v449]
    v451 <- LoadString 'Uint32'
    v452 <- LoadInteger '1000000000000'
    v453 <- LoadUndefined
    v454 <- CallFunction v133, [v163, v451, v452, v453]
EndPlainFunction
v455 <- BeginPlainFunction -> v456, v457, v458, v459, v460
    v461 <- LoadInteger '0'
    v462 <- LoadBoolean 'true'
    v463 <- CallFunction v141, [v458, v461, v462, v459]
    v464 <- LoadInteger '0'
    v465 <- LoadBoolean 'true'
    v466 <- CallFunction v133, [v456, v457, v464, v460, v465]
    v467 <- LoadUndefined
    v468 <- LoadBoolean 'true'
    v469 <- CallFunction v133, [v456, v457, v467, v460, v468]
    v470 <- LoadInteger '3'
    v471 <- LoadBoolean 'true'
    v472 <- CallFunction v141, [v458, v470, v471, v459]
    v473 <- LoadInteger '3'
    v474 <- LoadBoolean 'true'
    v475 <- CallFunction v133, [v456, v457, v473, v460, v474]
    v476 <- LoadInteger '7'
    v477 <- LoadBoolean 'true'
    v478 <- CallFunction v141, [v458, v476, v477, v459]
    v479 <- LoadInteger '7'
    v480 <- LoadBoolean 'true'
    v481 <- CallFunction v133, [v456, v457, v479, v460, v480]
    v482 <- LoadInteger '10'
    v483 <- LoadBoolean 'true'
    v484 <- CallFunction v141, [v458, v482, v483, v459]
    v485 <- LoadInteger '10'
    v486 <- LoadBoolean 'true'
    v487 <- CallFunction v133, [v456, v457, v485, v460, v486]
    v488 <- LoadInteger '1000000000000'
    v489 <- LoadUndefined
    v490 <- LoadBoolean 'true'
    v491 <- CallFunction v133, [v456, v457, v488, v489, v490]
    v492 <- LoadInteger '0'
    v493 <- LoadBoolean 'false'
    v494 <- CallFunction v141, [v458, v492, v493]
    v495 <- LoadInteger '0'
    v496 <- LoadBoolean 'false'
    v497 <- CallFunction v133, [v456, v457, v495, v460, v496]
    v498 <- LoadUndefined
    v499 <- LoadBoolean 'false'
    v500 <- CallFunction v133, [v456, v457, v498, v460, v499]
    v501 <- LoadInteger '3'
    v502 <- LoadBoolean 'false'
    v503 <- CallFunction v141, [v458, v501, v502]
    v504 <- LoadInteger '3'
    v505 <- LoadBoolean 'false'
    v506 <- CallFunction v133, [v456, v457, v504, v460, v505]
    v507 <- LoadInteger '7'
    v508 <- LoadBoolean 'false'
    v509 <- CallFunction v141, [v458, v507, v508]
    v510 <- LoadInteger '7'
    v511 <- LoadBoolean 'false'
    v512 <- CallFunction v133, [v456, v457, v510, v460, v511]
    v513 <- LoadInteger '10'
    v514 <- LoadBoolean 'false'
    v515 <- CallFunction v141, [v458, v513, v514]
    v516 <- LoadInteger '10'
    v517 <- LoadBoolean 'false'
    v518 <- CallFunction v133, [v456, v457, v516, v460, v517]
    v519 <- LoadInteger '1000000000000'
    v520 <- LoadUndefined
    v521 <- LoadBoolean 'false'
    v522 <- CallFunction v133, [v456, v457, v519, v520, v521]
EndPlainFunction
v523 <- BeginPlainFunction -> v524, v525
    v526 <- LoadString 'Float32'
    v527 <- LoadInteger '0'
    v528 <- LoadInteger '0'
    v529 <- LoadInteger '32'
    v530 <- LoadInteger '65'
    v531 <- CreateArray [v527, v528, v529, v530]
    v532 <- TernaryOperation v524, v531, v56
    v533 <- LoadInteger '10'
    v534 <- CallFunction v455, [v524, v526, v532, v525, v533]
    v535 <- LoadString 'Float32'
    v536 <- LoadInteger '164'
    v537 <- LoadInteger '112'
    v538 <- LoadInteger '157'
    v539 <- LoadInteger '63'
    v540 <- CreateArray [v536, v537, v538, v539]
    v541 <- TernaryOperation v524, v540, v56
    v542 <- LoadFloat '1.2300000190734863'
    v543 <- CallFunction v455, [v524, v535, v541, v525, v542]
    v544 <- LoadString 'Float32'
    v545 <- LoadInteger '95'
    v546 <- LoadInteger '53'
    v547 <- LoadInteger '50'
    v548 <- LoadInteger '199'
    v549 <- CreateArray [v545, v546, v547, v548]
    v550 <- TernaryOperation v524, v549, v56
    v551 <- LoadFloat '45621.37109375'
    v552 <- UnaryOperation '-', v551
    v553 <- CallFunction v455, [v524, v544, v550, v525, v552]
    v554 <- LoadString 'Float32'
    v555 <- LoadInteger '255'
    v556 <- LoadInteger '255'
    v557 <- LoadInteger '255'
    v558 <- LoadInteger '127'
    v559 <- CreateArray [v555, v556, v557, v558]
    v560 <- TernaryOperation v524, v559, v56
    v561 <- CreateNamedVariable 'NaN', 'none'
    v562 <- CallFunction v455, [v524, v554, v560, v525, v561]
    v563 <- LoadString 'Float32'
    v564 <- LoadInteger '255'
    v565 <- LoadInteger '255'
    v566 <- LoadInteger '255'
    v567 <- LoadInteger '255'
    v568 <- CreateArray [v564, v565, v566, v567]
    v569 <- TernaryOperation v524, v568, v56
    v570 <- UnaryOperation '-', v561
    v571 <- CallFunction v455, [v524, v563, v569, v525, v570]
    v572 <- LoadString 'Float64'
    v573 <- LoadInteger '0'
    v574 <- LoadInteger '0'
    v575 <- LoadInteger '0'
    v576 <- LoadInteger '0'
    v577 <- LoadInteger '0'
    v578 <- LoadInteger '0'
    v579 <- LoadInteger '36'
    v580 <- LoadInteger '64'
    v581 <- CreateArray [v573, v574, v575, v576, v577, v578, v579, v580]
    v582 <- TernaryOperation v524, v581, v56
    v583 <- LoadInteger '10'
    v584 <- CallFunction v455, [v524, v572, v582, v525, v583]
    v585 <- LoadString 'Float64'
    v586 <- LoadInteger '174'
    v587 <- LoadInteger '71'
    v588 <- LoadInteger '225'
    v589 <- LoadInteger '122'
    v590 <- LoadInteger '20'
    v591 <- LoadInteger '174'
    v592 <- LoadInteger '243'
    v593 <- LoadInteger '63'
    v594 <- CreateArray [v586, v587, v588, v589, v590, v591, v592, v593]
    v595 <- TernaryOperation v524, v594, v56
    v596 <- LoadFloat '1.23'
    v597 <- CallFunction v455, [v524, v585, v595, v525, v596]
    v598 <- LoadString 'Float64'
    v599 <- LoadInteger '181'
    v600 <- LoadInteger '55'
    v601 <- LoadInteger '248'
    v602 <- LoadInteger '30'
    v603 <- LoadInteger '242'
    v604 <- LoadInteger '179'
    v605 <- LoadInteger '87'
    v606 <- LoadInteger '193'
    v607 <- CreateArray [v599, v600, v601, v602, v603, v604, v605, v606]
    v608 <- TernaryOperation v524, v607, v56
    v609 <- LoadFloat '6213576.4839'
    v610 <- UnaryOperation '-', v609
    v611 <- CallFunction v455, [v524, v598, v608, v525, v610]
    v612 <- LoadString 'Float64'
    v613 <- LoadInteger '255'
    v614 <- LoadInteger '255'
    v615 <- LoadInteger '255'
    v616 <- LoadInteger '255'
    v617 <- LoadInteger '255'
    v618 <- LoadInteger '255'
    v619 <- LoadInteger '255'
    v620 <- LoadInteger '127'
    v621 <- CreateArray [v613, v614, v615, v616, v617, v618, v619, v620]
    v622 <- TernaryOperation v524, v621, v56
    v623 <- CallFunction v455, [v524, v612, v622, v525, v561]
    v624 <- LoadString 'Float64'
    v625 <- LoadInteger '255'
    v626 <- LoadInteger '255'
    v627 <- LoadInteger '255'
    v628 <- LoadInteger '255'
    v629 <- LoadInteger '255'
    v630 <- LoadInteger '255'
    v631 <- LoadInteger '255'
    v632 <- LoadInteger '255'
    v633 <- CreateArray [v625, v626, v627, v628, v629, v630, v631, v632]
    v634 <- TernaryOperation v524, v633, v56
    v635 <- UnaryOperation '-', v561
    v636 <- CallFunction v455, [v524, v624, v634, v525, v635]
EndPlainFunction
v637 <- BeginPlainFunction -> v638
    v639 <- LoadInteger '0'
    v640 <- LoadBoolean 'true'
    v641 <- LoadInteger '0'
    v642 <- LoadInteger '16'
    v643 <- CallFunction v141, [v17, v639, v640, v641, v642]
    v644 <- LoadString 'Int8'
    v645 <- LoadInteger '1'
    v646 <- UnaryOperation '-', v645
    v647 <- LoadInteger '0'
    v648 <- CallFunction v133, [v638, v644, v646, v647]
    v649 <- LoadString 'Int8'
    v650 <- LoadInteger '2'
    v651 <- UnaryOperation '-', v650
    v652 <- LoadInteger '0'
    v653 <- CallFunction v133, [v638, v649, v651, v652]
    v654 <- LoadString 'Uint8'
    v655 <- LoadInteger '1'
    v656 <- UnaryOperation '-', v655
    v657 <- LoadInteger '0'
    v658 <- CallFunction v133, [v638, v654, v656, v657]
    v659 <- LoadString 'Uint8'
    v660 <- LoadInteger '2'
    v661 <- UnaryOperation '-', v660
    v662 <- LoadInteger '0'
    v663 <- CallFunction v133, [v638, v659, v661, v662]
    v664 <- LoadString 'Int16'
    v665 <- LoadInteger '1'
    v666 <- UnaryOperation '-', v665
    v667 <- LoadInteger '1'
    v668 <- CallFunction v133, [v638, v664, v666, v667]
    v669 <- LoadString 'Int16'
    v670 <- LoadInteger '2'
    v671 <- UnaryOperation '-', v670
    v672 <- LoadInteger '1'
    v673 <- CallFunction v133, [v638, v669, v671, v672]
    v674 <- LoadString 'Int16'
    v675 <- LoadInteger '3'
    v676 <- UnaryOperation '-', v675
    v677 <- LoadInteger '1'
    v678 <- CallFunction v133, [v638, v674, v676, v677]
    v679 <- LoadString 'Uint16'
    v680 <- LoadInteger '1'
    v681 <- UnaryOperation '-', v680
    v682 <- LoadInteger '1'
    v683 <- CallFunction v133, [v638, v679, v681, v682]
    v684 <- LoadString 'Uint16'
    v685 <- LoadInteger '2'
    v686 <- UnaryOperation '-', v685
    v687 <- LoadInteger '1'
    v688 <- CallFunction v133, [v638, v684, v686, v687]
    v689 <- LoadString 'Uint16'
    v690 <- LoadInteger '3'
    v691 <- UnaryOperation '-', v690
    v692 <- LoadInteger '1'
    v693 <- CallFunction v133, [v638, v689, v691, v692]
    v694 <- LoadString 'Int32'
    v695 <- LoadInteger '1'
    v696 <- UnaryOperation '-', v695
    v697 <- LoadInteger '66051'
    v698 <- CallFunction v133, [v638, v694, v696, v697]
    v699 <- LoadString 'Int32'
    v700 <- LoadInteger '3'
    v701 <- UnaryOperation '-', v700
    v702 <- LoadInteger '66051'
    v703 <- CallFunction v133, [v638, v699, v701, v702]
    v704 <- LoadString 'Int32'
    v705 <- LoadInteger '5'
    v706 <- UnaryOperation '-', v705
    v707 <- LoadInteger '66051'
    v708 <- CallFunction v133, [v638, v704, v706, v707]
    v709 <- LoadString 'Uint32'
    v710 <- LoadInteger '1'
    v711 <- UnaryOperation '-', v710
    v712 <- LoadInteger '66051'
    v713 <- CallFunction v133, [v638, v709, v711, v712]
    v714 <- LoadString 'Uint32'
    v715 <- LoadInteger '3'
    v716 <- UnaryOperation '-', v715
    v717 <- LoadInteger '66051'
    v718 <- CallFunction v133, [v638, v714, v716, v717]
    v719 <- LoadString 'Uint32'
    v720 <- LoadInteger '5'
    v721 <- UnaryOperation '-', v720
    v722 <- LoadInteger '66051'
    v723 <- CallFunction v133, [v638, v719, v721, v722]
    v724 <- LoadInteger '0'
    v725 <- LoadInteger '0'
    v726 <- LoadInteger '0'
    v727 <- LoadInteger '0'
    v728 <- LoadInteger '0'
    v729 <- LoadInteger '0'
    v730 <- LoadInteger '0'
    v731 <- LoadInteger '0'
    v732 <- CreateArray [v724, v725, v726, v727, v728, v729, v730, v731]
    v733 <- LoadInteger '0'
    v734 <- LoadBoolean 'true'
    v735 <- LoadInteger '0'
    v736 <- LoadInteger '8'
    v737 <- CallFunction v141, [v732, v733, v734, v735, v736]
    v738 <- LoadString 'Float32'
    v739 <- LoadInteger '1'
    v740 <- UnaryOperation '-', v739
    v741 <- LoadInteger '0'
    v742 <- CallFunction v133, [v638, v738, v740, v741]
    v743 <- LoadString 'Float32'
    v744 <- LoadInteger '3'
    v745 <- UnaryOperation '-', v744
    v746 <- LoadInteger '0'
    v747 <- CallFunction v133, [v638, v743, v745, v746]
    v748 <- LoadString 'Float32'
    v749 <- LoadInteger '5'
    v750 <- UnaryOperation '-', v749
    v751 <- LoadInteger '0'
    v752 <- CallFunction v133, [v638, v748, v750, v751]
    v753 <- LoadString 'Float64'
    v754 <- LoadInteger '1'
    v755 <- UnaryOperation '-', v754
    v756 <- LoadInteger '0'
    v757 <- CallFunction v133, [v638, v753, v755, v756]
    v758 <- LoadString 'Float64'
    v759 <- LoadInteger '5'
    v760 <- UnaryOperation '-', v759
    v761 <- LoadInteger '0'
    v762 <- CallFunction v133, [v638, v758, v760, v761]
    v763 <- LoadString 'Float64'
    v764 <- LoadInteger '9'
    v765 <- UnaryOperation '-', v764
    v766 <- LoadInteger '0'
    v767 <- CallFunction v133, [v638, v763, v765, v766]
EndPlainFunction
v768 <- BeginPlainFunction -> 
    v769 <- LoadBoolean 'true'
    v770 <- LoadInteger '0'
    v771 <- LoadInteger '16'
    v772 <- CallFunction v162, [v769, v17, v770, v771]
    v773 <- LoadBoolean 'true'
    v774 <- LoadInteger '0'
    v775 <- CallFunction v523, [v773, v774]
    v776 <- LoadBoolean 'true'
    v777 <- LoadInteger '3'
    v778 <- LoadInteger '2'
    v779 <- CallFunction v162, [v776, v38, v777, v778]
    v780 <- LoadBoolean 'true'
    v781 <- LoadInteger '3'
    v782 <- CallFunction v523, [v780, v781]
    v783 <- LoadBoolean 'true'
    v784 <- CallFunction v637, [v783]
EndPlainFunction
v785 <- BeginPlainFunction -> 
    v786 <- LoadBoolean 'false'
    v787 <- LoadInteger '0'
    v788 <- LoadInteger '16'
    v789 <- CallFunction v162, [v786, v56, v787, v788]
    v790 <- LoadBoolean 'false'
    v791 <- CallFunction v523, [v790]
    v792 <- LoadBoolean 'false'
    v793 <- LoadInteger '3'
    v794 <- LoadInteger '2'
    v795 <- CallFunction v162, [v792, v56, v793, v794]
    v796 <- LoadBoolean 'false'
    v797 <- LoadInteger '7'
    v798 <- CallFunction v523, [v796, v797]
    v799 <- LoadBoolean 'false'
    v800 <- CallFunction v637, [v799]
EndPlainFunction
v801 <- CallFunction v768, []
v802 <- CallFunction v785, []
v803 <- BeginPlainFunction -> v804, v805
    v806 <- CreateNamedVariable 'DataView', 'none'
    v807 <- CreateNamedVariable 'ArrayBuffer', 'none'
    v808 <- LoadInteger '100'
    v809 <- Construct v807, [v808]
    v810 <- Construct v806, [v809]
    v811 <- CreateNamedVariable 'view', 'var', v810
    v812 <- LoadUndefined
    v813 <- LoadInteger '0'
    v814 <- CallMethod v811, 'setInt8', [v813, v804]
    v815 <- LoadInteger '0'
    v816 <- CallMethod v811, 'getInt8', [v815]
    v817 <- LoadUndefined
    v818 <- LoadInteger '0'
    v819 <- LoadBoolean 'true'
    v820 <- CallMethod v811, 'setInt8', [v818, v804, v819]
    v821 <- LoadInteger '0'
    v822 <- LoadBoolean 'true'
    v823 <- CallMethod v811, 'getInt8', [v821, v822]
EndPlainFunction
v824 <- BeginPlainFunction -> v825, v826
    v827 <- CreateNamedVariable 'DataView', 'none'
    v828 <- CreateNamedVariable 'ArrayBuffer', 'none'
    v829 <- LoadInteger '100'
    v830 <- Construct v828, [v829]
    v831 <- Construct v827, [v830]
    v832 <- CreateNamedVariable 'view', 'var', v831
    v833 <- LoadUndefined
    v834 <- LoadInteger '0'
    v835 <- CallMethod v832, 'setUint8', [v834, v825]
    v836 <- LoadInteger '0'
    v837 <- CallMethod v832, 'getUint8', [v836]
    v838 <- LoadUndefined
    v839 <- LoadInteger '0'
    v840 <- LoadBoolean 'true'
    v841 <- CallMethod v832, 'setUint8', [v839, v825, v840]
    v842 <- LoadInteger '0'
    v843 <- LoadBoolean 'true'
    v844 <- CallMethod v832, 'getUint8', [v842, v843]
EndPlainFunction
v845 <- BeginPlainFunction -> v846, v847
    v848 <- CreateNamedVariable 'DataView', 'none'
    v849 <- CreateNamedVariable 'ArrayBuffer', 'none'
    v850 <- LoadInteger '100'
    v851 <- Construct v849, [v850]
    v852 <- Construct v848, [v851]
    v853 <- CreateNamedVariable 'view', 'var', v852
    v854 <- LoadUndefined
    v855 <- LoadInteger '0'
    v856 <- CallMethod v853, 'setInt16', [v855, v846]
    v857 <- LoadInteger '0'
    v858 <- CallMethod v853, 'getInt16', [v857]
    v859 <- LoadUndefined
    v860 <- LoadInteger '0'
    v861 <- LoadBoolean 'true'
    v862 <- CallMethod v853, 'setInt16', [v860, v846, v861]
    v863 <- LoadInteger '0'
    v864 <- LoadBoolean 'true'
    v865 <- CallMethod v853, 'getInt16', [v863, v864]
EndPlainFunction
v866 <- BeginPlainFunction -> v867, v868
    v869 <- CreateNamedVariable 'DataView', 'none'
    v870 <- CreateNamedVariable 'ArrayBuffer', 'none'
    v871 <- LoadInteger '100'
    v872 <- Construct v870, [v871]
    v873 <- Construct v869, [v872]
    v874 <- CreateNamedVariable 'view', 'var', v873
    v875 <- LoadUndefined
    v876 <- LoadInteger '0'
    v877 <- CallMethod v874, 'setUint16', [v876, v867]
    v878 <- LoadInteger '0'
    v879 <- CallMethod v874, 'getUint16', [v878]
    v880 <- LoadUndefined
    v881 <- LoadInteger '0'
    v882 <- LoadBoolean 'true'
    v883 <- CallMethod v874, 'setUint16', [v881, v867, v882]
    v884 <- LoadInteger '0'
    v885 <- LoadBoolean 'true'
    v886 <- CallMethod v874, 'getUint16', [v884, v885]
EndPlainFunction
v887 <- BeginPlainFunction -> v888, v889
    v890 <- CreateNamedVariable 'DataView', 'none'
    v891 <- CreateNamedVariable 'ArrayBuffer', 'none'
    v892 <- LoadInteger '100'
    v893 <- Construct v891, [v892]
    v894 <- Construct v890, [v893]
    v895 <- CreateNamedVariable 'view', 'var', v894
    v896 <- LoadUndefined
    v897 <- LoadInteger '0'
    v898 <- CallMethod v895, 'setInt32', [v897, v888]
    v899 <- LoadInteger '0'
    v900 <- CallMethod v895, 'getInt32', [v899]
    v901 <- LoadUndefined
    v902 <- LoadInteger '0'
    v903 <- LoadBoolean 'true'
    v904 <- CallMethod v895, 'setInt32', [v902, v888, v903]
    v905 <- LoadInteger '0'
    v906 <- LoadBoolean 'true'
    v907 <- CallMethod v895, 'getInt32', [v905, v906]
EndPlainFunction
v908 <- BeginPlainFunction -> v909, v910
    v911 <- CreateNamedVariable 'DataView', 'none'
    v912 <- CreateNamedVariable 'ArrayBuffer', 'none'
    v913 <- LoadInteger '100'
    v914 <- Construct v912, [v913]
    v915 <- Construct v911, [v914]
    v916 <- CreateNamedVariable 'view', 'var', v915
    v917 <- LoadUndefined
    v918 <- LoadInteger '0'
    v919 <- CallMethod v916, 'setUint32', [v918, v909]
    v920 <- LoadInteger '0'
    v921 <- CallMethod v916, 'getUint32', [v920]
    v922 <- LoadUndefined
    v923 <- LoadInteger '0'
    v924 <- LoadBoolean 'true'
    v925 <- CallMethod v916, 'setUint32', [v923, v909, v924]
    v926 <- LoadInteger '0'
    v927 <- LoadBoolean 'true'
    v928 <- CallMethod v916, 'getUint32', [v926, v927]
EndPlainFunction
v929 <- BeginPlainFunction -> 
    v930 <- LoadInteger '128'
    v931 <- LoadInteger '128'
    v932 <- UnaryOperation '-', v931
    v933 <- CallFunction v803, [v930, v932]
    v934 <- LoadInteger '4096'
    v935 <- LoadInteger '0'
    v936 <- CallFunction v803, [v934, v935]
    v937 <- LoadInteger '129'
    v938 <- UnaryOperation '-', v937
    v939 <- LoadInteger '127'
    v940 <- CallFunction v803, [v938, v939]
    v941 <- LoadInteger '256'
    v942 <- LoadInteger '0'
    v943 <- CallFunction v824, [v941, v942]
    v944 <- LoadInteger '4096'
    v945 <- LoadInteger '0'
    v946 <- CallFunction v824, [v944, v945]
    v947 <- LoadInteger '128'
    v948 <- UnaryOperation '-', v947
    v949 <- LoadInteger '128'
    v950 <- CallFunction v824, [v948, v949]
    v951 <- LoadInteger '1'
    v952 <- UnaryOperation '-', v951
    v953 <- LoadInteger '255'
    v954 <- CallFunction v824, [v952, v953]
    v955 <- LoadInteger '255'
    v956 <- UnaryOperation '-', v955
    v957 <- LoadInteger '1'
    v958 <- CallFunction v824, [v956, v957]
    v959 <- LoadInteger '32768'
    v960 <- LoadInteger '32768'
    v961 <- UnaryOperation '-', v960
    v962 <- CallFunction v845, [v959, v961]
    v963 <- LoadInteger '65536'
    v964 <- LoadInteger '0'
    v965 <- CallFunction v845, [v963, v964]
    v966 <- LoadInteger '32769'
    v967 <- UnaryOperation '-', v966
    v968 <- LoadInteger '32767'
    v969 <- CallFunction v845, [v967, v968]
    v970 <- LoadInteger '65536'
    v971 <- LoadInteger '0'
    v972 <- CallFunction v866, [v970, v971]
    v973 <- LoadInteger '1048576'
    v974 <- LoadInteger '0'
    v975 <- CallFunction v866, [v973, v974]
    v976 <- LoadInteger '32768'
    v977 <- UnaryOperation '-', v976
    v978 <- LoadInteger '32768'
    v979 <- CallFunction v866, [v977, v978]
    v980 <- LoadInteger '1'
    v981 <- UnaryOperation '-', v980
    v982 <- LoadInteger '65535'
    v983 <- CallFunction v866, [v981, v982]
    v984 <- LoadInteger '65535'
    v985 <- UnaryOperation '-', v984
    v986 <- LoadInteger '1'
    v987 <- CallFunction v866, [v985, v986]
    v988 <- LoadInteger '2147483648'
    v989 <- LoadInteger '2147483648'
    v990 <- UnaryOperation '-', v989
    v991 <- CallFunction v887, [v988, v990]
    v992 <- LoadInteger '4294967296'
    v993 <- LoadInteger '0'
    v994 <- CallFunction v887, [v992, v993]
    v995 <- LoadInteger '2147483649'
    v996 <- UnaryOperation '-', v995
    v997 <- LoadInteger '2147483647'
    v998 <- CallFunction v887, [v996, v997]
    v999 <- LoadInteger '4294967296'
    v1000 <- LoadInteger '0'
    v1001 <- CallFunction v908, [v999, v1000]
    v1002 <- LoadInteger '68719476736'
    v1003 <- LoadInteger '0'
    v1004 <- CallFunction v908, [v1002, v1003]
    v1005 <- LoadInteger '2147483648'
    v1006 <- UnaryOperation '-', v1005
    v1007 <- LoadInteger '2147483648'
    v1008 <- CallFunction v908, [v1006, v1007]
    v1009 <- LoadInteger '1'
    v1010 <- UnaryOperation '-', v1009
    v1011 <- LoadInteger '4294967295'
    v1012 <- CallFunction v908, [v1010, v1011]
    v1013 <- LoadInteger '4294967295'
    v1014 <- UnaryOperation '-', v1013
    v1015 <- LoadInteger '1'
    v1016 <- CallFunction v908, [v1014, v1015]
EndPlainFunction
v1017 <- CallFunction v929, []
v1018 <- BeginPlainFunction -> 
    v1019 <- CreateNamedVariable 'DataView', 'none'
    v1020 <- CreateNamedVariable 'ArrayBuffer', 'none'
    v1021 <- LoadInteger '256'
    v1022 <- Construct v1020, [v1021]
    v1023 <- Construct v1019, [v1022]
    v1024 <- CreateNamedVariable 'a', 'var', v1023
    v1025 <- BeginPlainFunction -> v1026
        v1027 <- GetComputedProperty v1024, v1026
        v1028 <- CreateNamedVariable 'f', 'var', v1027
        v1029 <- BeginPlainFunction -> 
            v1030 <- CallFunction v1028, []
        EndPlainFunction
        v1031 <- CallFunction v1029, []
        v1032 <- CreateNamedVariable 'TypeError', 'none'
        v1033 <- LoadInteger '0'
        v1034 <- LoadInteger '0'
        v1035 <- CallMethod v1028, 'call', [v1024, v1033, v1034]
        v1036 <- BeginPlainFunction -> 
            BeginObjectLiteral
            v1037 <- EndObjectLiteral
            v1038 <- LoadInteger '0'
            v1039 <- LoadInteger '0'
            v1040 <- CallMethod v1028, 'call', [v1037, v1038, v1039]
        EndPlainFunction
        v1041 <- CallFunction v1036, []
        v1042 <- CallMethod v1028, 'call', [v1024]
        v1043 <- LoadInteger '1'
        v1044 <- CallMethod v1028, 'call', [v1024, v1043]
    EndPlainFunction
    v1045 <- LoadString 'getUint8'
    v1046 <- CallFunction v1025, [v1045]
    v1047 <- LoadString 'setUint8'
    v1048 <- CallFunction v1025, [v1047]
    v1049 <- LoadString 'getInt8'
    v1050 <- CallFunction v1025, [v1049]
    v1051 <- LoadString 'setInt8'
    v1052 <- CallFunction v1025, [v1051]
    v1053 <- LoadString 'getUint16'
    v1054 <- CallFunction v1025, [v1053]
    v1055 <- LoadString 'setUint16'
    v1056 <- CallFunction v1025, [v1055]
    v1057 <- LoadString 'getInt16'
    v1058 <- CallFunction v1025, [v1057]
    v1059 <- LoadString 'setInt16'
    v1060 <- CallFunction v1025, [v1059]
    v1061 <- LoadString 'getUint32'
    v1062 <- CallFunction v1025, [v1061]
    v1063 <- LoadString 'setUint32'
    v1064 <- CallFunction v1025, [v1063]
    v1065 <- LoadString 'getInt32'
    v1066 <- CallFunction v1025, [v1065]
    v1067 <- LoadString 'setInt32'
    v1068 <- CallFunction v1025, [v1067]
    v1069 <- LoadString 'getFloat32'
    v1070 <- CallFunction v1025, [v1069]
    v1071 <- LoadString 'setFloat32'
    v1072 <- CallFunction v1025, [v1071]
    v1073 <- LoadString 'getFloat64'
    v1074 <- CallFunction v1025, [v1073]
    v1075 <- LoadString 'setFloat64'
    v1076 <- CallFunction v1025, [v1075]
EndPlainFunction
v1077 <- CallFunction v1018, []
v1078 <- BeginPlainFunction -> 
    v1079 <- CreateNamedVariable 'DataView', 'none'
    v1080 <- CreateNamedVariable 'ArrayBuffer', 'none'
    v1081 <- LoadInteger '256'
    v1082 <- Construct v1080, [v1081]
    v1083 <- Construct v1079, [v1082]
    v1084 <- CreateNamedVariable 'a', 'var', v1083
    v1085 <- BeginPlainFunction -> v1086
        v1087 <- LoadString 'Float32'
        v1088 <- Compare v1086, '===', v1087
        v1089 <- LoadString 'Float64'
        v1090 <- Compare v1086, '===', v1089
        v1091 <- BinaryOperation v1088, '||', v1090
        v1092 <- CreateNamedVariable 'NaN', 'none'
        v1093 <- LoadInteger '0'
        v1094 <- TernaryOperation v1091, v1092, v1093
        v1095 <- CreateNamedVariable 'expectedValue', 'var', v1094
        v1096 <- CallFunction v65, [v1086]
        v1097 <- CreateNamedVariable 'offset', 'var', v1096
        v1098 <- LoadUndefined
        v1099 <- LoadInteger '0'
        v1100 <- LoadInteger '7'
        v1101 <- LoadString 'set'
        v1102 <- BinaryOperation v1101, '+', v1086
        v1103 <- CallComputedMethod v1084, v1102, [v1099, v1100]
        v1104 <- LoadUndefined
        v1105 <- LoadString 'set'
        v1106 <- BinaryOperation v1105, '+', v1086
        v1107 <- CallComputedMethod v1084, v1106, []
        v1108 <- LoadString 'get'
        v1109 <- BinaryOperation v1108, '+', v1086
        v1110 <- CallComputedMethod v1084, v1109, []
        v1111 <- LoadUndefined
        v1112 <- LoadInteger '7'
        v1113 <- LoadString 'set'
        v1114 <- BinaryOperation v1113, '+', v1086
        v1115 <- CallComputedMethod v1084, v1114, [v1097, v1112]
        v1116 <- LoadUndefined
        v1117 <- LoadString 'set'
        v1118 <- BinaryOperation v1117, '+', v1086
        v1119 <- CallComputedMethod v1084, v1118, [v1097]
        v1120 <- LoadString 'get'
        v1121 <- BinaryOperation v1120, '+', v1086
        v1122 <- CallComputedMethod v1084, v1121, [v1097]
    EndPlainFunction
    v1123 <- LoadString 'Uint8'
    v1124 <- CallFunction v1085, [v1123]
    v1125 <- LoadString 'Int8'
    v1126 <- CallFunction v1085, [v1125]
    v1127 <- LoadString 'Uint16'
    v1128 <- CallFunction v1085, [v1127]
    v1129 <- LoadString 'Int16'
    v1130 <- CallFunction v1085, [v1129]
    v1131 <- LoadString 'Uint32'
    v1132 <- CallFunction v1085, [v1131]
    v1133 <- LoadString 'Int32'
    v1134 <- CallFunction v1085, [v1133]
    v1135 <- LoadString 'Float32'
    v1136 <- CallFunction v1085, [v1135]
    v1137 <- LoadString 'Float64'
    v1138 <- CallFunction v1085, [v1137]
EndPlainFunction
v1139 <- CallFunction v1078, []


var intArray1 = [0,1,2,3,100,101,102,103,128,129,130,131,252,253,254,255];
var intArray2 = [31,32,33,0,1,2,3,100,101,102,103,128,129,130,131,252,253,254,255];
var initialArray = [204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204];
var arayBuffer = null;
var view = null;
var viewStart = 0;
var viewLength = 0;
function getElementSize(a66) {
    switch (a66) {
        case "Int8":
        case "Uint8":
            return 1;
        case "Int16":
        case "Uint16":
            return 2;
        case "Int32":
        case "Uint32":
        case "Float32":
            return 4;
        case "Float64":
            return 8;
        default:
    }
}
function checkGet(a80, a81, a82, a83) {
    function doGet() {
        if (a83 != undefined) {
            return view["get" + a80](a81, a83);
        } else {
            return view["get" + a80](a81);
        }
    }
    if ((a81 >= 0) && (((a81 + getElementSize(a80)) - 1) < view.byteLength)) {
        doGet();
    } else {
        doGet();
    }
}
function checkSet(a106, a107, a108, a109) {
    function doSet() {
        if (a109 != undefined) {
            view["set" + a106](a107, a108, a109);
        } else {
            view["set" + a106](a107, a108);
        }
    }
    if ((a107 >= 0) && (((a107 + getElementSize(a106)) - 1) < view.byteLength)) {
        doSet();
        checkGet(a106, a107, a108, a109);
    } else {
        doSet();
    }
}
function test(a134, a135, a136, a137, a138) {
    if (a134) {
        checkGet(a135, a136, a137, a138);
    } else {
        checkSet(a135, a136, a137, a138);
    }
}
function createDataView(a142, a143, a144, a145, a146) {
    if (!a144) {
        a142.reverse();
    }
    const v150 = new Array(a143);
    var paddingArray = v150;
    const v154 = new Uint8Array(paddingArray.concat(a142));
    arrayBuffer = v154.buffer;
    const v159 = new DataView(arrayBuffer, viewStart, viewLength);
    view = v159;
    if (!a144) {
        a142.reverse();
    }
}
function runIntegerTestCases(a163, a164, a165, a166) {
    createDataView(a164, 0, true, a165, a166);
    test(a163, "Int8", 0, 0);
    test(a163, "Int8", undefined, 0);
    test(a163, "Int8", 8, -128);
    test(a163, "Int8", 15, -1);
    test(a163, "Int8", 1000000000000, undefined);
    test(a163, "Uint8", 0, 0);
    test(a163, "Uint8", undefined, 0);
    test(a163, "Uint8", 8, 128);
    test(a163, "Uint8", 15, 255);
    test(a163, "Uint8", 1000000000000, undefined);
    test(a163, "Int16", 0, 256, true);
    test(a163, "Int16", undefined, 256, true);
    test(a163, "Int16", 5, 26213, true);
    test(a163, "Int16", 9, -32127, true);
    test(a163, "Int16", 14, -2, true);
    test(a163, "Int16", 1000000000000, undefined, true);
    test(a163, "Int16", 0, 1);
    test(a163, "Int16", undefined, 1);
    test(a163, "Int16", 5, 25958);
    test(a163, "Int16", 9, -32382);
    test(a163, "Int16", 14, -257);
    test(a163, "Int16", 1000000000000, undefined);
    test(a163, "Uint16", 0, 256, true);
    test(a163, "Uint16", undefined, 256, true);
    test(a163, "Uint16", 5, 26213, true);
    test(a163, "Uint16", 9, 33409, true);
    test(a163, "Uint16", 14, 65534, true);
    test(a163, "Uint16", 1000000000000, undefined, true);
    test(a163, "Uint16", 0, 1);
    test(a163, "Uint16", undefined, 1);
    test(a163, "Uint16", 5, 25958);
    test(a163, "Uint16", 9, 33154);
    test(a163, "Uint16", 14, 65279);
    test(a163, "Uint16", 1000000000000, undefined);
    test(a163, "Int32", 0, 50462976, true);
    test(a163, "Int32", undefined, 50462976, true);
    test(a163, "Int32", 3, 1717920771, true);
    test(a163, "Int32", 6, -2122291354, true);
    test(a163, "Int32", 9, -58490239, true);
    test(a163, "Int32", 12, -66052, true);
    test(a163, "Int32", 1000000000000, undefined, true);
    test(a163, "Int32", 0, 66051);
    test(a163, "Int32", undefined, 66051);
    test(a163, "Int32", 3, 56911206);
    test(a163, "Int32", 6, 1718059137);
    test(a163, "Int32", 9, -2122152964);
    test(a163, "Int32", 12, -50462977);
    test(a163, "Int32", 1000000000000, undefined);
    test(a163, "Uint32", 0, 50462976, true);
    test(a163, "Uint32", undefined, 50462976, true);
    test(a163, "Uint32", 3, 1717920771, true);
    test(a163, "Uint32", 6, 2172675942, true);
    test(a163, "Uint32", 9, 4236477057, true);
    test(a163, "Uint32", 12, 4294901244, true);
    test(a163, "Uint32", 1000000000000, undefined, true);
    test(a163, "Uint32", 0, 66051);
    test(a163, "Uint32", undefined, 66051);
    test(a163, "Uint32", 3, 56911206);
    test(a163, "Uint32", 6, 1718059137);
    test(a163, "Uint32", 9, 2172814332);
    test(a163, "Uint32", 12, 4244504319);
    test(a163, "Uint32", 1000000000000, undefined);
}
function testFloat(a456, a457, a458, a459, a460) {
    createDataView(a458, 0, true, a459);
    test(a456, a457, 0, a460, true);
    test(a456, a457, undefined, a460, true);
    createDataView(a458, 3, true, a459);
    test(a456, a457, 3, a460, true);
    createDataView(a458, 7, true, a459);
    test(a456, a457, 7, a460, true);
    createDataView(a458, 10, true, a459);
    test(a456, a457, 10, a460, true);
    test(a456, a457, 1000000000000, undefined, true);
    createDataView(a458, 0, false);
    test(a456, a457, 0, a460, false);
    test(a456, a457, undefined, a460, false);
    createDataView(a458, 3, false);
    test(a456, a457, 3, a460, false);
    createDataView(a458, 7, false);
    test(a456, a457, 7, a460, false);
    createDataView(a458, 10, false);
    test(a456, a457, 10, a460, false);
    test(a456, a457, 1000000000000, undefined, false);
}
function runFloatTestCases(a524, a525) {
    testFloat(a524, "Float32", a524 ? [0,0,32,65] : initialArray, a525, 10);
    testFloat(a524, "Float32", a524 ? [164,112,157,63] : initialArray, a525, 1.2300000190734863);
    testFloat(a524, "Float32", a524 ? [95,53,50,199] : initialArray, a525, -45621.37109375);
    testFloat(a524, "Float32", a524 ? [255,255,255,127] : initialArray, a525, NaN);
    testFloat(a524, "Float32", a524 ? [255,255,255,255] : initialArray, a525, -NaN);
    testFloat(a524, "Float64", a524 ? [0,0,0,0,0,0,36,64] : initialArray, a525, 10);
    testFloat(a524, "Float64", a524 ? [174,71,225,122,20,174,243,63] : initialArray, a525, 1.23);
    testFloat(a524, "Float64", a524 ? [181,55,248,30,242,179,87,193] : initialArray, a525, -6213576.4839);
    testFloat(a524, "Float64", a524 ? [255,255,255,255,255,255,255,127] : initialArray, a525, NaN);
    testFloat(a524, "Float64", a524 ? [255,255,255,255,255,255,255,255] : initialArray, a525, -NaN);
}
function runNegativeIndexTests(a638) {
    createDataView(intArray1, 0, true, 0, 16);
    test(a638, "Int8", -1, 0);
    test(a638, "Int8", -2, 0);
    test(a638, "Uint8", -1, 0);
    test(a638, "Uint8", -2, 0);
    test(a638, "Int16", -1, 1);
    test(a638, "Int16", -2, 1);
    test(a638, "Int16", -3, 1);
    test(a638, "Uint16", -1, 1);
    test(a638, "Uint16", -2, 1);
    test(a638, "Uint16", -3, 1);
    test(a638, "Int32", -1, 66051);
    test(a638, "Int32", -3, 66051);
    test(a638, "Int32", -5, 66051);
    test(a638, "Uint32", -1, 66051);
    test(a638, "Uint32", -3, 66051);
    test(a638, "Uint32", -5, 66051);
    createDataView([0,0,0,0,0,0,0,0], 0, true, 0, 8);
    test(a638, "Float32", -1, 0);
    test(a638, "Float32", -3, 0);
    test(a638, "Float32", -5, 0);
    test(a638, "Float64", -1, 0);
    test(a638, "Float64", -5, 0);
    test(a638, "Float64", -9, 0);
}
function TestGetters() {
    runIntegerTestCases(true, intArray1, 0, 16);
    runFloatTestCases(true, 0);
    runIntegerTestCases(true, intArray2, 3, 2);
    runFloatTestCases(true, 3);
    runNegativeIndexTests(true);
}
function TestSetters() {
    runIntegerTestCases(false, initialArray, 0, 16);
    runFloatTestCases(false);
    runIntegerTestCases(false, initialArray, 3, 2);
    runFloatTestCases(false, 7);
    runNegativeIndexTests(false);
}
TestGetters();
TestSetters();
function CheckOutOfRangeInt8(a804, a805) {
    const v809 = new ArrayBuffer(100);
    const v810 = new DataView(v809);
    var view = v810;
    view.setInt8(0, a804);
    view.getInt8(0);
    view.setInt8(0, a804, true);
    view.getInt8(0, true);
}
function CheckOutOfRangeUint8(a825, a826) {
    const v830 = new ArrayBuffer(100);
    const v831 = new DataView(v830);
    var view = v831;
    view.setUint8(0, a825);
    view.getUint8(0);
    view.setUint8(0, a825, true);
    view.getUint8(0, true);
}
function CheckOutOfRangeInt16(a846, a847) {
    const v851 = new ArrayBuffer(100);
    const v852 = new DataView(v851);
    var view = v852;
    view.setInt16(0, a846);
    view.getInt16(0);
    view.setInt16(0, a846, true);
    view.getInt16(0, true);
}
function CheckOutOfRangeUint16(a867, a868) {
    const v872 = new ArrayBuffer(100);
    const v873 = new DataView(v872);
    var view = v873;
    view.setUint16(0, a867);
    view.getUint16(0);
    view.setUint16(0, a867, true);
    view.getUint16(0, true);
}
function CheckOutOfRangeInt32(a888, a889) {
    const v893 = new ArrayBuffer(100);
    const v894 = new DataView(v893);
    var view = v894;
    view.setInt32(0, a888);
    view.getInt32(0);
    view.setInt32(0, a888, true);
    view.getInt32(0, true);
}
function CheckOutOfRangeUint32(a909, a910) {
    const v914 = new ArrayBuffer(100);
    const v915 = new DataView(v914);
    var view = v915;
    view.setUint32(0, a909);
    view.getUint32(0);
    view.setUint32(0, a909, true);
    view.getUint32(0, true);
}
function TestOutOfRange() {
    CheckOutOfRangeInt8(128, -128);
    CheckOutOfRangeInt8(4096, 0);
    CheckOutOfRangeInt8(-129, 127);
    CheckOutOfRangeUint8(256, 0);
    CheckOutOfRangeUint8(4096, 0);
    CheckOutOfRangeUint8(-128, 128);
    CheckOutOfRangeUint8(-1, 255);
    CheckOutOfRangeUint8(-255, 1);
    CheckOutOfRangeInt16(32768, -32768);
    CheckOutOfRangeInt16(65536, 0);
    CheckOutOfRangeInt16(-32769, 32767);
    CheckOutOfRangeUint16(65536, 0);
    CheckOutOfRangeUint16(1048576, 0);
    CheckOutOfRangeUint16(-32768, 32768);
    CheckOutOfRangeUint16(-1, 65535);
    CheckOutOfRangeUint16(-65535, 1);
    CheckOutOfRangeInt32(2147483648, -2147483648);
    CheckOutOfRangeInt32(4294967296, 0);
    CheckOutOfRangeInt32(-2147483649, 2147483647);
    CheckOutOfRangeUint32(4294967296, 0);
    CheckOutOfRangeUint32(68719476736, 0);
    CheckOutOfRangeUint32(-2147483648, 2147483648);
    CheckOutOfRangeUint32(-1, 4294967295);
    CheckOutOfRangeUint32(-4294967295, 1);
}
TestOutOfRange();
function TestGeneralAccessors() {
    const v1022 = new ArrayBuffer(256);
    const v1023 = new DataView(v1022);
    var a = v1023;
    function CheckAccessor(a1026) {
        var f = a[a1026];
        function f1029() {
            f();
        }
        f1029();
        f.call(a, 0, 0);
        function f1036() {
            f.call({}, 0, 0);
        }
        f1036();
        f.call(a);
        f.call(a, 1);
    }
    CheckAccessor("getUint8");
    CheckAccessor("setUint8");
    CheckAccessor("getInt8");
    CheckAccessor("setInt8");
    CheckAccessor("getUint16");
    CheckAccessor("setUint16");
    CheckAccessor("getInt16");
    CheckAccessor("setInt16");
    CheckAccessor("getUint32");
    CheckAccessor("setUint32");
    CheckAccessor("getInt32");
    CheckAccessor("setInt32");
    CheckAccessor("getFloat32");
    CheckAccessor("setFloat32");
    CheckAccessor("getFloat64");
    CheckAccessor("setFloat64");
}
TestGeneralAccessors();
function TestInsufficientArguments() {
    const v1082 = new ArrayBuffer(256);
    const v1083 = new DataView(v1082);
    var a = v1083;
    function CheckInsuficientArguments(a1086) {
        var expectedValue = (a1086 === "Float32") || (a1086 === "Float64") ? NaN : 0;
        var offset = getElementSize(a1086);
        a["set" + a1086](0, 7);
        a["set" + a1086]();
        a["get" + a1086]();
        a["set" + a1086](offset, 7);
        a["set" + a1086](offset);
        a["get" + a1086](offset);
    }
    CheckInsuficientArguments("Uint8");
    CheckInsuficientArguments("Int8");
    CheckInsuficientArguments("Uint16");
    CheckInsuficientArguments("Int16");
    CheckInsuficientArguments("Uint32");
    CheckInsuficientArguments("Int32");
    CheckInsuficientArguments("Float32");
    CheckInsuficientArguments("Float64");
}
TestInsufficientArguments();

FuzzIL program written to corpus/dataview-accessors.fzil
