v0 <- LoadThis
v1 <- CreateNamedVariable 'global', 'var', v0
v2 <- BeginPlainFunction -> v3
    v4 <- LoadThis
    v5 <- Compare v4, '===', v1
    Return v3
EndPlainFunction
v6 <- BeginPlainFunction -> v7, v8
    v9 <- Compare v7, '==', v8
    v10 <- CallFunction v2, [v9]
    Return v10
EndPlainFunction
v11 <- LoadInteger '0'
v12 <- LoadInteger '0'
v13 <- CallFunction v6, [v11, v12]
v14 <- LoadInteger '0'
v15 <- LoadInteger '1'
v16 <- CallFunction v6, [v14, v15]
BeginObjectLiteral
v17 <- EndObjectLiteral
v18 <- CreateNamedVariable 'o', 'var', v17
v19 <- CreateNamedVariable 'f1', 'none'
SetProperty v18, 'f1', v19
v20 <- BeginPlainFunction -> v21
    v22 <- LoadThis
    v23 <- Compare v22, '===', v18
    Return v21
EndPlainFunction
v24 <- BeginPlainFunction -> v25, v26
    v27 <- Compare v25, '==', v26
    v28 <- CallMethod v18, 'f1', [v27]
    Return v28
EndPlainFunction
v29 <- LoadInteger '0'
v30 <- LoadInteger '0'
v31 <- CallFunction v24, [v29, v30]
v32 <- LoadInteger '0'
v33 <- LoadInteger '1'
v34 <- CallFunction v24, [v32, v33]


var global = this;
function f0(a3) {
    this === global;
    return a3;
}
function g0(a7, a8) {
    return f0(a7 == a8);
}
g0(0, 0);
g0(0, 1);
var o = {};
o.f1 = f1;
function f1(a21) {
    this === o;
    return a21;
}
function g1(a25, a26) {
    return o.f1(a25 == a26);
}
g1(0, 0);
g1(0, 1);

FuzzIL program written to corpus/control-flow-1.fzil
