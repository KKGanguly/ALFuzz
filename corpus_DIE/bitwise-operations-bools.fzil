v0 <- LoadInteger '1'
v1 <- CreateNamedVariable 't', 'var', v0
v2 <- BeginPlainFunction -> 
    v3 <- LoadUndefined
    v4 <- CreateNamedVariable 'b', 'var', v3
    BeginIf v1
        v5 <- LoadBoolean 'false'
        Reassign v4, v5
    EndIf
    v6 <- LoadInteger '1'
    v7 <- BinaryOperation v4, '|', v6
    v8 <- LoadInteger '1'
    v9 <- LoadInteger '1'
    v10 <- BinaryOperation v4, '&', v9
    v11 <- LoadInteger '0'
    v12 <- LoadInteger '1'
    v13 <- BinaryOperation v4, '^', v12
    v14 <- LoadInteger '1'
    v15 <- LoadInteger '1'
    v16 <- BinaryOperation v4, '<<', v15
    v17 <- LoadInteger '0'
    v18 <- LoadInteger '1'
    v19 <- BinaryOperation v4, '>>', v18
    v20 <- LoadInteger '0'
    v21 <- LoadInteger '1'
    v22 <- BinaryOperation v4, '>>>', v21
    v23 <- LoadInteger '0'
EndPlainFunction
v24 <- BeginPlainFunction -> 
    BeginIf v1
        v25 <- LoadBoolean 'false'
        v26 <- CreateNamedVariable 'b', 'none'
        Reassign v26, v25
    EndIf
    v27 <- LoadInteger '1'
    v28 <- CreateNamedVariable 'b', 'none'
    v29 <- BinaryOperation v27, '|', v28
    v30 <- LoadInteger '1'
    v31 <- LoadInteger '1'
    v32 <- BinaryOperation v31, '&', v28
    v33 <- LoadInteger '0'
    v34 <- LoadInteger '1'
    v35 <- BinaryOperation v34, '^', v28
    v36 <- LoadInteger '1'
    v37 <- LoadInteger '1'
    v38 <- BinaryOperation v37, '<<', v28
    v39 <- LoadInteger '1'
    v40 <- LoadInteger '1'
    v41 <- BinaryOperation v40, '>>', v28
    v42 <- LoadInteger '1'
    v43 <- LoadInteger '1'
    v44 <- BinaryOperation v43, '>>>', v28
    v45 <- LoadInteger '1'
EndPlainFunction
v46 <- BeginPlainFunction -> 
    BeginIf v1
        v47 <- LoadBoolean 'true'
        v48 <- CreateNamedVariable 'b', 'none'
        Reassign v48, v47
    EndIf
    v49 <- CreateNamedVariable 'b', 'none'
    v50 <- LoadInteger '1'
    v51 <- BinaryOperation v49, '|', v50
    v52 <- LoadInteger '1'
    v53 <- LoadInteger '1'
    v54 <- BinaryOperation v49, '&', v53
    v55 <- LoadInteger '1'
    v56 <- LoadInteger '1'
    v57 <- BinaryOperation v49, '^', v56
    v58 <- LoadInteger '0'
    v59 <- LoadInteger '1'
    v60 <- BinaryOperation v49, '<<', v59
    v61 <- LoadInteger '2'
    v62 <- LoadInteger '1'
    v63 <- BinaryOperation v49, '>>', v62
    v64 <- LoadInteger '0'
    v65 <- LoadInteger '1'
    v66 <- BinaryOperation v49, '>>>', v65
    v67 <- LoadInteger '0'
EndPlainFunction
v68 <- BeginPlainFunction -> 
    BeginIf v1
        v69 <- LoadBoolean 'true'
        v70 <- CreateNamedVariable 'b', 'none'
        Reassign v70, v69
    EndIf
    v71 <- LoadInteger '1'
    v72 <- CreateNamedVariable 'b', 'none'
    v73 <- BinaryOperation v71, '|', v72
    v74 <- LoadInteger '1'
    v75 <- LoadInteger '1'
    v76 <- BinaryOperation v75, '&', v72
    v77 <- LoadInteger '1'
    v78 <- LoadInteger '1'
    v79 <- BinaryOperation v78, '^', v72
    v80 <- LoadInteger '0'
    v81 <- LoadInteger '1'
    v82 <- BinaryOperation v81, '<<', v72
    v83 <- LoadInteger '2'
    v84 <- LoadInteger '1'
    v85 <- BinaryOperation v84, '>>', v72
    v86 <- LoadInteger '0'
    v87 <- LoadInteger '1'
    v88 <- BinaryOperation v87, '>>>', v72
    v89 <- LoadInteger '0'
EndPlainFunction
v90 <- BeginPlainFunction -> 
    BeginIf v1
        v91 <- LoadBoolean 'true'
        v92 <- CreateNamedVariable 'a', 'none'
        Reassign v92, v91
    EndIf
    BeginIf v1
        v93 <- LoadBoolean 'false'
        v94 <- CreateNamedVariable 'b', 'none'
        Reassign v94, v93
    EndIf
    v95 <- CreateNamedVariable 'a', 'none'
    v96 <- CreateNamedVariable 'b', 'none'
    v97 <- BinaryOperation v95, '|', v96
    v98 <- LoadInteger '1'
    v99 <- BinaryOperation v95, '&', v96
    v100 <- LoadInteger '0'
    v101 <- BinaryOperation v95, '^', v96
    v102 <- LoadInteger '1'
    v103 <- BinaryOperation v95, '<<', v96
    v104 <- LoadInteger '1'
    v105 <- BinaryOperation v95, '>>', v96
    v106 <- LoadInteger '1'
    v107 <- BinaryOperation v95, '>>>', v96
    v108 <- LoadInteger '1'
EndPlainFunction
v109 <- CallFunction v2, []
v110 <- CallFunction v24, []
v111 <- CallFunction v46, []
v112 <- CallFunction v68, []
v113 <- CallFunction v2, []
v114 <- CallFunction v24, []
v115 <- CallFunction v46, []
v116 <- CallFunction v68, []
v117 <- CallFunction v90, []
v118 <- CallFunction v90, []


var t = 1;
function testFalseLeftHandSide() {
    var b;
    if (t) {
        b = false;
    }
    b | 1;
    b & 1;
    b ^ 1;
    b << 1;
    b >> 1;
    b >>> 1;
}
function testFalseRightHandSide() {
    if (t) {
        b = false;
    }
    1 | b;
    1 & b;
    1 ^ b;
    1 << b;
    1 >> b;
    1 >>> b;
}
function testTrueLeftHandSide() {
    if (t) {
        b = true;
    }
    b | 1;
    b & 1;
    b ^ 1;
    b << 1;
    b >> 1;
    b >>> 1;
}
function testTrueRightHandSide() {
    if (t) {
        b = true;
    }
    1 | b;
    1 & b;
    1 ^ b;
    1 << b;
    1 >> b;
    1 >>> b;
}
function testBothSides() {
    if (t) {
        a = true;
    }
    if (t) {
        b = false;
    }
    a | b;
    a & b;
    a ^ b;
    a << b;
    a >> b;
    a >>> b;
}
testFalseLeftHandSide();
testFalseRightHandSide();
testTrueLeftHandSide();
testTrueRightHandSide();
testFalseLeftHandSide();
testFalseRightHandSide();
testTrueLeftHandSide();
testTrueRightHandSide();
testBothSides();
testBothSides();

FuzzIL program written to corpus/bitwise-operations-bools.fzil
