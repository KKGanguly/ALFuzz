v0 <- BeginGeneratorFunction -> 
    v1 <- Yield
    v2 <- CreateNamedVariable 'Set', 'none'
    v3 <- Construct v2, []
    v4 <- CreateArray []
    BeginForOfLoop v4 -> v5
        v6 <- CreateArray []
        BeginForOfLoop v6 -> v7
            v8 <- Yield
        EndForOfLoop
    EndForOfLoop
EndGeneratorFunction
v9 <- CallFunction v0, []
v10 <- CreateNamedVariable 'gaga', 'let', v9
v11 <- CallMethod v10, 'next', []
v12 <- CallMethod v10, 'next', []


function* foo() {
    yield;
    new Set();
    for (const v5 of []) {
        for (const v7 of []) {
            yield;
        }
    }
}
let gaga = foo();
gaga.next();
gaga.next();

FuzzIL program written to corpus/regress-762057.fzil
