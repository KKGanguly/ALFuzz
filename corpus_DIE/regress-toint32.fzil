v0 <- CreateNamedVariable 'Int32Array', 'none'
v1 <- LoadInteger '1'
v2 <- Construct v0, [v1]
v3 <- CreateNamedVariable 'a', 'var', v2
v4 <- LoadInteger '2147483648'
v5 <- CreateNamedVariable 'G', 'var', v4
v6 <- BeginPlainFunction -> v7
    v8 <- CreateNamedVariable 'v', 'var', v7
    v9 <- LoadInteger '1'
    v10 <- BinaryOperation v8, '+', v9
    Reassign v8, v10
    SetElement v3, '0', v8
    v11 <- LoadInteger '1'
    v12 <- BinaryOperation v8, '-', v11
    Reassign v8, v12
    Return v8
EndPlainFunction
v13 <- CallFunction v6, [v5]
v14 <- CallFunction v6, [v5]
v15 <- CallFunction v6, [v5]


const v2 = new Int32Array(1);
var a = v2;
var G = 2147483648;
function f(a7) {
    var v = a7;
    v = v + 1;
    a[0] = v;
    v = v - 1;
    return v;
}
f(G);
f(G);
f(G);

FuzzIL program written to corpus/regress-toint32.fzil
