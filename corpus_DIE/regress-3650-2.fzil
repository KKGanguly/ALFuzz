BeginObjectLiteral
v0 <- EndObjectLiteral
v1 <- CreateNamedVariable 'a', 'var', v0
BeginObjectLiteral
v2 <- EndObjectLiteral
v3 <- CreateNamedVariable 'b', 'var', v2
v4 <- LoadInteger '1'
SetProperty v1, 'x', v4
v5 <- LoadInteger '1'
SetProperty v1, 'y', v5
v6 <- LoadInteger '1'
SetProperty v3, 'x', v6
v7 <- BeginPlainFunction -> v8
    v9 <- LoadInteger '0'
    v10 <- CreateNamedVariable 's', 'var', v9
    BeginForInLoop v8 -> v11
        v12 <- UnaryOperation v10, '++'
    EndForInLoop
    Return v10
EndPlainFunction
v13 <- LoadInteger '2'
v14 <- CallFunction v7, [v1]
v15 <- LoadInteger '1'
v16 <- CallFunction v7, [v3]
v17 <- LoadInteger '2'
v18 <- CallFunction v7, [v1]
v19 <- LoadInteger '1'
v20 <- CallFunction v7, [v3]


var a = {};
var b = {};
a.x = 1;
a.y = 1;
b.x = 1;
function foo(a8) {
    var s = 0;
    for (const v11 in a8) {
        s++;
    }
    return s;
}
foo(a);
foo(b);
foo(a);
foo(b);

FuzzIL program written to corpus/regress-3650-2.fzil
