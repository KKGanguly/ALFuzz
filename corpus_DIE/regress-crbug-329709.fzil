v0 <- BeginPlainFunction -> v1
    v2 <- LoadInteger '1'
    v3 <- LoadInteger '1500000000'
    BeginSwitch v1
        BeginSwitchCase v2
            v4 <- LoadString 'one'
            Return v4
        EndSwitchCase fallsThrough
        BeginSwitchCase v3
            v5 <- LoadString 'non-smi int32'
            Return v5
        EndSwitchCase fallsThrough
        BeginSwitchDefaultCase
            v6 <- LoadString 'default'
            Return v6
        EndSwitchCase fallsThrough
    EndSwitch
EndPlainFunction
v7 <- LoadString 'one'
v8 <- LoadInteger '1'
v9 <- CallFunction v0, [v8]
v10 <- LoadString 'one'
v11 <- LoadInteger '1'
v12 <- CallFunction v0, [v11]
v13 <- LoadString 'non-smi int32'
v14 <- LoadInteger '1500000000'
v15 <- CallFunction v0, [v14]


function boom(a1) {
    switch (a1) {
        case 1:
            return "one";
        case 1500000000:
            return "non-smi int32";
        default:
            return "default";
    }
}
boom(1);
boom(1);
boom(1500000000);

FuzzIL program written to corpus/regress-crbug-329709.fzil
