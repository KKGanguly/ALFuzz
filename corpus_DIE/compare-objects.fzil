v0 <- BeginPlainFunction -> v1, v2
    v3 <- Compare v1, '<', v2
    Return v3
EndPlainFunction
v4 <- BeginPlainFunction -> v5, v6
    v7 <- Compare v5, '>', v6
    Return v7
EndPlainFunction
v8 <- BeginPlainFunction -> v9, v10
    v11 <- Compare v9, '==', v10
    Return v11
EndPlainFunction
v12 <- BeginPlainFunction -> v13, v14
    v15 <- Compare v13, '===', v14
    Return v15
EndPlainFunction
v16 <- BeginPlainFunction -> v17, v18, v19, v20
    v21 <- CallFunction v8, [v17, v17]
    v22 <- CallFunction v8, [v18, v18]
    v23 <- CallFunction v8, [v17, v18]
    v24 <- CallFunction v12, [v17, v17]
    v25 <- CallFunction v12, [v18, v18]
    v26 <- CallFunction v12, [v17, v18]
    v27 <- CallFunction v0, [v17, v18]
    v28 <- CallFunction v4, [v17, v18]
    v29 <- CallFunction v0, [v18, v17]
    v30 <- CallFunction v4, [v18, v17]
EndPlainFunction
v31 <- BeginPlainFunction -> 
    v32 <- LoadString '1'
    Return v32
EndPlainFunction
BeginObjectLiteral
    ObjectLiteralAddProperty `toString`, v31
v33 <- EndObjectLiteral
v34 <- CreateNamedVariable 'obj1', 'var', v33
v35 <- BeginPlainFunction -> 
    v36 <- LoadString '2'
    Return v36
EndPlainFunction
BeginObjectLiteral
    ObjectLiteralAddProperty `toString`, v35
v37 <- EndObjectLiteral
v38 <- CreateNamedVariable 'obj2', 'var', v37
v39 <- Compare v34, '<', v38
v40 <- CreateNamedVariable 'less', 'var', v39
v41 <- Compare v34, '>', v38
v42 <- CreateNamedVariable 'greater', 'var', v41
v43 <- CallFunction v16, [v34, v38, v40, v42]
v44 <- CallFunction v16, [v34, v38, v40, v42]
v45 <- CallFunction v16, [v34, v38, v40, v42]
v46 <- CallFunction v16, [v34, v38, v40, v42]
v47 <- CallFunction v16, [v34, v38, v40, v42]
v48 <- LoadInteger '1'
SetProperty v34, 'x', v48
v49 <- CallFunction v16, [v34, v38, v40, v42]
v50 <- LoadInteger '2'
SetProperty v38, 'y', v50
v51 <- CallFunction v16, [v34, v38, v40, v42]
v52 <- LoadInteger '3'
BeginObjectLiteral
    ObjectLiteralAddProperty `test`, v52
v53 <- EndObjectLiteral
v54 <- CreateNamedVariable 'obj1', 'var', v53
v55 <- LoadInteger '3'
BeginObjectLiteral
    ObjectLiteralAddProperty `test2`, v55
v56 <- EndObjectLiteral
v57 <- CreateNamedVariable 'obj2', 'var', v56
v58 <- Compare v54, '<', v57
v59 <- CreateNamedVariable 'less', 'var', v58
v60 <- Compare v54, '>', v57
v61 <- CreateNamedVariable 'greater', 'var', v60
v62 <- CallFunction v16, [v54, v57, v59, v61]
v63 <- CallFunction v16, [v54, v57, v59, v61]
v64 <- CallFunction v16, [v54, v57, v59, v61]
v65 <- CallFunction v16, [v54, v57, v59, v61]
v66 <- CallFunction v16, [v54, v57, v59, v61]
v67 <- BeginPlainFunction -> 
    v68 <- LoadString '1'
    Return v68
EndPlainFunction
SetProperty v54, 'toString', v67
v69 <- Compare v54, '<', v57
v70 <- CreateNamedVariable 'less', 'var', v69
v71 <- Compare v54, '>', v57
v72 <- CreateNamedVariable 'greater', 'var', v71
v73 <- CallFunction v16, [v54, v57, v70, v72]
v74 <- CallFunction v16, [v54, v57, v70, v72]
v75 <- BeginPlainFunction -> 
    v76 <- LoadString '2'
    Return v76
EndPlainFunction
SetProperty v57, 'toString', v75
v77 <- LoadBoolean 'true'
v78 <- CreateNamedVariable 'less', 'var', v77
v79 <- LoadBoolean 'false'
v80 <- CreateNamedVariable 'greater', 'var', v79
v81 <- CallFunction v16, [v54, v57, v78, v80]
v82 <- LoadInteger '2'
SetProperty v57, 'y', v82
v83 <- CallFunction v16, [v54, v57, v78, v80]


function lt(a1, a2) {
    return a1 < a2;
}
function gt(a5, a6) {
    return a5 > a6;
}
function eq(a9, a10) {
    return a9 == a10;
}
function eq_strict(a13, a14) {
    return a13 === a14;
}
function test(a17, a18, a19, a20) {
    eq(a17, a17);
    eq(a18, a18);
    eq(a17, a18);
    eq_strict(a17, a17);
    eq_strict(a18, a18);
    eq_strict(a17, a18);
    lt(a17, a18);
    gt(a17, a18);
    lt(a18, a17);
    gt(a18, a17);
}
function f31() {
    return "1";
}
var obj1 = { toString: f31 };
function f35() {
    return "2";
}
var obj2 = { toString: f35 };
var less = obj1 < obj2;
var greater = obj1 > obj2;
test(obj1, obj2, less, greater);
test(obj1, obj2, less, greater);
test(obj1, obj2, less, greater);
test(obj1, obj2, less, greater);
test(obj1, obj2, less, greater);
obj1.x = 1;
test(obj1, obj2, less, greater);
obj2.y = 2;
test(obj1, obj2, less, greater);
var obj1 = { test: 3 };
var obj2 = { test2: 3 };
var less = obj1 < obj2;
var greater = obj1 > obj2;
test(obj1, obj2, less, greater);
test(obj1, obj2, less, greater);
test(obj1, obj2, less, greater);
test(obj1, obj2, less, greater);
test(obj1, obj2, less, greater);
function f67() {
    return "1";
}
obj1.toString = f67;
var less = obj1 < obj2;
var greater = obj1 > obj2;
test(obj1, obj2, less, greater);
test(obj1, obj2, less, greater);
function f75() {
    return "2";
}
obj2.toString = f75;
var less = true;
var greater = false;
test(obj1, obj2, less, greater);
obj2.y = 2;
test(obj1, obj2, less, greater);

FuzzIL program written to corpus/compare-objects.fzil
