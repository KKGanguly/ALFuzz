v0 <- BeginArrowFunction -> 
    v1 <- BeginPlainFunction -> v2, v3, v4
        v5 <- CreateNamedVariable 'String', 'none'
        v6 <- GetProperty v5, 'prototype'
        v7 <- GetProperty v6, 'indexOf'
        v8 <- CallMethod v7, 'call', [v2, v3, v4]
        Return v8
    EndPlainFunction
    v9 <- LoadString 'abc'
    v10 <- LoadString 'de'
    v11 <- LoadInteger '1'
    v12 <- CallFunction v1, [v9, v10, v11]
    v13 <- LoadString 'abc'
    v14 <- LoadString 'de'
    v15 <- LoadInteger '1'
    v16 <- CallFunction v1, [v13, v14, v15]
    v17 <- LoadString 'abc'
    v18 <- LoadString 'de'
    BeginObjectLiteral
    v19 <- EndObjectLiteral
    v20 <- CallFunction v1, [v17, v18, v19]
    v21 <- LoadString 'abc'
    v22 <- LoadString 'de'
    BeginObjectLiteral
    v23 <- EndObjectLiteral
    v24 <- CallFunction v1, [v21, v22, v23]
    v25 <- CallFunction v1, []
EndArrowFunction
v26 <- CallFunction v0, []
v27 <- BeginArrowFunction -> 
    v28 <- BeginPlainFunction -> v29, v30, v31
        v32 <- CreateArray [v30, v31]
        v33 <- CreateNamedVariable 'String', 'none'
        v34 <- GetProperty v33, 'prototype'
        v35 <- GetProperty v34, 'indexOf'
        v36 <- CallMethod v35, 'apply', [v29, v32]
        Return v36
    EndPlainFunction
    v37 <- LoadString 'abc'
    v38 <- LoadString 'de'
    v39 <- LoadInteger '1'
    v40 <- CallFunction v28, [v37, v38, v39]
    v41 <- LoadString 'abc'
    v42 <- LoadString 'de'
    v43 <- LoadInteger '1'
    v44 <- CallFunction v28, [v41, v42, v43]
    v45 <- LoadString 'abc'
    BeginObjectLiteral
    v46 <- EndObjectLiteral
    v47 <- LoadInteger '1'
    v48 <- CallFunction v28, [v45, v46, v47]
    v49 <- LoadString 'abc'
    BeginObjectLiteral
    v50 <- EndObjectLiteral
    v51 <- LoadInteger '1'
    v52 <- CallFunction v28, [v49, v50, v51]
    v53 <- CallFunction v28, []
EndArrowFunction
v54 <- CallFunction v27, []
v55 <- BeginArrowFunction -> 
    v56 <- BeginPlainFunction -> v57, v58, v59
        v60 <- CreateNamedVariable 'String', 'none'
        v61 <- GetProperty v60, 'prototype'
        v62 <- GetProperty v61, 'indexOf'
        v63 <- CreateArray [v58, v59]
        v64 <- CreateNamedVariable 'Reflect', 'none'
        v65 <- CallMethod v64, 'apply', [v62, v57, v63]
        Return v65
    EndPlainFunction
    v66 <- LoadString 'abc'
    v67 <- LoadString 'de'
    v68 <- LoadInteger '1'
    v69 <- CallFunction v56, [v66, v67, v68]
    v70 <- LoadString 'abc'
    v71 <- LoadString 'de'
    v72 <- LoadInteger '1'
    v73 <- CallFunction v56, [v70, v71, v72]
    BeginObjectLiteral
    v74 <- EndObjectLiteral
    v75 <- LoadString 'de'
    v76 <- LoadInteger '1'
    v77 <- CallFunction v56, [v74, v75, v76]
    BeginObjectLiteral
    v78 <- EndObjectLiteral
    v79 <- LoadString 'de'
    v80 <- LoadInteger '1'
    v81 <- CallFunction v56, [v78, v79, v80]
    v82 <- CallFunction v56, []
EndArrowFunction
v83 <- CallFunction v55, []
v84 <- BeginArrowFunction -> 
    v85 <- BeginPlainFunction -> v86, v87
        v88 <- CreateNamedVariable 'String', 'none'
        v89 <- GetProperty v88, 'fromCharCode'
        v90 <- CallMethod v89, 'call', [v86, v87]
        Return v90
    EndPlainFunction
    v91 <- LoadString 'abc'
    v92 <- LoadInteger '1'
    v93 <- CallFunction v85, [v91, v92]
    v94 <- LoadString 'abc'
    v95 <- LoadInteger '1'
    v96 <- CallFunction v85, [v94, v95]
    v97 <- LoadString 'abc'
    BeginObjectLiteral
    v98 <- EndObjectLiteral
    v99 <- CallFunction v85, [v97, v98]
    BeginObjectLiteral
    v100 <- EndObjectLiteral
    BeginObjectLiteral
    v101 <- EndObjectLiteral
    v102 <- CallFunction v85, [v100, v101]
    v103 <- CallFunction v85, []
EndArrowFunction
v104 <- CallFunction v84, []
v105 <- BeginArrowFunction -> 
    v106 <- BeginPlainFunction -> v107, v108
        v109 <- LoadUndefined
        BeginObjectLiteral
        v110 <- EndObjectLiteral
        v111 <- CreateArray [v108, v110]
        v112 <- CreateNamedVariable 'String', 'none'
        v113 <- GetProperty v112, 'fromCharCode'
        v114 <- CallMethod v113, 'apply', [v109, v111]
        Return v114
    EndPlainFunction
    v115 <- LoadString 'abc'
    v116 <- LoadInteger '1'
    v117 <- CallFunction v106, [v115, v116]
    v118 <- LoadString 'abc'
    v119 <- LoadInteger '1'
    v120 <- CallFunction v106, [v118, v119]
    v121 <- LoadString 'abc'
    BeginObjectLiteral
    v122 <- EndObjectLiteral
    v123 <- CallFunction v106, [v121, v122]
    v124 <- LoadString 'abc'
    BeginObjectLiteral
    v125 <- EndObjectLiteral
    v126 <- CallFunction v106, [v124, v125]
    v127 <- CallFunction v106, []
EndArrowFunction
v128 <- CallFunction v105, []
v129 <- BeginArrowFunction -> 
    v130 <- BeginPlainFunction -> v131, v132
        v133 <- CreateNamedVariable 'String', 'none'
        v134 <- GetProperty v133, 'fromCharCode'
        BeginObjectLiteral
        v135 <- EndObjectLiteral
        v136 <- CreateArray [v132, v135]
        v137 <- CreateNamedVariable 'Reflect', 'none'
        v138 <- CallMethod v137, 'apply', [v134, v131, v136]
        Return v138
    EndPlainFunction
    v139 <- LoadString 'abc'
    v140 <- LoadInteger '1'
    v141 <- CallFunction v130, [v139, v140]
    v142 <- LoadString 'abc'
    v143 <- LoadInteger '1'
    v144 <- CallFunction v130, [v142, v143]
    v145 <- LoadString 'abc'
    BeginObjectLiteral
    v146 <- EndObjectLiteral
    v147 <- CallFunction v130, [v145, v146]
    v148 <- LoadString 'abc'
    BeginObjectLiteral
    v149 <- EndObjectLiteral
    v150 <- CallFunction v130, [v148, v149]
    v151 <- CallFunction v130, []
EndArrowFunction
v152 <- CallFunction v129, []


const v0 = () => {
    function f(a2, a3, a4) {
        return String.prototype.indexOf.call(a2, a3, a4);
    }
    f("abc", "de", 1);
    f("abc", "de", 1);
    f("abc", "de", {});
    f("abc", "de", {});
    f();
};
v0();
const v27 = () => {
    function f(a29, a30, a31) {
        const v32 = [a30,a31];
        return String.prototype.indexOf.apply(a29, v32);
    }
    f("abc", "de", 1);
    f("abc", "de", 1);
    f("abc", {}, 1);
    f("abc", {}, 1);
    f();
};
v27();
const v55 = () => {
    function f(a57, a58, a59) {
        return Reflect.apply(String.prototype.indexOf, a57, [a58,a59]);
    }
    f("abc", "de", 1);
    f("abc", "de", 1);
    f({}, "de", 1);
    f({}, "de", 1);
    f();
};
v55();
const v84 = () => {
    function f(a86, a87) {
        return String.fromCharCode.call(a86, a87);
    }
    f("abc", 1);
    f("abc", 1);
    f("abc", {});
    const v100 = {};
    f(v100, {});
    f();
};
v84();
const v105 = () => {
    function f(a107, a108) {
        const v111 = [a108,{}];
        return String.fromCharCode.apply(undefined, v111);
    }
    f("abc", 1);
    f("abc", 1);
    f("abc", {});
    f("abc", {});
    f();
};
v105();
const v129 = () => {
    function f(a131, a132) {
        const v134 = String.fromCharCode;
        return Reflect.apply(v134, a131, [a132,{}]);
    }
    f("abc", 1);
    f("abc", 1);
    f("abc", {});
    f("abc", {});
    f();
};
v129();

FuzzIL program written to corpus/default-nospec.fzil
