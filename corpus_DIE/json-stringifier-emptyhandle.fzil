v0 <- BeginPlainFunction -> 
    v1 <- LoadInteger '1'
    v2 <- LoadInteger '2'
    v3 <- LoadInteger '3'
    v4 <- CreateArray [v1, v2, v3]
    v5 <- CreateNamedVariable 'array', 'var', v4
    v6 <- LoadInteger '4'
    v7 <- BeginPlainFunction -> 
        v8 <- LoadString 'dynamite'
        ThrowException v8
    EndPlainFunction
    BeginObjectLiteral
        ObjectLiteralAddProperty `get`, v7
    v9 <- EndObjectLiteral
    v10 <- CreateNamedVariable 'Object', 'none'
    v11 <- CallMethod v10, 'defineProperty', [v5, v6, v9]
    v12 <- CreateNamedVariable 'JSON', 'none'
    v13 <- CallMethod v12, 'stringify', [v5]
EndPlainFunction
BeginTry
    v14 <- CallFunction v0, []
BeginCatch -> v15
    v16 <- LoadString 'dynamite'
EndTryCatch


function explode() {
    var array = [1,2,3];
    function f7() {
        throw "dynamite";
    }
    Object.defineProperty(array, 4, { get: f7 });
    JSON.stringify(array);
}
try {
    explode();
} catch(e15) {
}

FuzzIL program written to corpus/json-stringifier-emptyhandle.fzil
