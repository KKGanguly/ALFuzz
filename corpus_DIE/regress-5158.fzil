v0 <- BeginPlainFunction -> v1
    v2 <- UnaryOperation '+', v1
    Reassign v1, v2
    v3 <- LoadInteger '0'
    v4 <- Compare v1, '>', v3
    v5 <- LoadInteger '0'
    v6 <- BinaryOperation v5, '-', v1
    v7 <- TernaryOperation v4, v1, v6
    Return v7
EndPlainFunction
v8 <- LoadInteger '1'
v9 <- CallFunction v0, [v8]
v10 <- LoadInteger '1'
v11 <- UnaryOperation '-', v10
v12 <- CallFunction v0, [v11]
v13 <- LoadInteger '0'
v14 <- CallFunction v0, [v13]
v15 <- LoadInteger '2147483648'
v16 <- LoadInteger '2147483648'
v17 <- UnaryOperation '-', v16
v18 <- CallFunction v0, [v17]


function foo(a1) {
    return (a1 = +a1) > 0 ? a1 : 0 - a1;
}
foo(1);
foo(-1);
foo(0);
foo(-2147483648);

FuzzIL program written to corpus/regress-5158.fzil
