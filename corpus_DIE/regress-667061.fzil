v0 <- LoadBoolean 'false'
v1 <- CreateNamedVariable 'caught', 'var', v0
BeginTry
    v2 <- LoadString 'foo'
    v3 <- CallFunction v2, []
BeginCatch -> v4
    v5 <- CreateNamedVariable 'TypeError', 'none'
    v6 <- TestInstanceOf v4, v5
    v7 <- LoadBoolean 'true'
    Reassign v1, v7
EndTryCatch
v8 <- BeginPlainFunction -> v9
    v10 <- CallMethod v9, 'x', []
    Return v10
EndPlainFunction
v11 <- LoadBoolean 'false'
v12 <- CreateNamedVariable 'caught', 'var', v11
BeginTry
    v13 <- LoadInteger '1'
    BeginObjectLiteral
        ObjectLiteralAddProperty `x`, v13
    v14 <- EndObjectLiteral
    v15 <- CallFunction v8, [v14]
BeginCatch -> v16
    v17 <- CreateNamedVariable 'TypeError', 'none'
    v18 <- TestInstanceOf v16, v17
    v19 <- LoadBoolean 'true'
    Reassign v12, v19
EndTryCatch
v20 <- BeginPlainFunction -> v21
    v22 <- CallMethod v21, 'x', []
    Return v22
EndPlainFunction
v23 <- BeginPlainFunction -> v24
    v25 <- LoadThis
    SetProperty v25, 'x', v24
EndPlainFunction
v26 <- BeginPlainFunction -> 
    v27 <- LoadInteger '1'
    Return v27
EndPlainFunction
v28 <- Construct v23, [v26]
v29 <- CreateNamedVariable 'o', 'var', v28
v30 <- LoadInteger '1'
v31 <- CallFunction v20, [v29]
v32 <- LoadInteger '1'
v33 <- CallFunction v20, [v29]
v34 <- LoadBoolean 'false'
v35 <- CreateNamedVariable 'caught', 'var', v34
BeginTry
    v36 <- LoadInteger '3'
    v37 <- Construct v23, [v36]
    v38 <- CallFunction v20, [v37]
BeginCatch -> v39
    v40 <- CreateNamedVariable 'TypeError', 'none'
    v41 <- TestInstanceOf v39, v40
    v42 <- LoadBoolean 'true'
    Reassign v35, v42
EndTryCatch
v43 <- BeginPlainFunction -> v44
    v45 <- CallMethod v44, 'x', []
    Return v45
EndPlainFunction
v46 <- LoadInteger '1'
v47 <- BeginPlainFunction -> 
    v48 <- LoadInteger '1'
    Return v48
EndPlainFunction
BeginObjectLiteral
    ObjectLiteralAddProperty `x`, v47
v49 <- EndObjectLiteral
v50 <- CallFunction v43, [v49]
v51 <- LoadInteger '2'
v52 <- BeginPlainFunction -> 
    v53 <- LoadInteger '2'
    Return v53
EndPlainFunction
BeginObjectLiteral
    ObjectLiteralAddProperty `x`, v52
v54 <- EndObjectLiteral
v55 <- CallFunction v43, [v54]
v56 <- LoadInteger '3'
v57 <- BeginPlainFunction -> 
    v58 <- LoadInteger '3'
    Return v58
EndPlainFunction
BeginObjectLiteral
    ObjectLiteralAddProperty `x`, v57
v59 <- EndObjectLiteral
v60 <- CallFunction v43, [v59]
v61 <- LoadBoolean 'false'
v62 <- CreateNamedVariable 'caught', 'var', v61
BeginTry
    v63 <- LoadInteger '4'
    BeginObjectLiteral
        ObjectLiteralAddProperty `x`, v63
    v64 <- EndObjectLiteral
    v65 <- CallFunction v43, [v64]
BeginCatch -> v66
    v67 <- CreateNamedVariable 'TypeError', 'none'
    v68 <- TestInstanceOf v66, v67
    v69 <- LoadBoolean 'true'
    Reassign v62, v69
EndTryCatch


var caught = false;
try {
    const t2 = "foo";
    t2();
} catch(e4) {
    e4 instanceof TypeError;
    caught = true;
}
function h(a9) {
    return a9.x();
}
var caught = false;
try {
    h({ x: 1 });
} catch(e16) {
    e16 instanceof TypeError;
    caught = true;
}
function g(a21) {
    return a21.x();
}
function O(a24) {
    this.x = a24;
}
function f26() {
    return 1;
}
const v28 = new O(f26);
var o = v28;
g(o);
g(o);
var caught = false;
try {
    const v37 = new O(3);
    g(v37);
} catch(e39) {
    e39 instanceof TypeError;
    caught = true;
}
function f(a44) {
    return a44.x();
}
function f47() {
    return 1;
}
f({ x: f47 });
function f52() {
    return 2;
}
f({ x: f52 });
function f57() {
    return 3;
}
f({ x: f57 });
var caught = false;
try {
    f({ x: 4 });
} catch(e66) {
    e66 instanceof TypeError;
    caught = true;
}

FuzzIL program written to corpus/regress-667061.fzil
