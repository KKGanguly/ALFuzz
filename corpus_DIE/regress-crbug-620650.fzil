v0 <- BeginPlainFunction -> 
    v1 <- BeginPlainFunction -> v2, v3, v4
        v5 <- GetComputedProperty v2, v4
        SetComputedProperty v3, v4, v5
    EndPlainFunction
    v6 <- CreateNamedVariable 'ArrayBuffer', 'none'
    v7 <- LoadInteger '16'
    v8 <- Construct v6, [v7]
    v9 <- CreateNamedVariable 'buf', 'var', v8
    v10 <- CreateNamedVariable 'Int32Array', 'none'
    v11 <- Construct v10, [v9]
    v12 <- CreateNamedVariable 'view_int32', 'var', v11
    v13 <- LoadInteger '4294443007'
    SetElement v12, '1', v13
    v14 <- CreateNamedVariable 'Float64Array', 'none'
    v15 <- Construct v14, [v9]
    v16 <- CreateNamedVariable 'view_f64', 'var', v15
    v17 <- LoadUndefined
    v18 <- LoadFloat '0.1'
    v19 <- CreateArray [v17, v18]
    v20 <- CreateNamedVariable 'arr', 'var', v19
    v21 <- LoadInteger '1'
    v22 <- UnaryOperation '-', v21
    v23 <- CallFunction v1, [v16, v20, v22]
    v24 <- LoadInteger '0'
    v25 <- CallFunction v1, [v16, v20, v24]
EndPlainFunction
v26 <- CallFunction v0, []


function f0() {
    function f(a2, a3, a4) {
        a3[a4] = a2[a4];
    }
    const v8 = new ArrayBuffer(16);
    var buf = v8;
    const v11 = new Int32Array(buf);
    var view_int32 = v11;
    view_int32[1] = 4294443007;
    const v15 = new Float64Array(buf);
    var view_f64 = v15;
    var arr = [,0.1];
    f(view_f64, arr, -1);
    f(view_f64, arr, 0);
}
f0();

FuzzIL program written to corpus/regress-crbug-620650.fzil
