v0 <- CreateArray []
v1 <- CreateNamedVariable 'a', 'var', v0
BeginForLoopInitializer
    v2 <- LoadInteger '0'
BeginForLoopCondition -> v3
    v4 <- LoadInteger '9'
    v5 <- Compare v3, '<', v4
BeginForLoopAfterthought v5 -> v6
    v7 <- UnaryOperation v6, '++'
BeginForLoopBody -> v8
    v9 <- LoadInteger '1'
    v10 <- BinaryOperation v8, '+', v9
    SetComputedProperty v1, v8, v10
EndForLoop
v11 <- BeginPlainFunction -> v12, v13, v14, v15
    v16 <- CallFunction v12, [v13]
    v17 <- CallFunction v12, [v14]
    v18 <- CallFunction v12, [v13]
EndPlainFunction
v19 <- BeginPlainFunction -> 
    v20 <- GetElement v1, '7'
    v21 <- GetElement v1, '6'
    v22 <- BinaryOperation v20, '*', v21
    v23 <- GetElement v1, '5'
    v24 <- BinaryOperation v22, '*', v23
    v25 <- GetElement v1, '4'
    v26 <- BinaryOperation v24, '*', v25
    v27 <- GetElement v1, '3'
    v28 <- BinaryOperation v26, '*', v27
    v29 <- GetElement v1, '2'
    v30 <- BinaryOperation v28, '*', v29
    v31 <- GetElement v1, '1'
    v32 <- BinaryOperation v30, '*', v31
    v33 <- GetElement v1, '0'
    v34 <- BinaryOperation v32, '*', v33
    Return v34
EndPlainFunction
v35 <- LoadInteger '0'
v36 <- LoadInteger '1'
v37 <- LoadInteger '40320'
v38 <- CallFunction v11, [v19, v35, v36, v37]
v39 <- BeginPlainFunction -> 
    v40 <- GetElement v1, '7'
    v41 <- GetElement v1, '6'
    v42 <- BinaryOperation v40, '*', v41
    v43 <- GetElement v1, '5'
    v44 <- BinaryOperation v42, '*', v43
    v45 <- GetElement v1, '4'
    v46 <- BinaryOperation v44, '*', v45
    v47 <- GetElement v1, '10'
    v48 <- BinaryOperation v46, '*', v47
    v49 <- GetElement v1, '2'
    v50 <- BinaryOperation v48, '*', v49
    v51 <- GetElement v1, '1'
    v52 <- BinaryOperation v50, '*', v51
    v53 <- GetElement v1, '0'
    v54 <- BinaryOperation v52, '*', v53
    Return v54
EndPlainFunction
v55 <- LoadInteger '0'
v56 <- LoadInteger '1'
v57 <- CreateNamedVariable 'NaN', 'none'
v58 <- CallFunction v11, [v39, v55, v56, v57]
v59 <- BeginPlainFunction -> 
    v60 <- GetElement v1, '0'
    v61 <- GetElement v1, '1'
    v62 <- BinaryOperation v60, '*', v61
    v63 <- GetElement v1, '2'
    v64 <- BinaryOperation v62, '*', v63
    v65 <- GetElement v1, '3'
    v66 <- BinaryOperation v64, '*', v65
    v67 <- GetElement v1, '4'
    v68 <- BinaryOperation v66, '*', v67
    v69 <- GetElement v1, '5'
    v70 <- BinaryOperation v68, '*', v69
    v71 <- GetElement v1, '6'
    v72 <- BinaryOperation v70, '*', v71
    v73 <- GetElement v1, '7'
    v74 <- BinaryOperation v72, '*', v73
    Return v74
EndPlainFunction
v75 <- LoadInteger '0'
v76 <- LoadInteger '1'
v77 <- LoadInteger '40320'
v78 <- CallFunction v11, [v59, v75, v76, v77]
v79 <- BeginPlainFunction -> 
    v80 <- GetElement v1, '3'
    v81 <- GetElement v1, '0'
    v82 <- BinaryOperation v80, '*', v81
    v83 <- GetElement v1, '6'
    v84 <- BinaryOperation v82, '*', v83
    v85 <- GetElement v1, '7'
    v86 <- BinaryOperation v84, '*', v85
    v87 <- GetElement v1, '5'
    v88 <- BinaryOperation v86, '*', v87
    v89 <- GetElement v1, '1'
    v90 <- BinaryOperation v88, '*', v89
    v91 <- GetElement v1, '4'
    v92 <- BinaryOperation v90, '*', v91
    v93 <- GetElement v1, '2'
    v94 <- BinaryOperation v92, '*', v93
    Return v94
EndPlainFunction
v95 <- LoadInteger '0'
v96 <- LoadInteger '1'
v97 <- LoadInteger '40320'
v98 <- CallFunction v11, [v79, v95, v96, v97]
v99 <- BeginPlainFunction -> v100
    v101 <- LoadInteger '3'
    v102 <- BinaryOperation v100, '+', v101
    v103 <- GetComputedProperty v1, v102
    v104 <- GetElement v1, '0'
    v105 <- BinaryOperation v103, '*', v104
    v106 <- LoadInteger '6'
    v107 <- BinaryOperation v100, '+', v106
    v108 <- GetComputedProperty v1, v107
    v109 <- BinaryOperation v105, '*', v108
    v110 <- GetElement v1, '7'
    v111 <- BinaryOperation v109, '*', v110
    v112 <- LoadInteger '5'
    v113 <- BinaryOperation v100, '+', v112
    v114 <- GetComputedProperty v1, v113
    v115 <- BinaryOperation v111, '*', v114
    v116 <- GetElement v1, '1'
    v117 <- BinaryOperation v115, '*', v116
    v118 <- LoadInteger '4'
    v119 <- BinaryOperation v100, '+', v118
    v120 <- GetComputedProperty v1, v119
    v121 <- BinaryOperation v117, '*', v120
    v122 <- GetElement v1, '2'
    v123 <- BinaryOperation v121, '*', v122
    Return v123
EndPlainFunction
v124 <- LoadInteger '0'
v125 <- LoadInteger '1'
v126 <- LoadInteger '40320'
v127 <- CallFunction v11, [v99, v124, v125, v126]
v128 <- BeginPlainFunction -> v129
    v130 <- LoadInteger '1'
    v131 <- BinaryOperation v129, '+', v130
    v132 <- GetComputedProperty v1, v131
    v133 <- GetElement v1, '0'
    v134 <- BinaryOperation v132, '*', v133
    v135 <- LoadInteger '4'
    v136 <- BinaryOperation v129, '+', v135
    v137 <- GetComputedProperty v1, v136
    v138 <- BinaryOperation v134, '*', v137
    v139 <- GetElement v1, '7'
    v140 <- BinaryOperation v138, '*', v139
    v141 <- LoadInteger '3'
    v142 <- BinaryOperation v129, '+', v141
    v143 <- GetComputedProperty v1, v142
    v144 <- BinaryOperation v140, '*', v143
    v145 <- GetElement v1, '1'
    v146 <- BinaryOperation v144, '*', v145
    v147 <- LoadInteger '2'
    v148 <- BinaryOperation v129, '+', v147
    v149 <- GetComputedProperty v1, v148
    v150 <- BinaryOperation v146, '*', v149
    v151 <- GetElement v1, '2'
    v152 <- BinaryOperation v150, '*', v151
    Return v152
EndPlainFunction
v153 <- LoadInteger '2'
v154 <- LoadInteger '3'
v155 <- LoadInteger '40320'
v156 <- CallFunction v11, [v128, v153, v154, v155]
v157 <- BeginPlainFunction -> v158
    v159 <- LoadUndefined
    v160 <- CreateNamedVariable 'c', 'var', v159
    BeginIf v158
        v161 <- GetElement v1, '3'
        v162 <- GetElement v1, '0'
        v163 <- BinaryOperation v161, '*', v162
        v164 <- GetElement v1, '6'
        v165 <- BinaryOperation v163, '*', v164
        v166 <- GetElement v1, '7'
        v167 <- BinaryOperation v165, '*', v166
        Reassign v160, v167
    EndIf
    v168 <- GetElement v1, '5'
    v169 <- BinaryOperation v160, '*', v168
    v170 <- GetElement v1, '1'
    v171 <- BinaryOperation v169, '*', v170
    v172 <- GetElement v1, '4'
    v173 <- BinaryOperation v171, '*', v172
    v174 <- GetElement v1, '2'
    v175 <- BinaryOperation v173, '*', v174
    Return v175
EndPlainFunction
v176 <- LoadBoolean 'true'
v177 <- LoadBoolean 'false'
v178 <- LoadInteger '40320'
v179 <- CallFunction v11, [v157, v176, v177, v178]
v180 <- BeginPlainFunction -> v181
    v182 <- GetElement v1, '7'
    v183 <- CreateNamedVariable 'c', 'var', v182
    BeginIf v181
        v184 <- GetElement v1, '3'
        v185 <- GetElement v1, '0'
        v186 <- BinaryOperation v184, '*', v185
        v187 <- GetElement v1, '6'
        v188 <- BinaryOperation v186, '*', v187
        Update v183, '*', v188
    EndIf
    v189 <- GetElement v1, '5'
    v190 <- BinaryOperation v183, '*', v189
    v191 <- GetElement v1, '1'
    v192 <- BinaryOperation v190, '*', v191
    v193 <- GetElement v1, '4'
    v194 <- BinaryOperation v192, '*', v193
    v195 <- GetElement v1, '2'
    v196 <- BinaryOperation v194, '*', v195
    Return v196
EndPlainFunction
v197 <- LoadBoolean 'true'
v198 <- LoadBoolean 'false'
v199 <- LoadInteger '40320'
v200 <- CallFunction v11, [v180, v197, v198, v199]
v201 <- BeginPlainFunction -> v202
    v203 <- GetElement v1, '7'
    v204 <- CreateNamedVariable 'c', 'var', v203
    BeginIf v202
        v205 <- GetElement v1, '3'
        v206 <- GetElement v1, '0'
        v207 <- BinaryOperation v205, '*', v206
        v208 <- GetElement v1, '6'
        v209 <- BinaryOperation v207, '*', v208
        Update v204, '*', v209
    EndIf
    v210 <- GetElement v1, '5'
    v211 <- BinaryOperation v204, '*', v210
    v212 <- GetElement v1, '10'
    v213 <- BinaryOperation v211, '*', v212
    v214 <- GetElement v1, '4'
    v215 <- BinaryOperation v213, '*', v214
    v216 <- GetElement v1, '2'
    v217 <- BinaryOperation v215, '*', v216
    Return v217
EndPlainFunction
v218 <- LoadBoolean 'true'
v219 <- LoadBoolean 'false'
v220 <- CallFunction v11, [v201, v218, v219, v57]
v221 <- BeginPlainFunction -> v222
    v223 <- GetElement v1, '1'
    v224 <- CreateNamedVariable 'c', 'var', v223
    BeginIf v222
        v225 <- GetElement v1, '3'
        v226 <- GetElement v1, '0'
        v227 <- BinaryOperation v225, '*', v226
        v228 <- GetElement v1, '6'
        v229 <- BinaryOperation v227, '*', v228
        Update v224, '*', v229
    BeginElse
        v230 <- GetElement v1, '6'
        v231 <- GetElement v1, '5'
        v232 <- BinaryOperation v230, '*', v231
        v233 <- GetElement v1, '4'
        v234 <- BinaryOperation v232, '*', v233
        Reassign v224, v234
    EndIf
    v235 <- GetElement v1, '5'
    v236 <- BinaryOperation v224, '*', v235
    v237 <- GetElement v1, '7'
    v238 <- BinaryOperation v236, '*', v237
    v239 <- GetElement v1, '4'
    v240 <- BinaryOperation v238, '*', v239
    v241 <- GetElement v1, '2'
    v242 <- BinaryOperation v240, '*', v241
    Return v242
EndPlainFunction
v243 <- LoadBoolean 'true'
v244 <- LoadBoolean 'false'
v245 <- LoadInteger '40320'
v246 <- CallFunction v11, [v221, v243, v244, v245]
v247 <- BeginPlainFunction -> v248
    v249 <- GetElement v1, '1'
    v250 <- CreateNamedVariable 'c', 'var', v249
    BeginIf v248
        v251 <- GetElement v1, '6'
        v252 <- LoadInteger '5'
        v253 <- BinaryOperation v248, '+', v252
        v254 <- GetComputedProperty v1, v253
        v255 <- BinaryOperation v251, '*', v254
        v256 <- GetElement v1, '4'
        v257 <- BinaryOperation v255, '*', v256
        Reassign v250, v257
    BeginElse
        v258 <- LoadInteger '3'
        v259 <- BinaryOperation v248, '+', v258
        v260 <- GetComputedProperty v1, v259
        v261 <- GetElement v1, '0'
        v262 <- BinaryOperation v260, '*', v261
        v263 <- LoadInteger '6'
        v264 <- BinaryOperation v248, '+', v263
        v265 <- GetComputedProperty v1, v264
        v266 <- BinaryOperation v262, '*', v265
        Update v250, '*', v266
    EndIf
    v267 <- GetElement v1, '5'
    v268 <- BinaryOperation v250, '*', v267
    v269 <- LoadInteger '7'
    v270 <- BinaryOperation v248, '+', v269
    v271 <- GetComputedProperty v1, v270
    v272 <- BinaryOperation v268, '*', v271
    v273 <- GetElement v1, '4'
    v274 <- BinaryOperation v272, '*', v273
    v275 <- GetElement v1, '2'
    v276 <- BinaryOperation v274, '*', v275
    Return v276
EndPlainFunction
v277 <- LoadInteger '0'
v278 <- LoadInteger '1'
v279 <- LoadInteger '40320'
v280 <- CallFunction v11, [v247, v277, v278, v279]
v281 <- BeginPlainFunction -> v282
    v283 <- LoadInteger '3'
    v284 <- BinaryOperation v282, '-', v283
    v285 <- GetComputedProperty v1, v284
    v286 <- CreateNamedVariable 'c', 'var', v285
    v287 <- LoadInteger '4'
    v288 <- Compare v282, '!=', v287
    BeginIf v288
        v289 <- GetElement v1, '6'
        v290 <- LoadInteger '1'
        v291 <- BinaryOperation v282, '+', v290
        v292 <- GetComputedProperty v1, v291
        v293 <- BinaryOperation v289, '*', v292
        v294 <- GetElement v1, '4'
        v295 <- BinaryOperation v293, '*', v294
        Reassign v286, v295
    BeginElse
        v296 <- LoadInteger '1'
        v297 <- BinaryOperation v282, '-', v296
        v298 <- GetComputedProperty v1, v297
        v299 <- GetElement v1, '0'
        v300 <- BinaryOperation v298, '*', v299
        v301 <- LoadInteger '2'
        v302 <- BinaryOperation v282, '+', v301
        v303 <- GetComputedProperty v1, v302
        v304 <- BinaryOperation v300, '*', v303
        Update v286, '*', v304
    EndIf
    v305 <- GetElement v1, '5'
    v306 <- BinaryOperation v286, '*', v305
    v307 <- LoadInteger '3'
    v308 <- BinaryOperation v282, '+', v307
    v309 <- GetComputedProperty v1, v308
    v310 <- BinaryOperation v306, '*', v309
    v311 <- GetElement v1, '4'
    v312 <- BinaryOperation v310, '*', v311
    v313 <- LoadInteger '2'
    v314 <- BinaryOperation v282, '-', v313
    v315 <- GetComputedProperty v1, v314
    v316 <- BinaryOperation v312, '*', v315
    Return v316
EndPlainFunction
v317 <- LoadInteger '4'
v318 <- LoadInteger '3'
v319 <- LoadInteger '40320'
v320 <- CallFunction v11, [v281, v317, v318, v319]
v321 <- BeginPlainFunction -> v322
    v323 <- LoadInteger '3'
    v324 <- BinaryOperation v322, '-', v323
    v325 <- GetComputedProperty v1, v324
    v326 <- CreateNamedVariable 'c', 'var', v325
    v327 <- LoadInteger '4'
    v328 <- Compare v322, '!=', v327
    BeginIf v328
        v329 <- GetElement v1, '6'
        v330 <- LoadInteger '1'
        v331 <- BinaryOperation v322, '+', v330
        v332 <- GetComputedProperty v1, v331
        v333 <- BinaryOperation v329, '*', v332
        v334 <- GetElement v1, '4'
        v335 <- BinaryOperation v333, '*', v334
        Reassign v326, v335
    BeginElse
        v336 <- LoadInteger '1'
        v337 <- BinaryOperation v322, '-', v336
        v338 <- GetComputedProperty v1, v337
        v339 <- GetElement v1, '0'
        v340 <- BinaryOperation v338, '*', v339
        v341 <- LoadInteger '2'
        v342 <- BinaryOperation v322, '+', v341
        v343 <- GetComputedProperty v1, v342
        v344 <- BinaryOperation v340, '*', v343
        Update v326, '*', v344
    EndIf
    v345 <- GetElement v1, '5'
    v346 <- BinaryOperation v326, '*', v345
    v347 <- LoadInteger '3'
    v348 <- BinaryOperation v322, '+', v347
    v349 <- GetComputedProperty v1, v348
    v350 <- BinaryOperation v346, '*', v349
    v351 <- GetElement v1, '4'
    v352 <- BinaryOperation v350, '*', v351
    v353 <- LoadInteger '2'
    v354 <- BinaryOperation v322, '-', v353
    v355 <- GetComputedProperty v1, v354
    v356 <- BinaryOperation v352, '*', v355
    Return v356
EndPlainFunction
v357 <- LoadInteger '6'
v358 <- LoadInteger '3'
v359 <- CallFunction v11, [v321, v357, v358, v57]
v360 <- BeginPlainFunction -> v361
    v362 <- LoadInteger '3'
    v363 <- BinaryOperation v361, '-', v362
    v364 <- GetComputedProperty v1, v363
    v365 <- CreateNamedVariable 'c', 'var', v364
    v366 <- LoadInteger '4'
    v367 <- Compare v361, '!=', v366
    BeginIf v367
        v368 <- GetElement v1, '6'
        v369 <- LoadInteger '1'
        v370 <- BinaryOperation v361, '+', v369
        v371 <- GetComputedProperty v1, v370
        v372 <- BinaryOperation v368, '*', v371
        v373 <- GetElement v1, '4'
        v374 <- BinaryOperation v372, '*', v373
        Reassign v365, v374
    BeginElse
        v375 <- LoadInteger '1'
        v376 <- BinaryOperation v361, '-', v375
        v377 <- GetComputedProperty v1, v376
        v378 <- GetElement v1, '0'
        v379 <- BinaryOperation v377, '*', v378
        v380 <- LoadInteger '2'
        v381 <- BinaryOperation v361, '+', v380
        v382 <- GetComputedProperty v1, v381
        v383 <- BinaryOperation v379, '*', v382
        Update v365, '*', v383
    EndIf
    v384 <- GetElement v1, '5'
    v385 <- BinaryOperation v365, '*', v384
    v386 <- LoadInteger '3'
    v387 <- BinaryOperation v361, '+', v386
    v388 <- GetComputedProperty v1, v387
    v389 <- BinaryOperation v385, '*', v388
    v390 <- GetElement v1, '4'
    v391 <- BinaryOperation v389, '*', v390
    v392 <- LoadInteger '2'
    v393 <- BinaryOperation v361, '-', v392
    v394 <- GetComputedProperty v1, v393
    v395 <- BinaryOperation v391, '*', v394
    Return v395
EndPlainFunction
v396 <- LoadInteger '1'
v397 <- LoadInteger '4'
v398 <- CallFunction v11, [v360, v396, v397, v57]
v399 <- BeginPlainFunction -> v400
    v401 <- LoadInteger '1'
    v402 <- CreateNamedVariable 'c', 'var', v401
    BeginForLoopInitializer
        v403 <- LoadInteger '1'
    BeginForLoopCondition -> v404
        v405 <- LoadInteger '1'
        v406 <- BinaryOperation v400, '-', v405
        v407 <- Compare v404, '<', v406
    BeginForLoopAfterthought v407 -> v408
        v409 <- UnaryOperation v408, '++'
    BeginForLoopBody -> v410
        v411 <- LoadInteger '1'
        v412 <- BinaryOperation v410, '-', v411
        v413 <- GetComputedProperty v1, v412
        v414 <- GetComputedProperty v1, v410
        v415 <- BinaryOperation v413, '*', v414
        v416 <- LoadInteger '1'
        v417 <- BinaryOperation v410, '+', v416
        v418 <- GetComputedProperty v1, v417
        v419 <- BinaryOperation v415, '*', v418
        Update v402, '*', v419
    EndForLoop
    Return v402
EndPlainFunction
v420 <- LoadInteger '8'
v421 <- LoadInteger '4'
v422 <- LoadInteger '40320'
v423 <- LoadInteger '8'
v424 <- BinaryOperation v422, '/', v423
v425 <- LoadInteger '7'
v426 <- BinaryOperation v424, '/', v425
v427 <- LoadInteger '40320'
v428 <- LoadInteger '8'
v429 <- BinaryOperation v427, '/', v428
v430 <- BinaryOperation v426, '*', v429
v431 <- LoadInteger '40320'
v432 <- LoadInteger '2'
v433 <- BinaryOperation v431, '/', v432
v434 <- BinaryOperation v430, '*', v433
v435 <- CallFunction v11, [v399, v420, v421, v434]
v436 <- BeginPlainFunction -> v437
    v438 <- LoadInteger '0'
    v439 <- CreateNamedVariable 'c', 'var', v438
    BeginForLoopInitializer
        v440 <- LoadInteger '0'
    BeginForLoopCondition -> v441
        v442 <- Compare v441, '<', v437
    BeginForLoopAfterthought v442 -> v443
        v444 <- UnaryOperation v443, '++'
    BeginForLoopBody -> v445
        v446 <- GetElement v1, '3'
        v447 <- GetElement v1, '0'
        v448 <- BinaryOperation v446, '*', v447
        v449 <- GetElement v1, '6'
        v450 <- BinaryOperation v448, '*', v449
        v451 <- GetElement v1, '7'
        v452 <- BinaryOperation v450, '*', v451
        v453 <- GetElement v1, '5'
        v454 <- BinaryOperation v452, '*', v453
        v455 <- GetElement v1, '1'
        v456 <- BinaryOperation v454, '*', v455
        v457 <- GetElement v1, '4'
        v458 <- BinaryOperation v456, '*', v457
        v459 <- GetElement v1, '2'
        v460 <- BinaryOperation v458, '*', v459
        Update v439, '+', v460
    EndForLoop
    Return v439
EndPlainFunction
v461 <- LoadInteger '100'
v462 <- LoadInteger '4'
v463 <- LoadInteger '40320'
v464 <- LoadInteger '100'
v465 <- BinaryOperation v463, '*', v464
v466 <- CallFunction v11, [v436, v461, v462, v465]


var a = [];
for (let i3 = 0; i3 < 9; i3++) {
    a[i3] = i3 + 1;
}
function test(a12, a13, a14, a15) {
    a12(a13);
    a12(a14);
    a12(a13);
}
function f0() {
    return ((((((a[7] * a[6]) * a[5]) * a[4]) * a[3]) * a[2]) * a[1]) * a[0];
}
test(f0, 0, 1, 40320);
function f1() {
    return ((((((a[7] * a[6]) * a[5]) * a[4]) * a[10]) * a[2]) * a[1]) * a[0];
}
test(f1, 0, 1, NaN);
function f2() {
    return ((((((a[0] * a[1]) * a[2]) * a[3]) * a[4]) * a[5]) * a[6]) * a[7];
}
test(f2, 0, 1, 40320);
function f3() {
    return ((((((a[3] * a[0]) * a[6]) * a[7]) * a[5]) * a[1]) * a[4]) * a[2];
}
test(f3, 0, 1, 40320);
function f4(a100) {
    return ((((((a[a100 + 3] * a[0]) * a[a100 + 6]) * a[7]) * a[a100 + 5]) * a[1]) * a[a100 + 4]) * a[2];
}
test(f4, 0, 1, 40320);
function f5(a129) {
    return ((((((a[a129 + 1] * a[0]) * a[a129 + 4]) * a[7]) * a[a129 + 3]) * a[1]) * a[a129 + 2]) * a[2];
}
test(f5, 2, 3, 40320);
function f6(a158) {
    var c;
    if (a158) {
        c = ((a[3] * a[0]) * a[6]) * a[7];
    }
    return (((c * a[5]) * a[1]) * a[4]) * a[2];
}
test(f6, true, false, 40320);
function f7(a181) {
    var c = a[7];
    if (a181) {
        c *= (a[3] * a[0]) * a[6];
    }
    return (((c * a[5]) * a[1]) * a[4]) * a[2];
}
test(f7, true, false, 40320);
function f8(a202) {
    var c = a[7];
    if (a202) {
        c *= (a[3] * a[0]) * a[6];
    }
    return (((c * a[5]) * a[10]) * a[4]) * a[2];
}
test(f8, true, false, NaN);
function f9(a222) {
    var c = a[1];
    if (a222) {
        c *= (a[3] * a[0]) * a[6];
    } else {
        c = (a[6] * a[5]) * a[4];
    }
    return (((c * a[5]) * a[7]) * a[4]) * a[2];
}
test(f9, true, false, 40320);
function fa(a248) {
    var c = a[1];
    if (a248) {
        c = (a[6] * a[a248 + 5]) * a[4];
    } else {
        c *= (a[a248 + 3] * a[0]) * a[a248 + 6];
    }
    return (((c * a[5]) * a[a248 + 7]) * a[4]) * a[2];
}
test(fa, 0, 1, 40320);
function fb(a282) {
    var c = a[a282 - 3];
    if (a282 != 4) {
        c = (a[6] * a[a282 + 1]) * a[4];
    } else {
        c *= (a[a282 - 1] * a[0]) * a[a282 + 2];
    }
    return (((c * a[5]) * a[a282 + 3]) * a[4]) * a[a282 - 2];
}
test(fb, 4, 3, 40320);
function fc(a322) {
    var c = a[a322 - 3];
    if (a322 != 4) {
        c = (a[6] * a[a322 + 1]) * a[4];
    } else {
        c *= (a[a322 - 1] * a[0]) * a[a322 + 2];
    }
    return (((c * a[5]) * a[a322 + 3]) * a[4]) * a[a322 - 2];
}
test(fc, 6, 3, NaN);
function fd(a361) {
    var c = a[a361 - 3];
    if (a361 != 4) {
        c = (a[6] * a[a361 + 1]) * a[4];
    } else {
        c *= (a[a361 - 1] * a[0]) * a[a361 + 2];
    }
    return (((c * a[5]) * a[a361 + 3]) * a[4]) * a[a361 - 2];
}
test(fd, 1, 4, NaN);
function fe(a400) {
    var c = 1;
    for (let i404 = 1; i404 < (a400 - 1); i404++) {
        c *= (a[i404 - 1] * a[i404]) * a[i404 + 1];
    }
    return c;
}
test(fe, 8, 4, (((40320 / 8) / 7) * (40320 / 8)) * (40320 / 2));
function ff(a437) {
    var c = 0;
    for (let i441 = 0; i441 < a437; i441++) {
        c += ((((((a[3] * a[0]) * a[6]) * a[7]) * a[5]) * a[1]) * a[4]) * a[2];
    }
    return c;
}
test(ff, 100, 4, 40320 * 100);

FuzzIL program written to corpus/bounds-checks-elimination.fzil
