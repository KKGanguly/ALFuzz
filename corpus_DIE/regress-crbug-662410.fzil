v0 <- BeginPlainFunction -> v1
    v2 <- GetProperty v1, 'constructor'
    Return v2
EndPlainFunction
BeginObjectLiteral
v3 <- EndObjectLiteral
v4 <- CallFunction v0, [v3]
BeginObjectLiteral
v5 <- EndObjectLiteral
v6 <- CallFunction v0, [v5]
v7 <- BeginPlainFunction -> 
    v8 <- LoadInteger '0'
    v9 <- CreateNamedVariable 'i', 'var', v8
    BeginDoWhileLoopBody
        v10 <- LoadInteger '1'
        v11 <- BinaryOperation v9, '+', v10
        Reassign v9, v11
        v12 <- CallFunction v0, [v9]
    BeginDoWhileLoopHeader
        v13 <- LoadInteger '1'
        v14 <- Compare v9, '<', v13
    EndDoWhileLoop v14
EndPlainFunction
v15 <- CallFunction v7, []


function g(a1) {
    return a1.constructor;
}
g({});
g({});
function f() {
    var i = 0;
    do {
        g(i = i + 1);
    } while (i < 1)
}
f();

FuzzIL program written to corpus/regress-crbug-662410.fzil
