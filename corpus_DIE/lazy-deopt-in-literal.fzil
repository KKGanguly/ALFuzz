v0 <- BeginPlainFunction -> 
EndPlainFunction
v1 <- BeginPlainFunction -> 
    v2 <- CallFunction v0, []
    v3 <- LoadInteger '7'
    BeginObjectLiteral
        ObjectLiteralAddElement `113`, v2
        ObjectLiteralAddElement `113`, v3
    v4 <- EndObjectLiteral
    v5 <- CreateNamedVariable 'r', 'var', v4
    v6 <- GetElement v5, '113'
    Return v6
EndPlainFunction
v7 <- CallFunction v1, []
v8 <- CallFunction v1, []
v9 <- CallFunction v1, []
v10 <- CreateNamedVariable 'y', 'var', v9
v11 <- LoadInteger '7'


function deopt() {
}
function fun3() {
    const v2 = deopt();
    var r = { 113: v2, 113: 7 };
    return r[113];
}
fun3();
fun3();
var y = fun3();

FuzzIL program written to corpus/lazy-deopt-in-literal.fzil
