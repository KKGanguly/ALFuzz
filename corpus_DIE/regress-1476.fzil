v0 <- BeginPlainFunction -> v1
    v2 <- LoadInteger '2'
    v3 <- BinaryOperation v1, '%', v2
    v4 <- LoadInteger '0'
    v5 <- BinaryOperation v3, '|', v4
    Return v5
EndPlainFunction
v6 <- LoadInteger '1'
v7 <- UnaryOperation '-', v6
v8 <- LoadInteger '1'
v9 <- UnaryOperation '-', v8
v10 <- CallFunction v0, [v9]
v11 <- LoadInteger '1'
v12 <- UnaryOperation '-', v11
v13 <- LoadInteger '1'
v14 <- UnaryOperation '-', v13
v15 <- CallFunction v0, [v14]
v16 <- LoadInteger '1'
v17 <- UnaryOperation '-', v16
v18 <- LoadInteger '1'
v19 <- UnaryOperation '-', v18
v20 <- CallFunction v0, [v19]


function foo(a1) {
    return (a1 % 2) | 0;
}
-1;
foo(-1);
-1;
foo(-1);
-1;
foo(-1);

FuzzIL program written to corpus/regress-1476.fzil
