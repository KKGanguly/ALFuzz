v0 <- BeginPlainFunction -> v1, v2
    BeginObjectLiteral
        ObjectLiteralAddProperty `a`, v1
    v3 <- EndObjectLiteral
    v4 <- CreateNamedVariable 'x', 'var', v3
    v5 <- LoadString 'string'
    BeginSwitch v2
        BeginSwitchCase v5
        EndSwitchCase fallsThrough
    EndSwitch
    BeginObjectLiteral
        ObjectLiteralAddProperty `b`, v2
    v6 <- EndObjectLiteral
    v7 <- CreateNamedVariable 'y', 'var', v6
    Return v7
EndPlainFunction
v8 <- LoadString 'a'
v9 <- LoadString 'b'
v10 <- CallFunction v0, [v8, v9]
v11 <- LoadString 'a'
v12 <- LoadString 'b'
v13 <- CallFunction v0, [v11, v12]
v14 <- LoadString 'a'
v15 <- LoadString 'b'
v16 <- CallFunction v0, [v14, v15]
v17 <- LoadString 'bang'
v18 <- LoadString 'bo'
v19 <- LoadString 'om'
v20 <- BinaryOperation v18, '+', v19
v21 <- CallFunction v0, [v17, v20]
v22 <- CreateNamedVariable 'killer', 'var', v21
v23 <- LoadString 'boom'
v24 <- GetProperty v22, 'b'


function f(a1, a2) {
    var x = { a: a1 };
    switch (a2) {
        case "string":
    }
    var y = { b: a2 };
    return y;
}
f("a", "b");
f("a", "b");
f("a", "b");
var killer = f("bang", "bo" + "om");
killer.b;

FuzzIL program written to corpus/regress-crbug-274438.fzil
