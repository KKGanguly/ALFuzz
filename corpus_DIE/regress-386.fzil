v0 <- BeginPlainFunction -> 
    BeginForLoopInitializer
        v1 <- LoadInteger '0'
    BeginForLoopCondition -> v2
        v3 <- LoadInteger '13'
        v4 <- Compare v2, '<', v3
    BeginForLoopAfterthought v4 -> v5
        v6 <- UnaryOperation v5, '++'
    BeginForLoopBody -> v7
        v8 <- LoadThis
        v9 <- LoadString 'a'
        v10 <- BinaryOperation v9, '+', v7
        SetComputedProperty v8, v10, v7
    EndForLoop
    v11 <- BeginPlainFunction -> 
    EndPlainFunction
    v12 <- LoadThis
    SetProperty v12, 'i', v11
EndPlainFunction
v13 <- Construct v0, []
v14 <- Construct v0, []


function A() {
    for (let i2 = 0; i2 < 13; i2++) {
        this["a" + i2] = i2;
    }
    function f11() {
    }
    this.i = f11;
}
new A();
new A();

FuzzIL program written to corpus/regress-386.fzil
