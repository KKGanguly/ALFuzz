v0 <- BeginPlainFunction -> v1
    v2 <- CreateArray []
    v3 <- CreateNamedVariable 'a', 'var', v2
    v4 <- LoadString 'length'
    v5 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `writable`, v5
    v6 <- EndObjectLiteral
    v7 <- CreateNamedVariable 'Object', 'none'
    v8 <- CallMethod v7, 'defineProperty', [v3, v4, v6]
    v9 <- BeginPlainFunction -> v10
        v11 <- BeginPlainFunction -> 
            v12 <- CallFunction v10, [v3]
        EndPlainFunction
        v13 <- CallFunction v11, []
        v14 <- CreateNamedVariable 'TypeError', 'none'
        v15 <- LoadInteger '0'
        v16 <- TestIn v15, v3
        v17 <- LoadInteger '0'
        v18 <- GetProperty v3, 'length'
    EndPlainFunction
    v19 <- BeginPlainFunction -> v20
        v21 <- LoadInteger '3'
        v22 <- CallMethod v20, 'push', [v21]
    EndPlainFunction
    v23 <- CallFunction v9, [v19]
    v24 <- CallFunction v9, [v19]
    v25 <- CallFunction v9, [v19]
    v26 <- CallFunction v9, [v19]
    v27 <- BeginPlainFunction -> v28
        v29 <- LoadInteger '3'
        v30 <- CallMethod v28, 'unshift', [v29]
    EndPlainFunction
    v31 <- CallFunction v9, [v27]
    v32 <- CallFunction v9, [v27]
    v33 <- CallFunction v9, [v27]
    v34 <- CallFunction v9, [v27]
    v35 <- BeginPlainFunction -> v36
        v37 <- LoadInteger '0'
        v38 <- LoadInteger '0'
        v39 <- LoadInteger '3'
        v40 <- CallMethod v36, 'splice', [v37, v38, v39]
    EndPlainFunction
    v41 <- CallFunction v9, [v35]
    v42 <- CallFunction v9, [v35]
    v43 <- CallFunction v9, [v35]
    v44 <- CallFunction v9, [v35]
EndPlainFunction
v45 <- LoadString 'fast properties'
v46 <- CallFunction v0, [v45]
v47 <- LoadString 'normalized'
v48 <- CallFunction v0, [v47]
v49 <- BeginPlainFunction -> v50, v51
    v52 <- LoadString 'length'
    v53 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `writable`, v53
    v54 <- EndObjectLiteral
    v55 <- CreateNamedVariable 'Object', 'none'
    v56 <- CallMethod v55, 'defineProperty', [v50, v52, v54]
    v57 <- BeginPlainFunction -> v58
        v59 <- BeginPlainFunction -> 
            v60 <- CallFunction v58, [v50]
        EndPlainFunction
        v61 <- CallFunction v59, []
        v62 <- CreateNamedVariable 'TypeError', 'none'
        v63 <- LoadInteger '3'
        v64 <- GetProperty v50, 'length'
    EndPlainFunction
    v65 <- BeginPlainFunction -> v66
        v67 <- CallMethod v66, 'pop', []
    EndPlainFunction
    v68 <- CallFunction v57, [v65]
    v69 <- CallFunction v57, [v65]
    v70 <- CallFunction v57, [v65]
    v71 <- CallFunction v57, [v65]
    v72 <- BeginPlainFunction -> v73
        v74 <- CallMethod v73, 'shift', []
    EndPlainFunction
    v75 <- CallFunction v57, [v72]
    v76 <- CallFunction v57, [v72]
    v77 <- CallFunction v57, [v72]
    v78 <- CallFunction v57, [v72]
    v79 <- BeginPlainFunction -> v80
        v81 <- LoadInteger '0'
        v82 <- LoadInteger '1'
        v83 <- CallMethod v80, 'splice', [v81, v82]
    EndPlainFunction
    v84 <- CallFunction v57, [v79]
    v85 <- CallFunction v57, [v79]
    v86 <- CallFunction v57, [v79]
    v87 <- CallFunction v57, [v79]
EndPlainFunction
BeginForLoopInitializer
    v88 <- LoadInteger '0'
BeginForLoopCondition -> v89
    v90 <- LoadInteger '3'
    v91 <- Compare v89, '<', v90
BeginForLoopAfterthought v91 -> v92
    v93 <- UnaryOperation v92, '++'
BeginForLoopBody -> v94
    v95 <- LoadInteger '1'
    v96 <- LoadInteger '2'
    v97 <- LoadInteger '3'
    v98 <- CreateArray [v95, v96, v97]
    v99 <- CreateNamedVariable 'a', 'var', v98
    v100 <- LoadInteger '1'
    v101 <- Compare v94, '==', v100
    BeginIf v101
        v102 <- LoadInteger '1'
        v103 <- LoadInteger '2'
        v104 <- LoadFloat '3.5'
        v105 <- CreateArray [v102, v103, v104]
        Reassign v99, v105
    BeginElse
        v106 <- LoadInteger '2'
        v107 <- Compare v94, '==', v106
        BeginIf v107
            v108 <- LoadInteger '1'
            v109 <- LoadInteger '2'
            v110 <- LoadString 'string'
            v111 <- CreateArray [v108, v109, v110]
            Reassign v99, v111
        EndIf
    EndIf
    v112 <- LoadString 'fast properties'
    v113 <- CallFunction v49, [v99, v112]
    v114 <- LoadString 'normalized'
    v115 <- CallFunction v49, [v99, v114]
EndForLoop
v116 <- CreateArray []
v117 <- CreateNamedVariable 'b', 'var', v116
v118 <- GetProperty v117, '__proto__'
v119 <- LoadString '0'
v120 <- BeginPlainFunction -> v121
    SetProperty v117, 'x', v121
    v122 <- LoadString 'length'
    v123 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `writable`, v123
    v124 <- EndObjectLiteral
    v125 <- CreateNamedVariable 'Object', 'none'
    v126 <- CallMethod v125, 'defineProperty', [v117, v122, v124]
EndPlainFunction
v127 <- BeginPlainFunction -> 
    v128 <- GetProperty v117, 'x'
    Return v128
EndPlainFunction
BeginObjectLiteral
    ObjectLiteralAddProperty `set`, v120
    ObjectLiteralAddProperty `get`, v127
v129 <- EndObjectLiteral
v130 <- CreateNamedVariable 'Object', 'none'
v131 <- CallMethod v130, 'defineProperty', [v118, v119, v129]
v132 <- CreateArray []
Reassign v117, v132
BeginTry
    v133 <- LoadInteger '3'
    v134 <- LoadInteger '4'
    v135 <- LoadInteger '5'
    v136 <- CallMethod v117, 'push', [v133, v134, v135]
BeginCatch -> v137
EndTryCatch
v138 <- LoadInteger '1'
v139 <- TestIn v138, v117
v140 <- LoadInteger '2'
v141 <- TestIn v140, v117
v142 <- LoadInteger '0'
v143 <- GetProperty v117, 'length'
v144 <- CreateArray []
Reassign v117, v144
BeginTry
    v145 <- LoadInteger '3'
    v146 <- LoadInteger '4'
    v147 <- LoadInteger '5'
    v148 <- CallMethod v117, 'unshift', [v145, v146, v147]
BeginCatch -> v149
EndTryCatch
v150 <- LoadInteger '1'
v151 <- TestIn v150, v117
v152 <- LoadInteger '2'
v153 <- TestIn v152, v117
v154 <- LoadInteger '0'
v155 <- GetProperty v117, 'length'
v156 <- LoadInteger '1'
v157 <- LoadInteger '2'
v158 <- CreateArray [v156, v157]
Reassign v117, v158
BeginTry
    v159 <- LoadInteger '3'
    v160 <- LoadInteger '4'
    v161 <- LoadInteger '5'
    v162 <- CallMethod v117, 'unshift', [v159, v160, v161]
BeginCatch -> v163
EndTryCatch
v164 <- LoadInteger '3'
v165 <- GetElement v117, '0'
v166 <- LoadInteger '4'
v167 <- GetElement v117, '1'
v168 <- LoadInteger '5'
v169 <- GetElement v117, '2'
v170 <- LoadInteger '1'
v171 <- GetElement v117, '3'
v172 <- LoadInteger '2'
v173 <- GetElement v117, '4'
v174 <- LoadInteger '5'
v175 <- GetProperty v117, 'length'
v176 <- LoadInteger '1'
v177 <- LoadInteger '2'
v178 <- CreateArray [v176, v177]
Reassign v117, v178
v179 <- GetProperty v117, '__proto__'
v180 <- LoadString '4'
v181 <- BeginPlainFunction -> v182
    SetProperty v117, 'z', v182
    v183 <- LoadString 'length'
    v184 <- LoadBoolean 'false'
    BeginObjectLiteral
        ObjectLiteralAddProperty `writable`, v184
    v185 <- EndObjectLiteral
    v186 <- CallMethod v130, 'defineProperty', [v117, v183, v185]
EndPlainFunction
v187 <- BeginPlainFunction -> 
    v188 <- GetProperty v117, 'z'
    Return v188
EndPlainFunction
BeginObjectLiteral
    ObjectLiteralAddProperty `set`, v181
    ObjectLiteralAddProperty `get`, v187
v189 <- EndObjectLiteral
v190 <- CallMethod v130, 'defineProperty', [v179, v180, v189]
BeginTry
    v191 <- LoadInteger '3'
    v192 <- LoadInteger '4'
    v193 <- LoadInteger '5'
    v194 <- CallMethod v117, 'unshift', [v191, v192, v193]
BeginCatch -> v195
EndTryCatch
v196 <- LoadInteger '2'
v197 <- TestIn v196, v117
v198 <- LoadInteger '3'
v199 <- TestIn v198, v117
v200 <- LoadInteger '2'
v201 <- GetProperty v117, 'length'


function testAdd(a1) {
    var a = [];
    Object.defineProperty(a, "length", { writable: false });
    function check(a10) {
        function f11() {
            a10(a);
        }
        f11();
        0 in a;
        a.length;
    }
    function push(a20) {
        a20.push(3);
    }
    check(push);
    check(push);
    check(push);
    check(push);
    function unshift(a28) {
        a28.unshift(3);
    }
    check(unshift);
    check(unshift);
    check(unshift);
    check(unshift);
    function splice(a36) {
        a36.splice(0, 0, 3);
    }
    check(splice);
    check(splice);
    check(splice);
    check(splice);
}
testAdd("fast properties");
testAdd("normalized");
function testRemove(a50, a51) {
    Object.defineProperty(a50, "length", { writable: false });
    function check(a58) {
        function f59() {
            a58(a50);
        }
        f59();
        a50.length;
    }
    function pop(a66) {
        a66.pop();
    }
    check(pop);
    check(pop);
    check(pop);
    check(pop);
    function shift(a73) {
        a73.shift();
    }
    check(shift);
    check(shift);
    check(shift);
    check(shift);
    function splice(a80) {
        a80.splice(0, 1);
    }
    check(splice);
    check(splice);
    check(splice);
    check(splice);
}
for (let i89 = 0; i89 < 3; i89++) {
    var a = [1,2,3];
    if (i89 == 1) {
        a = [1,2,3.5];
    } else {
        if (i89 == 2) {
            a = [1,2,"string"];
        }
    }
    testRemove(a, "fast properties");
    testRemove(a, "normalized");
}
var b = [];
const v118 = b.__proto__;
function f120(a121) {
    b.x = a121;
    Object.defineProperty(b, "length", { writable: false });
}
function f127() {
    return b.x;
}
Object.defineProperty(v118, "0", { set: f120, get: f127 });
b = [];
try {
    b.push(3, 4, 5);
} catch(e137) {
}
1 in b;
2 in b;
b.length;
b = [];
try {
    b.unshift(3, 4, 5);
} catch(e149) {
}
1 in b;
2 in b;
b.length;
b = [1,2];
try {
    b.unshift(3, 4, 5);
} catch(e163) {
}
b[0];
b[1];
b[2];
b[3];
b[4];
b.length;
b = [1,2];
const v179 = b.__proto__;
function f181(a182) {
    b.z = a182;
    Object.defineProperty(b, "length", { writable: false });
}
function f187() {
    return b.z;
}
Object.defineProperty(v179, "4", { set: f181, get: f187 });
try {
    b.unshift(3, 4, 5);
} catch(e195) {
}
2 in b;
3 in b;
b.length;

FuzzIL program written to corpus/array-methods-read-only-length.fzil
