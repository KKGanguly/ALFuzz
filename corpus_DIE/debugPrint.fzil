v0 <- CreateArray []
v1 <- CreateNamedVariable 'largeArray', 'var', v0
v2 <- LoadInteger '123'
SetElement v1, '16776960', v2
v3 <- BeginPlainFunction -> 
    v4 <- LoadArguments
    Return v4
EndPlainFunction
v5 <- BeginPlainFunction -> v6, v7
    v8 <- LoadArguments
    Return v8
EndPlainFunction
v9 <- BeginPlainFunction -> 
    v10 <- LoadInteger '1'
    v11 <- UnaryOperation '-', v10
    v12 <- LoadArguments
    SetElement v12, '1048575', v11
    v13 <- LoadArguments
    Return v13
EndPlainFunction
v14 <- BeginPlainFunction -> v15, v16
    v17 <- LoadInteger '1'
    v18 <- UnaryOperation '-', v17
    v19 <- LoadArguments
    SetElement v19, '1048575', v18
    v20 <- LoadArguments
    Return v20
EndPlainFunction
v21 <- LoadThis
v22 <- LoadBoolean 'true'
v23 <- LoadBoolean 'false'
v24 <- LoadNull
v25 <- LoadUndefined
v26 <- LoadInteger '1'
v27 <- LoadInteger '1'
v28 <- UnaryOperation '-', v27
v29 <- LoadFloat '1.1'
v30 <- LoadFloat '2.2'
v31 <- UnaryOperation '-', v30
v32 <- LoadInteger '0'
v33 <- UnaryOperation '-', v32
v34 <- LoadInteger '0'
v35 <- CreateNamedVariable 'Infinity', 'none'
v36 <- UnaryOperation '-', v35
v37 <- CreateNamedVariable 'NaN', 'none'
v38 <- LoadString 'aasdfasdfasdfasdf'
v39 <- LoadString 'a'
v40 <- LoadString 'b'
v41 <- BinaryOperation v39, '+', v40
BeginObjectLiteral
v42 <- EndObjectLiteral
v43 <- LoadInteger '1'
BeginObjectLiteral
    ObjectLiteralAddElement `1`, v43
v44 <- EndObjectLiteral
v45 <- LoadInteger '1'
BeginObjectLiteral
    ObjectLiteralAddProperty `a`, v45
v46 <- EndObjectLiteral
v47 <- LoadInteger '1'
v48 <- LoadInteger '2'
BeginObjectLiteral
    ObjectLiteralAddElement `1`, v47
    ObjectLiteralAddElement `2`, v48
v49 <- EndObjectLiteral
v50 <- LoadNull
v51 <- CreateNamedVariable 'Object', 'none'
v52 <- CallMethod v51, 'create', [v50]
v53 <- CreateArray []
BeginObjectLiteral
v54 <- EndObjectLiteral
BeginObjectLiteral
v55 <- EndObjectLiteral
v56 <- CreateArray [v54, v55]
v57 <- LoadInteger '1'
v58 <- LoadInteger '1'
v59 <- LoadInteger '1'
v60 <- CreateArray [v57, v58, v59]
v61 <- LoadFloat '1.1'
v62 <- LoadFloat '1.1'
v63 <- LoadFloat '1.1'
v64 <- LoadFloat '1.1'
v65 <- LoadInteger '2'
v66 <- CreateArray [v61, v62, v63, v64, v65]
v67 <- CreateNamedVariable 'Proxy', 'none'
BeginObjectLiteral
v68 <- EndObjectLiteral
BeginObjectLiteral
v69 <- EndObjectLiteral
v70 <- Construct v67, [v68, v69]
v71 <- CreateNamedVariable 'Date', 'none'
v72 <- Construct v71, []
v73 <- CreateNamedVariable 'String', 'none'
v74 <- LoadString ' a'
v75 <- Construct v73, [v74]
v76 <- CreateNamedVariable 'Uint8Array', 'none'
v77 <- LoadInteger '12'
v78 <- Construct v76, [v77]
v79 <- CreateNamedVariable 'Float32Array', 'none'
v80 <- LoadInteger '1'
v81 <- LoadInteger '2'
v82 <- LoadInteger '4'
v83 <- LoadInteger '5'
v84 <- CreateArray [v80, v81, v82, v83]
v85 <- Construct v79, [v84]
v86 <- CreateNamedVariable 'Uint8ClampedArray', 'none'
v87 <- LoadInteger '2048'
v88 <- Construct v86, [v87]
v89 <- LoadRegExp 'asdf' ''
v90 <- CreateNamedVariable 'RegExp', 'none'
v91 <- Construct v90, []
v92 <- GetProperty v51, 'create'
v93 <- CreateNamedVariable 'Array', 'none'
v94 <- CreateNamedVariable 'Symbol', 'none'
v95 <- GetProperty v94, 'iterator'
v96 <- CreateArray []
v97 <- GetProperty v94, 'iterator'
v98 <- CallComputedMethod v96, v97, []
v99 <- CreateNamedVariable 'Map', 'none'
v100 <- Construct v99, []
v101 <- CreateNamedVariable 'Set', 'none'
v102 <- Construct v101, []
v103 <- Construct v99, []
v104 <- CallMethod v103, 'entries', []
v105 <- Construct v101, []
v106 <- CallMethod v105, 'entries', []
v107 <- CallFunction v3, []
v108 <- LoadInteger '1'
v109 <- LoadInteger '2'
v110 <- LoadInteger '3'
v111 <- LoadInteger '4'
v112 <- CallFunction v3, [v108, v109, v110, v111]
v113 <- CallFunction v5, []
v114 <- LoadInteger '1'
v115 <- LoadInteger '2'
v116 <- LoadInteger '3'
v117 <- LoadInteger '4'
v118 <- CallFunction v5, [v114, v115, v116, v117]
v119 <- CallFunction v9, []
v120 <- LoadInteger '1'
v121 <- LoadInteger '2'
v122 <- LoadInteger '3'
v123 <- LoadInteger '4'
v124 <- CallFunction v9, [v120, v121, v122, v123]
v125 <- CallFunction v14, []
v126 <- LoadInteger '1'
v127 <- LoadInteger '2'
v128 <- LoadInteger '3'
v129 <- LoadInteger '4'
v130 <- CallFunction v14, [v126, v127, v128, v129]
v131 <- CreateArray [v21, v22, v23, v24, v25, v26, v28, v29, v31, v33, v34, v35, v36, v37, v38, v41, v42, v44, v46, v49, v52, v53, v56, v60, v66, v1, v70, v72, v75, v78, v85, v88, v89, v91, v92, v51, v93, v95, v98, v100, v102, v104, v106, v107, v112, v113, v118, v119, v124, v125, v130]
v132 <- CreateNamedVariable 'objects', 'var', v131


var largeArray = [];
largeArray[16776960] = 123;
function sloppyArguments() {
    return arguments;
}
function sloppyArguments2(a6, a7) {
    return arguments;
}
function slowSloppyArguments() {
    arguments[1048575] = -1;
    return arguments;
}
function slowSloppyArguments2(a15, a16) {
    arguments[1048575] = -1;
    return arguments;
}
const v28 = -1;
const v31 = -2.2;
const v33 = -0;
const v36 = -Infinity;
const v41 = "a" + "b";
const v42 = {};
const v44 = { 1: 1 };
const v46 = { a: 1 };
const v49 = { 1: 1, 2: 2 };
const v52 = Object.create(null);
const v53 = [];
const v54 = {};
const v56 = [v54,{}];
const v60 = [1,1,1];
const v66 = [1.1,1.1,1.1,1.1,2];
const v68 = {};
const v70 = new Proxy(v68, {});
const v72 = new Date();
const v75 = new String(" a");
const v78 = new Uint8Array(12);
const v85 = new Float32Array([1,2,4,5]);
const v88 = new Uint8ClampedArray(2048);
const v89 = /asdf/;
const v91 = new RegExp();
const v92 = Object.create;
const v95 = Symbol.iterator;
const v98 = ([])[Symbol.iterator]();
const v100 = new Map();
const v102 = new Set();
const v103 = new Map();
const v104 = v103.entries();
const v105 = new Set();
var objects = [this,true,false,null,,1,v28,1.1,v31,v33,0,Infinity,v36,NaN,"aasdfasdfasdfasdf",v41,v42,v44,v46,v49,v52,v53,v56,v60,v66,largeArray,v70,v72,v75,v78,v85,v88,v89,v91,v92,Object,Array,v95,v98,v100,v102,v104,v105.entries(),sloppyArguments(),sloppyArguments(1, 2, 3, 4),sloppyArguments2(),sloppyArguments2(1, 2, 3, 4),slowSloppyArguments(),slowSloppyArguments(1, 2, 3, 4),slowSloppyArguments2(),slowSloppyArguments2(1, 2, 3, 4)];

FuzzIL program written to corpus/debugPrint.fzil
